box2dLight.ConeLight -> a.a:
box2dLight.Light -> a.b:
    com.badlogic.gdx.graphics.Color DefaultColor -> a
    float zeroColorBits -> b
    com.badlogic.gdx.graphics.Mesh lightMesh -> c
    com.badlogic.gdx.graphics.Mesh softShadowMesh -> d
    com.badlogic.gdx.physics.box2d.Filter globalFilterA -> e
    232:234:void dispose() -> dispose
box2dLight.PointLight -> a.c:
box2dLight.PositionalLight -> a.d:
com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType HeadlessDesktop -> c
    com.badlogic.gdx.Application$ApplicationType Applet -> d
    com.badlogic.gdx.Application$ApplicationType WebGL -> e
    com.badlogic.gdx.Application$ApplicationType iOS -> f
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> g
    101:101:com.badlogic.gdx.Application$ApplicationType[] values() -> values
    101:101:com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.c:
    void create() -> a
    void resize(int,int) -> a
    void render() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Audio -> com.badlogic.gdx.d:
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.e:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.f:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    29:29:com.badlogic.gdx.Files$FileType[] values() -> values
    29:29:com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.g:
    com.badlogic.gdx.Screen screen -> a
    31:32:void dispose() -> e
    36:37:void pause() -> c
    41:42:void resume() -> d
    46:47:void render() -> b
    51:52:void resize(int,int) -> a
    58:64:void setScreen(com.badlogic.gdx.Screen) -> a
com.badlogic.gdx.Gdx -> com.badlogic.gdx.h:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GL20 gl -> g
    com.badlogic.gdx.graphics.GL20 gl20 -> h
    com.badlogic.gdx.graphics.GL30 gl30 -> i
com.badlogic.gdx.Graphics -> com.badlogic.gdx.i:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    float getDensity() -> getDensity
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean supportsExtension(java.lang.String) -> supportsExtension
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.j:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    95:95:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.k:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    68:68:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.l:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> a
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> b
    com.badlogic.gdx.Graphics$GraphicsType Angle -> c
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> d
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> e
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> f
    com.badlogic.gdx.Graphics$GraphicsType Mock -> g
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> h
    47:47:com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    47:47:com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.m:
    int getX() -> getX
    int getY() -> getY
    boolean isTouched() -> isTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.n:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    743:743:com.badlogic.gdx.Input$Orientation[] values() -> values
    743:743:com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.o:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> a
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> b
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> c
    com.badlogic.gdx.Input$Peripheral Accelerometer -> d
    com.badlogic.gdx.Input$Peripheral Compass -> e
    com.badlogic.gdx.Input$Peripheral Vibrator -> f
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> g
    560:560:com.badlogic.gdx.Input$Peripheral[] values() -> values
    560:560:com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.p:
    void input(java.lang.String) -> a
    void canceled() -> a
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.q:
    24:24:boolean keyDown(int) -> a
    28:28:boolean keyUp(int) -> b
    32:32:boolean keyTyped(char) -> a
    36:36:boolean touchDown(int,int,int,int) -> a
    40:40:boolean touchUp(int,int,int,int) -> b
    44:44:boolean touchDragged(int,int,int) -> a
    49:49:boolean mouseMoved(int,int) -> a
    54:54:boolean scrolled(int) -> c
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.r:
    com.badlogic.gdx.utils.Array processors -> a
    45:47:void addProcessor(com.badlogic.gdx.InputProcessor) -> a
    71:73:boolean keyDown(int) -> a
    77:79:boolean keyUp(int) -> b
    83:85:boolean keyTyped(char) -> a
    89:91:boolean touchDown(int,int,int,int) -> a
    95:97:boolean touchUp(int,int,int,int) -> b
    101:103:boolean touchDragged(int,int,int) -> a
    108:110:boolean mouseMoved(int,int) -> a
    115:117:boolean scrolled(int) -> c
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.s:
    boolean keyDown(int) -> a
    boolean keyUp(int) -> b
    boolean keyTyped(char) -> a
    boolean touchDown(int,int,int,int) -> a
    boolean touchUp(int,int,int,int) -> b
    boolean touchDragged(int,int,int) -> a
    boolean mouseMoved(int,int) -> a
    boolean scrolled(int) -> c
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.t:
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Net -> com.badlogic.gdx.u:
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.v:
    java.lang.String httpMethod -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    int timeOut -> d
    java.lang.String content -> e
    java.io.InputStream contentStream -> f
    long contentLength -> g
    boolean followRedirects -> h
    221:221:int getTimeOut() -> a
    226:226:java.lang.String getMethod() -> b
    231:231:java.lang.String getUrl() -> c
    236:236:java.lang.String getContent() -> d
    241:241:java.io.InputStream getContentStream() -> e
    251:251:java.util.Map getHeaders() -> f
    256:256:boolean getFollowRedirects() -> g
    261:271:void reset() -> reset
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.w:
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.x:
    void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse) -> a
    void failed(java.lang.Throwable) -> a
    void cancelled() -> a
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.y:
    com.badlogic.gdx.Net$Protocol TCP -> a
    com.badlogic.gdx.Net$Protocol[] $VALUES -> b
    320:320:com.badlogic.gdx.Net$Protocol[] values() -> values
    320:320:com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.z:
    com.badlogic.gdx.Preferences putBoolean(java.lang.String,boolean) -> putBoolean
    com.badlogic.gdx.Preferences putInteger(java.lang.String,int) -> putInteger
    com.badlogic.gdx.Preferences putString(java.lang.String,java.lang.String) -> putString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.aa:
    void show() -> a
    void render(float) -> a
    void resize(int,int) -> a
    void pause() -> b
    void resume() -> c
    void hide() -> d
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.a.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    com.badlogic.gdx.files.FileHandle file -> d
    56:60:java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.a.b:
    void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable) -> a
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.a.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.a.d:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.a.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> i
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    62:75:java.lang.Void call() -> a
    85:91:boolean update() -> b
    95:107:void handleSyncLoader() -> e
    110:143:void handleAsyncLoader() -> f
    146:147:com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor) -> a
    151:151:java.lang.Object getAsset() -> c
    34:34:java.lang.Object call() -> d
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.a.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectSet injected -> d
    com.badlogic.gdx.utils.ObjectMap loaders -> e
    com.badlogic.gdx.utils.Array loadQueue -> f
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> g
    java.util.Stack tasks -> h
    com.badlogic.gdx.assets.AssetErrorListener listener -> i
    int loaded -> j
    int toLoad -> k
    com.badlogic.gdx.utils.Logger log -> l
    109:117:java.lang.Object get(java.lang.String) -> a
    124:130:java.lang.Object get(java.lang.String,java.lang.Class) -> a
    156:212:void unload(java.lang.String) -> b
    229:236:java.lang.String getAssetFileName(java.lang.Object) -> a
    242:243:boolean isLoaded(java.lang.String) -> c
    269:280:com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> a
    287:288:void load(java.lang.String,java.lang.Class) -> b
    295:334:void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    346:357:boolean update() -> a
    376:380:void finishLoading() -> b
    394:401:void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> a
    405:425:void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    430:448:void nextTask() -> d
    453:456:void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> a
    461:470:void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> a
    475:505:boolean updateTask() -> e
    511:511:void taskFailed(com.badlogic.gdx.assets.AssetDescriptor,java.lang.RuntimeException) -> a
    515:524:void incrementRefCountedDependencies(java.lang.String) -> f
    529:553:void handleTaskError(java.lang.Throwable) -> a
    559:560:void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> a
    568:574:void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader) -> a
    601:604:void dispose() -> dispose
    608:646:void clear() -> c
    660:662:int getReferenceCount(java.lang.String) -> d
    668:671:void setReferenceCount(java.lang.String,int) -> a
    709:709:com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> e
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.a.g:
    java.lang.Object object -> a
    int refCount -> b
    29:30:void incRefCount() -> a
    33:34:void decRefCount() -> b
    37:37:int getRefCount() -> c
    41:42:void setRefCount(int) -> a
    45:45:java.lang.Object getObject(java.lang.Class) -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.a.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    42:42:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.a.a.b:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.a.a.c:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> a
    48:75:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    80:80:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    84:98:com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> b
    39:39:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    39:39:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    39:39:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.a.a.d:
    boolean flip -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> e
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> f
    java.lang.String atlasName -> g
com.badlogic.gdx.assets.loaders.CubemapLoader -> com.badlogic.gdx.a.a.e:
    com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo info -> a
    57:77:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> a
    81:92:com.badlogic.gdx.graphics.Cubemap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> b
    97:97:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> a
    42:42:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    42:42:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    42:42:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo -> com.badlogic.gdx.a.a.f:
    java.lang.String filename -> a
    com.badlogic.gdx.graphics.CubemapData data -> b
    com.badlogic.gdx.graphics.Cubemap cubemap -> c
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter -> com.badlogic.gdx.a.a.g:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    com.badlogic.gdx.graphics.Cubemap cubemap -> c
    com.badlogic.gdx.graphics.CubemapData cubemapData -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> h
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.a.a.h:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.I18NBundleLoader -> com.badlogic.gdx.a.a.i:
    com.badlogic.gdx.utils.I18NBundle bundle -> a
    55:70:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> a
    74:76:com.badlogic.gdx.utils.I18NBundle loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> b
    81:81:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> a
    45:45:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    45:45:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    45:45:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter -> com.badlogic.gdx.a.a.j:
    java.util.Locale locale -> b
    java.lang.String encoding -> c
com.badlogic.gdx.assets.loaders.ModelLoader -> com.badlogic.gdx.a.a.k:
    com.badlogic.gdx.utils.Array items -> a
    com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters defaultParameters -> b
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> a
    74:95:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> a
    100:100:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> a
    104:125:com.badlogic.gdx.graphics.g3d.Model loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> b
    35:35:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    35:35:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    35:35:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters -> com.badlogic.gdx.a.a.l:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter textureParameter -> b
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.a.a.m:
    com.badlogic.gdx.audio.Music music -> a
    39:40:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> a
    44:46:com.badlogic.gdx.audio.Music loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> b
    51:51:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> a
    29:29:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    29:29:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    29:29:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.a.a.n:
com.badlogic.gdx.assets.loaders.ParticleEffectLoader -> com.badlogic.gdx.a.a.o:
    37:44:com.badlogic.gdx.graphics.g2d.ParticleEffect load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> a
    49:54:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> a
    30:30:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    30:30:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter -> com.badlogic.gdx.a.a.p:
    java.lang.String atlasFile -> b
    java.lang.String atlasPrefix -> c
    com.badlogic.gdx.files.FileHandle imagesDir -> d
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.a.a.q:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    37:39:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> a
    43:45:com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> b
    50:50:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> a
    28:28:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    28:28:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.a.a.r:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.a.a.s:
    45:49:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    54:54:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    58:76:com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> b
    38:38:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    38:38:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    38:38:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.a.a.t:
    java.lang.String textureAtlasPath -> b
    com.badlogic.gdx.utils.ObjectMap resources -> c
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.a.a.u:
    com.badlogic.gdx.audio.Sound sound -> a
    39:40:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> a
    44:46:com.badlogic.gdx.audio.Sound loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> b
    51:51:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> a
    29:29:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    29:29:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    29:29:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.a.a.v:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.a.a.w:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.a.a.x:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> a
    43:48:com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> a
    53:70:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> a
    34:34:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.a.a.y:
    boolean flip -> b
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.a.a.z:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> a
    56:75:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    79:90:com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> b
    95:95:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    41:41:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    41:41:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    41:41:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.a.a.aa:
    java.lang.String filename -> a
    com.badlogic.gdx.graphics.TextureData data -> b
    com.badlogic.gdx.graphics.Texture texture -> c
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.a.a.ab:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.a.a.a.a:
    26:26:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.b.a:
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.b.b:
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.b.c:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.b.d:
    void onCompletion(com.badlogic.gdx.audio.Music) -> a
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.b.e:
    long play() -> play
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    com.badlogic.gdx.utils.Array androidEventListeners -> androidEventListeners
    int logLevel -> logLevel
    boolean useImmersiveMode -> useImmersiveMode
    boolean hideStatusBar -> hideStatusBar
    int wasFocusChanged -> wasFocusChanged
    boolean isWaitingForAudio -> isWaitingForAudio
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    87:89:void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    99:100:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    110:111:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    125:126:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    130:195:void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    198:201:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    205:208:void createWakeLock(boolean) -> createWakeLock
    211:222:void hideStatusBar(boolean) -> hideStatusBar
    226:238:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    243:255:void useImmersiveMode(boolean) -> useImmersiveMode
    259:282:void onPause() -> onPause
    286:310:void onResume() -> onResume
    314:315:void onDestroy() -> onDestroy
    319:319:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    324:324:com.badlogic.gdx.Audio getAudio() -> getAudio
    329:329:com.badlogic.gdx.Files getFiles() -> getFiles
    334:334:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    339:339:com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    344:344:com.badlogic.gdx.Net getNet() -> getNet
    349:349:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    354:354:int getVersion() -> getVersion
    359:359:long getJavaHeap() -> getJavaHeap
    364:364:long getNativeHeap() -> getNativeHeap
    369:369:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    376:379:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    384:388:void postRunnable(java.lang.Runnable) -> postRunnable
    392:396:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    400:406:void exit() -> exit
    410:413:void debug(java.lang.String,java.lang.String) -> debug
    417:420:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    424:425:void log(java.lang.String,java.lang.String) -> log
    429:430:void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    434:435:void error(java.lang.String,java.lang.String) -> error
    439:440:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    444:445:void setLogLevel(int) -> setLogLevel
    449:449:int getLogLevel() -> getLogLevel
    454:457:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    461:464:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    468:476:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    480:483:void addAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> addAndroidEventListener
    487:490:void removeAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> removeAndroidEventListener
    494:494:android.content.Context getContext() -> getContext
    499:499:com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    504:504:com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    509:509:com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    514:514:android.view.Window getApplicationWindow() -> getApplicationWindow
    519:519:android.os.Handler getHandler() -> getHandler
    59:59:com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    151:151:void resume() -> resume
    155:156:void pause() -> pause
    160:161:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidApplication$2 -> com.badlogic.gdx.backends.android.AndroidApplication$2:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    403:404:void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationBase -> com.badlogic.gdx.backends.android.AndroidApplicationBase:
    int MINIMUM_SDK -> MINIMUM_SDK
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void startActivity(android.content.Intent) -> startActivity
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.view.WindowManager getWindowManager() -> getWindowManager
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.os.Handler getHandler() -> getHandler
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    boolean disableAudio -> disableAudio
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
    boolean useImmersiveMode -> useImmersiveMode
    boolean useGLSurfaceView20API18 -> useGLSurfaceView20API18
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    61:74:void pause() -> pause
    77:86:void resume() -> resume
    91:94:com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    100:132:com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    141:159:com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    167:170:com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    175:186:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    53:55:void dispose() -> dispose
    59:59:boolean isMono() -> isMono
    64:67:void writeSamples(short[],int,int) -> writeSamples
    71:85:void writeSamples(float[],int,int) -> writeSamples
    89:89:int getLatency() -> getLatency
    94:95:void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    44:46:void dispose() -> dispose
    50:54:void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    36:47:java.lang.String getContents() -> getContents
    54:69:void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidClipboard$1 -> com.badlogic.gdx.backends.android.AndroidClipboard$1:
    java.lang.String val$contents -> val$contents
    com.badlogic.gdx.backends.android.AndroidClipboard this$0 -> this$0
    56:65:void run() -> run
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    82:84:void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    93:94:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    103:104:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    117:118:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    122:166:void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    169:172:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    176:179:void createWakeLock(boolean) -> createWakeLock
    182:193:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    197:216:void onDreamingStopped() -> onDreamingStopped
    220:238:void onDreamingStarted() -> onDreamingStarted
    242:243:void onDetachedFromWindow() -> onDetachedFromWindow
    247:247:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    252:252:com.badlogic.gdx.Audio getAudio() -> getAudio
    257:257:com.badlogic.gdx.Files getFiles() -> getFiles
    262:262:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    267:267:com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    272:272:com.badlogic.gdx.Net getNet() -> getNet
    277:277:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    282:282:int getVersion() -> getVersion
    287:287:long getJavaHeap() -> getJavaHeap
    292:292:long getNativeHeap() -> getNativeHeap
    297:297:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    304:307:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    312:316:void postRunnable(java.lang.Runnable) -> postRunnable
    320:324:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    328:334:void exit() -> exit
    338:341:void debug(java.lang.String,java.lang.String) -> debug
    345:348:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    352:353:void log(java.lang.String,java.lang.String) -> log
    357:358:void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    362:363:void error(java.lang.String,java.lang.String) -> error
    367:368:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    372:373:void setLogLevel(int) -> setLogLevel
    377:377:int getLogLevel() -> getLogLevel
    382:385:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    389:392:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    396:396:android.content.Context getContext() -> getContext
    401:401:com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    406:406:com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    411:411:com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    416:416:android.view.Window getApplicationWindow() -> getApplicationWindow
    421:421:android.os.Handler getHandler() -> getHandler
    426:435:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    439:439:void useImmersiveMode(boolean) -> useImmersiveMode
    60:60:com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    137:138:void resume() -> resume
    142:143:void pause() -> pause
    147:149:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidDaydream$2 -> com.badlogic.gdx.backends.android.AndroidDaydream$2:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    331:332:void run() -> run
com.badlogic.gdx.backends.android.AndroidEventListener -> com.badlogic.gdx.backends.android.AndroidEventListener:
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    50:52:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    56:58:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    62:69:com.badlogic.gdx.files.FileHandle parent() -> parent
    73:80:java.io.InputStream read() -> read
    84:95:com.badlogic.gdx.files.FileHandle[] list() -> list
    99:121:com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    125:146:com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    150:171:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    175:182:boolean isDirectory() -> isDirectory
    186:200:boolean exists() -> exists
    204:220:long length() -> length
    224:224:long lastModified() -> lastModified
    228:229:java.io.File file() -> file
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    45:45:com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    50:50:com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    55:55:com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    60:60:com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    65:65:com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    70:70:com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    75:75:java.lang.String getExternalStoragePath() -> getExternalStoragePath
    80:80:boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    85:85:java.lang.String getLocalStoragePath() -> getLocalStoragePath
    90:90:boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidFragmentApplication -> com.badlogic.gdx.backends.android.AndroidFragmentApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    com.badlogic.gdx.utils.Array androidEventListeners -> androidEventListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks callbacks -> callbacks
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    73:84:void onAttach(android.app.Activity) -> onAttach
    88:90:void onDetach() -> onDetach
    93:96:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    100:103:void createWakeLock(boolean) -> createWakeLock
    108:121:void useImmersiveMode(boolean) -> useImmersiveMode
    133:134:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    150:199:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    204:229:void onPause() -> onPause
    233:251:void onResume() -> onResume
    255:255:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    260:260:com.badlogic.gdx.Audio getAudio() -> getAudio
    265:265:com.badlogic.gdx.Files getFiles() -> getFiles
    270:270:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    275:275:com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    280:280:com.badlogic.gdx.Net getNet() -> getNet
    285:285:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    290:290:int getVersion() -> getVersion
    295:295:long getJavaHeap() -> getJavaHeap
    300:300:long getNativeHeap() -> getNativeHeap
    305:305:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    312:315:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    320:324:void postRunnable(java.lang.Runnable) -> postRunnable
    328:332:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    336:342:void exit() -> exit
    346:349:void debug(java.lang.String,java.lang.String) -> debug
    353:356:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    360:361:void log(java.lang.String,java.lang.String) -> log
    365:366:void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    370:371:void error(java.lang.String,java.lang.String) -> error
    375:376:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    380:381:void setLogLevel(int) -> setLogLevel
    385:385:int getLogLevel() -> getLogLevel
    390:393:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    397:400:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    404:404:android.content.Context getContext() -> getContext
    409:409:com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    414:414:com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    419:420:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    424:424:com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    429:437:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    441:444:void addAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> addAndroidEventListener
    448:451:void removeAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> removeAndroidEventListener
    455:455:android.view.Window getApplicationWindow() -> getApplicationWindow
    460:460:android.os.Handler getHandler() -> getHandler
    465:465:android.view.WindowManager getWindowManager() -> getWindowManager
    474:483:boolean isAnyParentFragmentRemoving() -> isAnyParentFragmentRemoving
    42:42:com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$1:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    167:168:void resume() -> resume
    172:173:void pause() -> pause
    177:178:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$2:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    339:340:void run() -> run
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks:
    void exit() -> exit
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDeleteTexture(int) -> glDeleteTexture
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    int glGenBuffer() -> glGenBuffer
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    int glGenFramebuffer() -> glGenFramebuffer
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    int glGenRenderbuffer() -> glGenRenderbuffer
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGenTexture() -> glGenTexture
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1fv(int,int,float[],int) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform1iv(int,int,int[],int) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2fv(int,int,float[],int) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform2iv(int,int,int[],int) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3fv(int,int,float[],int) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform3iv(int,int,int[],int) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4fv(int,int,float[],int) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniform4iv(int,int,int[],int) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix2fv(int,int,boolean,float[],int) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix3fv(int,int,boolean,float[],int) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGL30 -> com.badlogic.gdx.backends.android.AndroidGL30:
    26:27:void glReadBuffer(int) -> glReadBuffer
    31:32:void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    36:37:void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    42:43:void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    48:49:void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    54:55:void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    60:61:void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    66:67:void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    96:97:void glGenQueries(int,int[],int) -> glGenQueries
    101:102:void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    106:107:void glDeleteQueries(int,int[],int) -> glDeleteQueries
    111:112:void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    116:116:boolean glIsQuery(int) -> glIsQuery
    121:122:void glBeginQuery(int,int) -> glBeginQuery
    126:127:void glEndQuery(int) -> glEndQuery
    136:137:void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    146:147:void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    151:151:boolean glUnmapBuffer(int) -> glUnmapBuffer
    156:156:java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    166:167:void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    176:177:void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    186:187:void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    196:197:void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    206:207:void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    216:217:void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    226:227:void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    232:233:void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    237:238:void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    242:243:void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    252:253:void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    257:258:void glBindVertexArray(int) -> glBindVertexArray
    262:263:void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    267:268:void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    272:273:void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    277:278:void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    282:282:boolean glIsVertexArray(int) -> glIsVertexArray
    297:298:void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    302:303:void glEndTransformFeedback() -> glEndTransformFeedback
    307:308:void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    312:313:void glBindBufferBase(int,int,int) -> glBindBufferBase
    317:318:void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    345:346:void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    355:356:void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    365:366:void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    370:371:void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    375:376:void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    405:406:void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    410:410:int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    440:441:void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    460:461:void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    470:471:void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    480:481:void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    490:491:void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    501:502:void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    506:507:void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    511:511:java.lang.String glGetStringi(int,int) -> glGetStringi
    516:517:void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    527:528:void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    539:540:void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    544:544:int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    555:556:void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    569:570:void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    574:574:java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    579:580:void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    584:585:void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    594:595:void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    629:630:void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    659:660:void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    664:665:void glGenSamplers(int,int[],int) -> glGenSamplers
    669:670:void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    674:675:void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    679:680:void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    684:684:boolean glIsSampler(int) -> glIsSampler
    689:690:void glBindSampler(int,int) -> glBindSampler
    694:695:void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    705:706:void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    710:711:void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    720:721:void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    731:732:void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    741:742:void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    746:747:void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    751:752:void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    756:757:void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    761:762:void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    766:767:void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    771:772:void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    776:776:boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    781:782:void glPauseTransformFeedback() -> glPauseTransformFeedback
    786:787:void glResumeTransformFeedback() -> glResumeTransformFeedback
    808:809:void glProgramParameteri(int,int,int) -> glProgramParameteri
    818:819:void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    831:832:void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean enforceContinuousRendering -> enforceContinuousRendering
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    long frameId -> frameId
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    116:124:void preserveEGLContextOnPause() -> preserveEGLContextOnPause
    127:146:android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    151:155:void onPauseGLSurfaceView() -> onPauseGLSurfaceView
    158:162:void onResumeGLSurfaceView() -> onResumeGLSurfaceView
    165:165:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    169:177:void updatePpi() -> updatePpi
    180:194:boolean checkGL20() -> checkGL20
    200:200:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    206:206:int getHeight() -> getHeight
    212:212:int getWidth() -> getWidth
    221:232:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    236:248:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    252:272:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    275:294:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    299:302:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    308:312:void resume() -> resume
    315:339:void pause() -> pause
    342:354:void destroy() -> destroy
    358:453:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    457:457:long getFrameId() -> getFrameId
    463:463:float getDeltaTime() -> getDeltaTime
    468:468:float getRawDeltaTime() -> getRawDeltaTime
    474:474:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    480:480:int getFramesPerSecond() -> getFramesPerSecond
    484:491:void clearManagedCaches() -> clearManagedCaches
    494:499:void logManagedCachesStatus() -> logManagedCachesStatus
    502:502:android.view.View getView() -> getView
    507:507:float getPpiX() -> getPpiX
    512:512:float getPpiY() -> getPpiY
    517:517:float getPpcX() -> getPpcX
    522:522:float getPpcY() -> getPpcY
    527:527:float getDensity() -> getDensity
    532:532:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    537:537:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    542:542:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    547:547:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    553:553:void setTitle(java.lang.String) -> setTitle
    563:565:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    570:570:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    575:575:void setVSync(boolean) -> setVSync
    579:580:boolean supportsExtension(java.lang.String) -> supportsExtension
    585:593:void setContinuousRendering(boolean) -> setContinuousRendering
    597:597:boolean isContinuousRendering() -> isContinuousRendering
    602:606:void requestRendering() -> requestRendering
    610:610:boolean isFullscreen() -> isFullscreen
    615:615:boolean isGL30Available() -> isGL30Available
    620:620:com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    52:54:android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    63:104:android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    111:128:void onDestroyGLSurfaceView() -> onDestroyGLSurfaceView
    132:145:void resume() -> resume
    149:244:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    249:252:void logManagedCachesStatus() -> logManagedCachesStatus
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    71:71:android.view.SurfaceHolder getHolder() -> getHolder
    76:77:void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    90:90:android.view.SurfaceHolder getHolder() -> getHolder
    95:96:void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    int NUM_TOUCHES -> NUM_TOUCHES
    int SUPPORTED_KEYS -> SUPPORTED_KEYS
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] button -> button
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    int keyCount -> keyCount
    boolean[] keys -> keys
    boolean keyJustPressed -> keyJustPressed
    boolean[] justPressedKeys -> justPressedKeys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    183:183:float getAccelerometerX() -> getAccelerometerX
    188:188:float getAccelerometerY() -> getAccelerometerY
    193:193:float getAccelerometerZ() -> getAccelerometerZ
    198:241:void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String) -> getTextInput
    245:247:int getX() -> getX
    252:254:int getY() -> getY
    259:261:int getX(int) -> getX
    266:268:int getY(int) -> getY
    272:274:boolean isTouched(int) -> isTouched
    279:285:boolean isKeyPressed(int) -> isKeyPressed
    290:296:boolean isKeyJustPressed(int) -> isKeyJustPressed
    301:310:boolean isTouched() -> isTouched
    314:317:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    320:398:void processEvents() -> processEvents
    404:419:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    426:427:void onTap(int,int) -> onTap
    433:434:void onDrop(int,int) -> onDrop
    437:455:void postTap(int,int) -> postTap
    459:543:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    548:561:void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    565:566:void setCatchBackKey(boolean) -> setCatchBackKey
    570:570:boolean isCatchBackKey() -> isCatchBackKey
    575:576:void setCatchMenuKey(boolean) -> setCatchMenuKey
    580:581:void vibrate(int) -> vibrate
    585:586:void vibrate(long[],int) -> vibrate
    590:591:void cancelVibrate() -> cancelVibrate
    595:595:boolean justTouched() -> justTouched
    600:609:boolean isButtonPressed(int) -> isButtonPressed
    616:622:void updateOrientation() -> updateOrientation
    630:631:void getRotationMatrix(float[]) -> getRotationMatrix
    635:638:float getAzimuth() -> getAzimuth
    643:646:float getPitch() -> getPitch
    651:654:float getRoll() -> getRoll
    658:686:void registerSensorListeners() -> registerSensorListeners
    689:701:void unregisterSensorListeners() -> unregisterSensorListeners
    705:705:com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    710:716:boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    720:733:int getFreePointerIndex() -> getFreePointerIndex
    737:739:int[] resize(int[]) -> resize
    743:745:boolean[] resize(boolean[]) -> resize
    749:759:int lookUpPointerIndex(int) -> lookUpPointerIndex
    764:782:int getRotation() -> getRotation
    788:788:com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    793:793:void setCursorCatched(boolean) -> setCursorCatched
    797:797:boolean isCursorCatched() -> isCursorCatched
    802:802:int getDeltaX() -> getDeltaX
    807:807:int getDeltaX(int) -> getDeltaX
    812:812:int getDeltaY() -> getDeltaY
    817:817:int getDeltaY(int) -> getDeltaY
    822:822:void setCursorPosition(int,int) -> setCursorPosition
    826:826:void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    830:830:long getCurrentEventTime() -> getCurrentEventTime
    834:835:void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
    838:845:void onPause() -> onPause
    848:849:void onResume() -> onResume
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    88:88:com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    86:86:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    94:94:com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    92:92:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$hint -> val$hint
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    200:239:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    209:215:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    212:213:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    219:225:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    222:223:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    230:236:void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    233:234:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    550:559:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    868:868:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    872:884:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int TOUCH_SCROLLED -> TOUCH_SCROLLED
    int TOUCH_MOVED -> TOUCH_MOVED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int scrollAmount -> scrollAmount
    int button -> button
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    31:45:com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    com.badlogic.gdx.backends.android.AndroidMouseHandler mouseHandler -> mouseHandler
    47:50:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    54:55:void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    76:104:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    107:135:void onPause() -> onPause
    138:156:void onResume() -> onResume
    167:180:void onDestroy() -> onDestroy
    184:184:android.view.WindowManager getWindowManager() -> getWindowManager
    188:188:com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    193:193:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    198:201:void postRunnable(java.lang.Runnable) -> postRunnable
    205:205:com.badlogic.gdx.Audio getAudio() -> getAudio
    210:210:com.badlogic.gdx.Files getFiles() -> getFiles
    215:215:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    220:220:com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    225:225:com.badlogic.gdx.Net getNet() -> getNet
    230:230:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    235:235:int getVersion() -> getVersion
    240:240:long getJavaHeap() -> getJavaHeap
    245:245:long getNativeHeap() -> getNativeHeap
    250:250:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    257:260:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    265:268:void debug(java.lang.String,java.lang.String) -> debug
    272:275:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    279:280:void log(java.lang.String,java.lang.String) -> log
    284:285:void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    289:290:void error(java.lang.String,java.lang.String) -> error
    294:295:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    299:300:void setLogLevel(int) -> setLogLevel
    304:304:int getLogLevel() -> getLogLevel
    310:310:void exit() -> exit
    314:317:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    321:324:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    328:328:android.content.Context getContext() -> getContext
    333:333:com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    338:338:com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    343:343:com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    348:349:void startActivity(android.content.Intent) -> startActivity
    353:353:android.view.Window getApplicationWindow() -> getApplicationWindow
    358:358:android.os.Handler getHandler() -> getHandler
    363:372:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    376:376:void useImmersiveMode(boolean) -> useImmersiveMode
    52:52:com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    82:85:void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    106:110:void onCreate() -> onCreate
    115:118:android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    124:125:void onCreateApplication() -> onCreateApplication
    130:132:void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    142:150:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    154:161:android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    172:178:void onDeepPauseApplication() -> onDeepPauseApplication
    184:195:void onDestroy() -> onDestroy
    199:201:void finalize() -> finalize
    206:206:com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    210:210:android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    234:238:void onCreate(android.view.SurfaceHolder) -> onCreate
    245:295:void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    302:314:void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    322:341:void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    347:362:void onVisibilityChanged(boolean) -> onVisibilityChanged
    365:375:void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    378:410:void onResume() -> onResume
    413:431:void onPause() -> onPause
    441:467:void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    471:472:void onDestroy() -> onDestroy
    481:485:android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    490:493:void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    513:528:void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    531:551:void notifyOffsetsChanged() -> notifyOffsetsChanged
    555:578:void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    539:547:void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    560:575:void run() -> run
com.badlogic.gdx.backends.android.AndroidMouseHandler -> com.badlogic.gdx.backends.android.AndroidMouseHandler:
    int deltaX -> deltaX
    int deltaY -> deltaY
    36:63:boolean onGenericMotion(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onGenericMotion
    67:79:void logAction(int) -> logAction
    82:89:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    32:104:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    107:125:void logAction(int,int) -> logAction
    128:133:int toGdxButton(int) -> toGdxButton
    137:145:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,int,long) -> postTouchEvent
    148:148:boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> onCompletionListener
    43:55:void dispose() -> dispose
    59:60:boolean isLooping() -> isLooping
    65:66:boolean isPlaying() -> isPlaying
    71:76:void pause() -> pause
    80:94:void play() -> play
    98:100:void setLooping(boolean) -> setLooping
    104:107:void setVolume(float) -> setVolume
    111:111:float getVolume() -> getVolume
    116:128:void setPan(float,float) -> setPan
    132:138:void stop() -> stop
    141:153:void setPosition(float) -> setPosition
    157:158:float getPosition() -> getPosition
    162:163:float getDuration() -> getDuration
    168:169:void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
    173:181:void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.AndroidMusic$1:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> this$0
    177:178:void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    50:51:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    55:56:void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    60:60:com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    65:65:com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    70:70:com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    75:92:boolean openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    83:88:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    66:83:android.app.Dialog createDialog() -> createDialog
    87:118:android.widget.TextView createView(android.content.Context) -> createView
    122:167:void setVisible(boolean) -> setVisible
    306:306:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    311:311:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    92:92:boolean getDefaultEditable() -> getDefaultEditable
    97:97:android.text.Editable getEditableText() -> getEditableText
    102:102:android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    107:108:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    113:114:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    130:160:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    136:139:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    150:157:boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    173:174:char charAt(int) -> charAt
    179:180:int length() -> length
    185:186:java.lang.CharSequence subSequence(int,int) -> subSequence
    191:192:void getChars(int,int,char[],int) -> getChars
    196:197:void removeSpan(java.lang.Object) -> removeSpan
    201:202:void setSpan(java.lang.Object,int,int,int) -> setSpan
    206:207:int getSpanEnd(java.lang.Object) -> getSpanEnd
    212:213:int getSpanFlags(java.lang.Object) -> getSpanFlags
    218:219:int getSpanStart(java.lang.Object) -> getSpanStart
    224:225:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    230:231:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    236:237:android.text.Editable append(java.lang.CharSequence) -> append
    242:243:android.text.Editable append(char) -> append
    248:249:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    254:255:void clear() -> clear
    259:260:void clearSpans() -> clearSpans
    264:265:android.text.Editable delete(int,int) -> delete
    270:271:android.text.InputFilter[] getFilters() -> getFilters
    276:277:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    282:283:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    288:289:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    294:295:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    300:301:void setFilters(android.text.InputFilter[]) -> setFilters
    169:169:java.lang.Appendable append(char) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    37:39:com.badlogic.gdx.Preferences putBoolean(java.lang.String,boolean) -> putBoolean
    44:46:com.badlogic.gdx.Preferences putInteger(java.lang.String,int) -> putInteger
    51:53:com.badlogic.gdx.Preferences putLong(java.lang.String,long) -> putLong
    58:60:com.badlogic.gdx.Preferences putFloat(java.lang.String,float) -> putFloat
    65:67:com.badlogic.gdx.Preferences putString(java.lang.String,java.lang.String) -> putString
    72:80:com.badlogic.gdx.Preferences put(java.util.Map) -> put
    85:85:boolean getBoolean(java.lang.String) -> getBoolean
    90:90:int getInteger(java.lang.String) -> getInteger
    95:95:long getLong(java.lang.String) -> getLong
    100:100:float getFloat(java.lang.String) -> getFloat
    105:105:java.lang.String getString(java.lang.String) -> getString
    110:110:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    115:115:int getInteger(java.lang.String,int) -> getInteger
    120:120:long getLong(java.lang.String,long) -> getLong
    125:125:float getFloat(java.lang.String,float) -> getFloat
    130:130:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    135:135:java.util.Map get() -> get
    140:140:boolean contains(java.lang.String) -> contains
    145:147:void clear() -> clear
    151:155:void flush() -> flush
    159:161:void remove(java.lang.String) -> remove
    164:167:void edit() -> edit
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    39:40:void dispose() -> dispose
    44:44:long play() -> play
    49:54:long play(float) -> play
    58:60:void stop() -> stop
    64:65:void stop(long) -> stop
    69:70:void pause() -> pause
    74:75:void pause(long) -> pause
    79:80:void resume() -> resume
    84:85:void resume(long) -> resume
    89:90:void setPitch(long,float) -> setPitch
    94:95:void setVolume(long,float) -> setVolume
    99:99:long loop() -> loop
    104:109:long loop(float) -> loop
    114:115:void setLooping(long,boolean) -> setLooping
    119:129:void setPan(long,float,float) -> setPan
    133:145:long play(float,float,float) -> play
    150:162:long loop(float,float,float) -> loop
    167:168:void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidVisibilityListener -> com.badlogic.gdx.backends.android.AndroidVisibilityListener:
    27:42:void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase) -> createListener
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1:
    com.badlogic.gdx.backends.android.AndroidApplicationBase val$application -> val$application
    com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0 -> this$0
    31:37:void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1:
    com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1 -> this$1
    34:35:void run() -> run
com.badlogic.gdx.backends.android.AndroidWallpaperListener -> com.badlogic.gdx.backends.android.AndroidWallpaperListener:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    27:30:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    31:31:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    64:66:void onMeasure(int,int) -> onMeasure
    72:102:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    112:129:void init(boolean,int,int) -> init
    150:153:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    79:90:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    95:100:void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    179:200:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    204:219:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    224:227:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    231:237:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    240:271:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    135:140:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    144:145:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    65:67:void onMeasure(int,int) -> onMeasure
    73:103:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    113:130:void init(boolean,int,int) -> init
    151:154:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 this$0 -> this$0
    80:91:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    96:101:void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    180:201:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    205:220:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    225:228:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    232:238:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    241:272:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    136:141:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    145:146:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    java.lang.String TAG -> TAG
    boolean LOG_ATTACH_DETACH -> LOG_ATTACH_DETACH
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_PAUSE_RESUME -> LOG_PAUSE_RESUME
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean LOG_RENDERER_DRAW_FRAME -> LOG_RENDERER_DRAW_FRAME
    boolean LOG_EGL -> LOG_EGL
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager -> sGLThreadManager
    java.lang.ref.WeakReference mThisWeakRef -> mThisWeakRef
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    boolean mDetached -> mDetached
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mEGLContextClientVersion -> mEGLContextClientVersion
    boolean mPreserveEGLContextOnPause -> mPreserveEGLContextOnPause
    241:249:void finalize() -> finalize
    254:264:void init() -> init
    280:281:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper) -> setGLWrapper
    293:294:void setDebugFlags(int) -> setDebugFlags
    301:301:int getDebugFlags() -> getDebugFlags
    323:324:void setPreserveEGLContextOnPause(boolean) -> setPreserveEGLContextOnPause
    330:330:boolean getPreserveEGLContextOnPause() -> getPreserveEGLContextOnPause
    360:373:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    386:388:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory) -> setEGLContextFactory
    400:402:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    417:419:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    436:437:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    454:456:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    485:487:void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    506:507:void setRenderMode(int) -> setRenderMode
    517:517:int getRenderMode() -> getRenderMode
    528:529:void requestRender() -> requestRender
    536:537:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    545:546:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    553:554:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    563:564:void onPause() -> onPause
    574:575:void onResume() -> onResume
    584:585:void queueEvent(java.lang.Runnable) -> queueEvent
    593:609:void onAttachedToWindow() -> onAttachedToWindow
    621:626:void onDetachedFromWindow() -> onDetachedFromWindow
    1854:1858:void checkRenderThreadState() -> checkRenderThreadState
    175:175:int access$200(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$200
    175:175:android.opengl.GLSurfaceView$EGLConfigChooser access$300(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$300
    175:175:com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$400(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$400
    175:175:com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$500(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$500
    175:175:com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$600(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$600
    175:175:int access$700(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$700
    175:175:com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$800() -> access$800
    175:175:boolean access$900(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$900
    175:175:android.opengl.GLSurfaceView$Renderer access$1000(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$1000
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1:
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    867:889:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    898:910:int[] filterConfigSpec(int[]) -> filterConfigSpec
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    941:961:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    967:970:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    781:784:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    790:797:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory:
    819:831:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    836:837:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper:
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    1013:1053:void start() -> start
    1068:1116:boolean createSurface() -> createSurface
    1124:1143:javax.microedition.khronos.opengles.GL createGL() -> createGL
    1151:1154:int swap() -> swap
    1161:1162:void destroySurface() -> destroySurface
    1165:1175:void destroySurfaceImp() -> destroySurfaceImp
    1181:1192:void finish() -> finish
    1195:1196:void throwEglException(java.lang.String) -> throwEglException
    1199:1204:void throwEglException(java.lang.String,int) -> throwEglException
    1208:1209:void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> logEglErrorAsWarning
    1213:1245:java.lang.String getErrorString(int) -> getErrorString
    1250:1250:java.lang.String formatEglError(java.lang.String,int) -> formatEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mRequestPaused -> mRequestPaused
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mSurfaceIsBad -> mSurfaceIsBad
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEglContext -> mHaveEglContext
    boolean mHaveEglSurface -> mHaveEglSurface
    boolean mFinishedCreatingEglSurface -> mFinishedCreatingEglSurface
    boolean mShouldReleaseEglContext -> mShouldReleaseEglContext
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper -> mEglHelper
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    1283:1295:void run() -> run
    1302:1306:void stopEglSurfaceLocked() -> stopEglSurfaceLocked
    1313:1318:void stopEglContextLocked() -> stopEglContextLocked
    1320:1611:void guardedRun() -> guardedRun
    1616:1616:boolean ableToDraw() -> ableToDraw
    1620:1620:boolean readyToDraw() -> readyToDraw
    1626:1633:void setRenderMode(int) -> setRenderMode
    1636:1638:int getRenderMode() -> getRenderMode
    1642:1646:void requestRender() -> requestRender
    1649:1666:void surfaceCreated() -> surfaceCreated
    1669:1683:void surfaceDestroyed() -> surfaceDestroyed
    1686:1703:void onPause() -> onPause
    1706:1725:void onResume() -> onResume
    1728:1749:void onWindowResize(int,int) -> onWindowResize
    1754:1765:void requestExitAndWait() -> requestExitAndWait
    1768:1770:void requestReleaseEglContextLocked() -> requestReleaseEglContextLocked
    1777:1784:void queueEvent(java.lang.Runnable) -> queueEvent
    1271:1271:boolean access$1102(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean) -> access$1102
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    java.lang.String TAG -> TAG
    boolean mGLESVersionCheckComplete -> mGLESVersionCheckComplete
    int mGLESVersion -> mGLESVersion
    boolean mGLESDriverCheckComplete -> mGLESDriverCheckComplete
    boolean mMultipleGLESContextsAllowed -> mMultipleGLESContextsAllowed
    boolean mLimitedGLESContexts -> mLimitedGLESContexts
    int kGLES_20 -> kGLES_20
    java.lang.String kMSM7K_RENDERER_PREFIX -> kMSM7K_RENDERER_PREFIX
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner -> mEglOwner
    1867:1872:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> threadExiting
    1882:1898:boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> tryAcquireEglContextLocked
    1906:1910:void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> releaseEglContextLocked
    1916:1916:boolean shouldReleaseEGLContextWhenPausing() -> shouldReleaseEGLContextWhenPausing
    1920:1921:boolean shouldTerminateEGLWhenPausing() -> shouldTerminateEGLWhenPausing
    1925:1941:void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> checkGLDriver
    1944:1960:void checkGLESVersion() -> checkGLESVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    1823:1824:void close() -> close
    1827:1828:void flush() -> flush
    1831:1840:void write(char[],int,int) -> write
    1843:1847:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    59:79:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    83:146:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    150:153:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    157:163:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    166:201:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    40:56:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.c.a:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    87:87:java.lang.String path() -> path
    92:92:java.lang.String name() -> name
    96:99:java.lang.String extension() -> extension
    104:107:java.lang.String nameWithoutExtension() -> nameWithoutExtension
    113:116:java.lang.String pathWithoutExtension() -> pathWithoutExtension
    120:120:com.badlogic.gdx.Files$FileType type() -> type
    126:127:java.io.File file() -> file
    133:144:java.io.InputStream read() -> read
    151:151:java.io.BufferedInputStream read(int) -> read
    157:157:java.io.Reader reader() -> reader
    163:168:java.io.Reader reader(java.lang.String) -> reader
    175:175:java.io.BufferedReader reader(int) -> reader
    182:184:java.io.BufferedReader reader(int,java.lang.String) -> reader
    191:191:java.lang.String readString() -> readString
    198:216:java.lang.String readString(java.lang.String) -> readString
    222:228:byte[] readBytes() -> readBytes
    233:234:int estimateLength() -> estimateLength
    243:256:int readBytes(byte[],int,int) -> readBytes
    264:272:java.io.OutputStream write(boolean) -> write
    282:282:java.io.OutputStream write(boolean,int) -> write
    291:302:void write(java.io.InputStream,boolean) -> write
    309:309:java.io.Writer writer(boolean) -> writer
    318:330:java.io.Writer writer(boolean,java.lang.String) -> writer
    339:340:void writeString(java.lang.String,boolean) -> writeString
    348:357:void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    364:372:void writeBytes(byte[],boolean) -> writeBytes
    379:387:void writeBytes(byte[],int,int,boolean) -> writeBytes
    394:400:com.badlogic.gdx.files.FileHandle[] list() -> list
    409:427:com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    436:453:com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    461:477:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    484:485:boolean isDirectory() -> isDirectory
    490:491:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    497:498:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    502:509:com.badlogic.gdx.files.FileHandle parent() -> parent
    514:517:void mkdirs() -> mkdirs
    522:529:boolean exists() -> exists
    535:537:boolean delete() -> delete
    543:545:boolean deleteDirectory() -> deleteDirectory
    551:552:void emptyDirectory() -> emptyDirectory
    557:560:void emptyDirectory(boolean) -> emptyDirectory
    571:585:void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    591:596:void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    601:611:long length() -> length
    618:618:long lastModified() -> lastModified
    623:625:boolean equals(java.lang.Object) -> equals
    630:633:int hashCode() -> hashCode
    637:637:java.lang.String toString() -> toString
    642:644:com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    650:655:com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    660:673:void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    676:677:boolean deleteDirectory(java.io.File) -> deleteDirectory
    682:687:void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    690:700:void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.c.b:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> a
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Vector3 tmpVec -> m
    com.badlogic.gdx.math.collision.Ray ray -> n
    void update() -> a
    194:202:com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> a
    212:213:com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> a
    236:240:com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> b
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color OLIVE -> o
    com.badlogic.gdx.graphics.Color PURPLE -> p
    com.badlogic.gdx.graphics.Color MAROON -> q
    com.badlogic.gdx.graphics.Color TEAL -> r
    com.badlogic.gdx.graphics.Color NAVY -> s
    float r -> t
    float g -> u
    float b -> v
    float a -> w
    83:87:com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> a
    95:99:com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> b
    141:156:com.badlogic.gdx.graphics.Color clamp() -> a
    168:172:com.badlogic.gdx.graphics.Color set(float,float,float,float) -> a
    271:274:boolean equals(java.lang.Object) -> equals
    279:283:int hashCode() -> hashCode
    290:291:float toFloatBits() -> b
    297:298:int toIntBits() -> c
    303:307:java.lang.String toString() -> toString
    313:317:com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> a
    338:339:float toFloatBits(float,float,float,float) -> b
    374:374:int rgba8888(float,float,float,float) -> c
    394:394:int rgba8888(com.badlogic.gdx.graphics.Color) -> c
    441:445:void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> a
    461:461:com.badlogic.gdx.graphics.Color cpy() -> d
com.badlogic.gdx.graphics.Colors -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.utils.ObjectMap map -> a
    43:43:com.badlogic.gdx.graphics.Color get(java.lang.String) -> a
    58:78:void reset() -> a
com.badlogic.gdx.graphics.Cubemap -> com.badlogic.gdx.graphics.c:
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedCubemaps -> a
    com.badlogic.gdx.graphics.CubemapData data -> b
    151:157:void load(com.badlogic.gdx.graphics.CubemapData) -> a
    160:160:com.badlogic.gdx.graphics.CubemapData getCubemapData() -> a
    165:165:boolean isManaged() -> b
    170:173:void reload() -> c
    177:177:int getWidth() -> d
    182:182:int getHeight() -> e
    197:200:void dispose() -> dispose
    211:212:void clearAllCubemaps(com.badlogic.gdx.Application) -> a
    216:271:void invalidateAllCubemaps(com.badlogic.gdx.Application) -> b
    282:289:java.lang.String getManagedStatus() -> f
com.badlogic.gdx.graphics.Cubemap$1 -> com.badlogic.gdx.graphics.d:
    int val$refCount -> a
    258:259:void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.graphics.CubemapData -> com.badlogic.gdx.graphics.e:
    boolean isPrepared() -> a
    void prepare() -> b
    void consumeCubemapData() -> c
    int getWidth() -> d
    int getHeight() -> e
    boolean isManaged() -> f
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.f:
    long startTime -> a
    35:39:void log() -> a
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.g:
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glDeleteTexture(int) -> glDeleteTexture
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    int glGenTexture() -> glGenTexture
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glPixelStorei(int,int) -> glPixelStorei
    void glScissor(int,int,int,int) -> glScissor
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    void glDeleteShader(int) -> glDeleteShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    int glGenBuffer() -> glGenBuffer
    void glGenerateMipmap(int) -> glGenerateMipmap
    int glGenFramebuffer() -> glGenFramebuffer
    int glGenRenderbuffer() -> glGenRenderbuffer
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1i(int,int) -> glUniform1i
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GL30 -> com.badlogic.gdx.graphics.h:
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLTexture -> com.badlogic.gdx.graphics.i:
    int glTarget -> c
    int glHandle -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> h
    int getWidth() -> d
    int getHeight() -> e
    66:67:void bind() -> g
    78:78:com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> h
    83:83:com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> i
    88:88:com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> j
    93:93:com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> k
    98:98:int getTextureObjectHandle() -> l
    113:121:void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean) -> a
    127:132:void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    146:154:void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    160:165:void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    169:173:void delete() -> m
    177:178:void dispose() -> dispose
    181:182:void uploadImageData(int,com.badlogic.gdx.graphics.TextureData) -> a
    185:221:void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int) -> a
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.j:
    java.util.Map meshes -> a
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> b
    com.badlogic.gdx.graphics.glutils.IndexData indices -> c
    boolean autoBind -> d
    boolean isVertexArray -> e
    com.badlogic.gdx.math.Vector3 tmpV -> f
    137:140:com.badlogic.gdx.graphics.glutils.VertexData makeVertexBuffer(boolean,int,com.badlogic.gdx.graphics.VertexAttributes) -> a
    197:199:com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int) -> a
    271:273:com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> a
    333:333:int getNumIndices() -> a
    338:338:int getNumVertices() -> b
    371:372:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    380:382:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    389:390:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    398:400:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    422:423:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    449:450:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    477:502:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean) -> a
    506:509:void dispose() -> dispose
    516:521:com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> a
    526:526:com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> c
    531:531:java.nio.FloatBuffer getVerticesBuffer() -> d
    769:769:java.nio.ShortBuffer getIndicesBuffer() -> e
    773:777:void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    782:788:void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    792:793:void clearAllMeshes(com.badlogic.gdx.Application) -> b
    796:804:java.lang.String getManagedStatus() -> f
com.badlogic.gdx.graphics.Mesh$1 -> com.badlogic.gdx.graphics.k:
    int[] $SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType -> a
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectWithVAO -> d
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> e
    68:68:com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    68:68:com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.m:
    float zoom -> m
    com.badlogic.gdx.math.Vector3 tmp -> n
    51:52:void update() -> a
    56:67:void update(boolean) -> a
    82:93:void setToOrtho(boolean,float,float) -> a
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    98:100:void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    163:164:void setColor(float,float,float,float) -> a
    169:170:void setColor(com.badlogic.gdx.graphics.Color) -> a
    174:175:void fill() -> a
    211:212:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    224:225:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> a
    242:243:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    297:297:int getWidth() -> b
    302:302:int getHeight() -> c
    307:310:void dispose() -> dispose
    326:327:void drawPixel(int,int,int) -> a
    333:333:int getGLFormat() -> d
    340:340:int getGLInternalFormat() -> e
    347:347:int getGLType() -> f
    356:357:java.nio.ByteBuffer getPixels() -> g
    362:362:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    367:367:com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> i
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.o:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.p:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    49:49:com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    49:49:com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    53:60:int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    64:70:com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.q:
    55:55:com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.r:
    byte[] writeBuffer -> a
    byte[] readBuffer -> b
    120:148:com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.s:
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    com.badlogic.gdx.graphics.TextureData data -> b
    126:138:void load(com.badlogic.gdx.graphics.TextureData) -> a
    144:147:void reload() -> a
    165:165:int getWidth() -> d
    170:170:int getHeight() -> e
    179:179:com.badlogic.gdx.graphics.TextureData getTextureData() -> b
    184:184:boolean isManaged() -> c
    193:196:void dispose() -> dispose
    199:203:void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    207:208:void clearAllTextures(com.badlogic.gdx.Application) -> a
    212:268:void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    275:276:void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> a
    279:286:java.lang.String getManagedStatus() -> f
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.t:
    int val$refCount -> a
    255:256:void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.u:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    51:51:com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    51:51:com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    63:63:boolean isMipMap() -> a
    67:67:int getGLEnum() -> b
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.v:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> e
    71:71:com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    71:71:com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    81:81:int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.w:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> g
    boolean isPrepared() -> a
    void prepare() -> b
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> h
    boolean disposePixmap() -> i
    void consumeCustomData(int) -> a
    int getWidth() -> d
    int getHeight() -> e
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> j
    boolean useMipMaps() -> k
    boolean isManaged() -> f
com.badlogic.gdx.graphics.TextureData$Factory -> com.badlogic.gdx.graphics.x:
    94:98:com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> a
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.y:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Custom -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> c
    43:43:com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    43:43:com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.z:
    int usage -> a
    int numComponents -> b
    boolean normalized -> c
    int type -> d
    int offset -> e
    java.lang.String alias -> f
    int unit -> g
    int usageIndex -> h
    82:82:com.badlogic.gdx.graphics.VertexAttribute Position() -> a
    86:86:com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> a
    90:90:com.badlogic.gdx.graphics.VertexAttribute Normal() -> b
    94:94:com.badlogic.gdx.graphics.VertexAttribute ColorPacked() -> c
    98:98:com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> d
    102:102:com.badlogic.gdx.graphics.VertexAttribute Tangent() -> e
    106:106:com.badlogic.gdx.graphics.VertexAttribute Binormal() -> f
    110:110:com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int) -> b
    116:119:boolean equals(java.lang.Object) -> equals
    123:123:boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> a
    129:129:int getKey() -> g
    134:137:int hashCode() -> hashCode
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.aa:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    long mask -> c
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable -> d
    91:101:int calculateOffsets() -> c
    106:106:int size() -> a
    112:112:com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    116:131:java.lang.String toString() -> toString
    136:143:boolean equals(java.lang.Object) -> equals
    148:151:int hashCode() -> hashCode
    158:165:long getMask() -> b
    170:183:int compareTo(com.badlogic.gdx.graphics.VertexAttributes) -> a
    188:189:java.util.Iterator iterator() -> iterator
    28:28:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable -> com.badlogic.gdx.graphics.ab:
    java.lang.Object[] array -> a
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1 -> b
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2 -> c
    239:252:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator -> com.badlogic.gdx.graphics.ac:
    java.lang.Object[] array -> c
    int index -> a
    boolean valid -> b
    203:204:boolean hasNext() -> hasNext
    209:211:java.lang.Object next() -> next
    216:216:void remove() -> remove
    225:225:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.a:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> a
    float frameDuration -> b
    float animationDuration -> c
    int lastFrameNumber -> d
    float lastStateTime -> e
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode playMode -> f
    101:116:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> a
    126:127:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> a
    134:168:int getKeyFrameIndex(float) -> b
    186:187:void setPlayMode(com.badlogic.gdx.graphics.g2d.Animation$PlayMode) -> a
    193:194:boolean isAnimationFinished(float) -> c
com.badlogic.gdx.graphics.g2d.Animation$1 -> com.badlogic.gdx.graphics.g2d.b:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode -> a
com.badlogic.gdx.graphics.g2d.Animation$PlayMode -> com.badlogic.gdx.graphics.g2d.c:
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode NORMAL -> a
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode REVERSED -> b
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP -> c
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_REVERSED -> d
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_PINGPONG -> e
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_RANDOM -> f
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] $VALUES -> g
    31:31:com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] values() -> values
    31:31:com.badlogic.gdx.graphics.g2d.Animation$PlayMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.Batch -> com.badlogic.gdx.graphics.g2d.d:
    void begin() -> a
    void end() -> b
    void setColor(com.badlogic.gdx.graphics.Color) -> a
    void setColor(float,float,float,float) -> a
    com.badlogic.gdx.graphics.Color getColor() -> c
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> a
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> a
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    void flush() -> d
    void setBlendFunction(int,int) -> a
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> e
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.e:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> a
    com.badlogic.gdx.utils.Array regions -> b
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> d
    boolean flipped -> e
    boolean integer -> c
    boolean ownsTexture -> f
    179:193:void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    198:201:com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> a
    207:210:com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,int,boolean) -> a
    217:220:com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int,float,int,boolean) -> a
    226:229:void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float) -> a
    233:233:com.badlogic.gdx.graphics.Color getColor() -> a
    243:244:void setColor(float,float,float,float) -> a
    247:247:float getScaleX() -> b
    251:251:float getScaleY() -> c
    264:264:com.badlogic.gdx.utils.Array getRegions() -> d
    275:275:float getLineHeight() -> e
    291:291:float getCapHeight() -> f
    302:302:float getDescent() -> g
    307:307:boolean isFlipped() -> h
    312:316:void dispose() -> dispose
    338:340:void setUseIntegerPositions(boolean) -> a
    344:344:boolean usesIntegerPositions() -> i
    356:356:com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> j
    368:369:void setOwnsTexture(boolean) -> b
    377:377:com.badlogic.gdx.graphics.g2d.BitmapFontCache newFontCache() -> k
    381:382:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.f:
    java.lang.String[] imagePaths -> a
    com.badlogic.gdx.files.FileHandle fontFile -> b
    boolean flipped -> c
    float padTop -> d
    float padRight -> e
    float padBottom -> f
    float padLeft -> g
    float lineHeight -> h
    float capHeight -> i
    float ascent -> j
    float descent -> k
    float down -> l
    float scaleX -> m
    float scaleY -> n
    boolean markupEnabled -> o
    float cursorX -> p
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> q
    float spaceWidth -> r
    float xHeight -> s
    char[] breakChars -> t
    char[] xChars -> u
    char[] capChars -> v
    473:661:void load(com.badlogic.gdx.files.FileHandle,boolean) -> a
    664:723:void setGlyphRegion(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    732:735:void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> a
    738:745:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> a
    749:749:boolean hasGlyph(char) -> a
    756:758:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> b
    765:787:void getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,java.lang.CharSequence,int,int) -> a
    792:799:int getWrapIndex(com.badlogic.gdx.utils.Array,int) -> a
    803:806:boolean isBreakChar(char) -> c
    810:817:boolean isWhitespace(char) -> d
    823:823:java.lang.String getImagePath(int) -> a
    827:827:java.lang.String[] getImagePaths() -> b
    840:857:void setScale(float,float) -> a
    863:864:void setScale(float) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.g:
    int id -> a
    int srcX -> b
    int srcY -> c
    int width -> d
    int height -> e
    float u -> f
    float v -> g
    float u2 -> h
    float v2 -> i
    int xoffset -> j
    int yoffset -> k
    int xadvance -> l
    byte[][] kerning -> m
    int page -> n
    400:404:int getKerning(char) -> a
    408:412:void setKerning(int,int) -> a
    415:415:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.h:
    com.badlogic.gdx.graphics.Color tempColor -> a
    float whiteTint -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> c
    boolean integer -> d
    com.badlogic.gdx.utils.Array layouts -> e
    com.badlogic.gdx.utils.Array pooledLayouts -> f
    int glyphCount -> g
    float x -> h
    float y -> i
    com.badlogic.gdx.graphics.Color color -> j
    float currentTint -> k
    float[][] pageVertices -> l
    int[] idx -> m
    com.badlogic.gdx.utils.IntArray[] pageGlyphIndices -> n
    int[] tempGlyphCount -> o
    85:86:void setPosition(float,float) -> a
    92:107:void translate(float,float) -> b
    111:136:void tint(com.badlogic.gdx.graphics.Color) -> a
    218:218:com.badlogic.gdx.graphics.Color getColor() -> a
    232:239:void draw(com.badlogic.gdx.graphics.g2d.Batch) -> a
    292:301:void clear() -> b
    304:324:void requireGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout) -> a
    327:341:void requirePageGlyphs(int,int) -> a
    345:384:void addToCache(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float) -> c
    387:431:void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float) -> a
    457:459:void setText(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float) -> a
    464:464:com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float) -> a
    470:470:com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,float,int,boolean) -> a
    480:484:com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,int,int,float,int,boolean) -> a
    489:490:void addText(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float) -> b
    503:503:com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> c
    509:510:void setUseIntegerPositions(boolean) -> a
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    112:121:void convert(int) -> b
    124:125:void dispose() -> dispose
    128:129:void clear(int) -> a
    132:133:void setPixel(int,int,int) -> a
    164:165:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> a
    169:170:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    189:189:java.nio.ByteBuffer getPixels() -> a
    193:193:int getHeight() -> b
    197:197:int getWidth() -> c
    201:201:int getFormat() -> d
    205:217:int getGLInternalFormat() -> e
    222:222:int getGLFormat() -> f
    226:237:int getGLType() -> g
    java.nio.ByteBuffer load(long[],byte[],int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.GlyphLayout -> com.badlogic.gdx.graphics.g2d.i:
    com.badlogic.gdx.utils.Array colorStack -> d
    com.badlogic.gdx.utils.Array runs -> a
    float width -> b
    float height -> c
    63:64:void setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence) -> a
    69:70:void setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,com.badlogic.gdx.graphics.Color,float,int,boolean) -> a
    81:225:void setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String) -> a
    231:268:void truncate(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,float,java.lang.String,int,com.badlogic.gdx.utils.Pool) -> a
    271:301:com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun wrap(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,com.badlogic.gdx.utils.Pool,int,int) -> a
    306:311:void adjustLastGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun) -> a
    314:361:int parseColorMarkup(java.lang.CharSequence,int,int,com.badlogic.gdx.utils.Pool) -> a
    365:370:void reset() -> reset
    373:384:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun -> com.badlogic.gdx.graphics.g2d.j:
    com.badlogic.gdx.utils.Array glyphs -> a
    com.badlogic.gdx.utils.FloatArray xAdvances -> b
    float x -> c
    float y -> d
    float width -> e
    com.badlogic.gdx.graphics.Color color -> f
    398:401:void reset() -> reset
    404:418:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.k:
    com.badlogic.gdx.graphics.Color tmpDrawColor -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    int bottomLeft -> c
    int bottomCenter -> d
    int bottomRight -> e
    int middleLeft -> f
    int middleCenter -> g
    int middleRight -> h
    int topLeft -> i
    int topCenter -> j
    int topRight -> k
    float leftWidth -> l
    float rightWidth -> m
    float middleWidth -> n
    float middleHeight -> o
    float topHeight -> p
    float bottomHeight -> q
    float[] vertices -> r
    int idx -> s
    com.badlogic.gdx.graphics.Color color -> t
    float padLeft -> u
    float padRight -> v
    float padTop -> w
    float padBottom -> x
    223:275:void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> a
    278:321:int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,boolean,boolean) -> a
    326:344:void set(int,float,float,float,float,float) -> a
    347:365:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    370:371:void setColor(com.badlogic.gdx.graphics.Color) -> a
    378:378:float getLeftWidth() -> a
    387:387:float getRightWidth() -> b
    396:396:float getTopHeight() -> c
    405:405:float getBottomHeight() -> d
    436:436:float getTotalWidth() -> e
    440:440:float getTotalHeight() -> f
    446:450:void setPadding(float,float,float,float) -> a
    454:455:float getPadLeft() -> g
    465:466:float getPadRight() -> h
    476:477:float getPadTop() -> i
    487:488:float getPadBottom() -> j
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.l:
    com.badlogic.gdx.utils.Array emitters -> a
    boolean ownsTexture -> b
    53:55:void start() -> a
    63:65:void update(float) -> a
    68:70:void draw(com.badlogic.gdx.graphics.g2d.Batch) -> a
    73:75:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> a
    78:80:void allowCompletion() -> b
    100:102:void setPosition(float,float) -> a
    137:139:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> a
    146:148:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> a
    151:167:void loadEmitters(com.badlogic.gdx.files.FileHandle) -> a
    174:186:void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> a
    189:203:void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> b
    206:206:com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> c
    211:216:void dispose() -> dispose
    230:267:void scaleEffect(float) -> b
    276:279:void setEmittersCleanUpBlendFunction(boolean) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.m:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> e
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> f
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> g
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> h
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> i
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> j
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> k
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> l
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> m
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> n
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> o
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> p
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> q
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> r
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> s
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> t
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> u
    float accumulator -> v
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> w
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> x
    int minParticleCount -> y
    int maxParticleCount -> z
    float x -> A
    float y -> B
    java.lang.String name -> C
    java.lang.String imagePath -> D
    int activeCount -> E
    boolean[] active -> F
    boolean firstUpdate -> G
    boolean flipX -> H
    boolean flipY -> I
    int updateFlags -> J
    boolean allowCompletion -> K
    int emission -> L
    int emissionDiff -> M
    int emissionDelta -> N
    int lifeOffset -> O
    int lifeOffsetDiff -> P
    int life -> Q
    int lifeDiff -> R
    float spawnWidth -> S
    float spawnWidthDiff -> T
    float spawnHeight -> U
    float spawnHeightDiff -> V
    float duration -> a
    float durationTimer -> b
    float delay -> W
    float delayTimer -> X
    boolean attached -> Y
    boolean continuous -> Z
    boolean aligned -> aa
    boolean behind -> ab
    boolean additive -> ac
    boolean premultipliedAlpha -> ad
    boolean cleansUpBlendFunction -> c
    131:139:void initialize() -> n
    142:146:void setMaxParticleCount(int) -> a
    149:160:void addParticle() -> a
    163:179:void addParticles(int) -> b
    182:232:void update(float) -> a
    235:252:void draw(com.badlogic.gdx.graphics.g2d.Batch) -> a
    257:322:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> a
    325:328:void start() -> b
    341:375:void restart() -> o
    378:378:com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    382:524:void activateParticle(int) -> d
    527:586:boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> a
    590:599:void setPosition(float,float) -> a
    602:613:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> b
    618:620:void allowCompletion() -> c
    623:623:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> d
    639:639:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> e
    651:651:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> f
    655:655:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> g
    659:659:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> h
    687:687:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> i
    691:691:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> j
    695:695:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> k
    699:699:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> l
    753:754:void setCleansUpBlendFunction(boolean) -> a
    777:778:void setMinParticleCount(int) -> c
    807:807:java.lang.String getImagePath() -> m
    811:812:void setImagePath(java.lang.String) -> a
    913:971:void load(java.io.BufferedReader) -> a
    974:974:java.lang.String readString(java.lang.String) -> b
    978:980:java.lang.String readString(java.io.BufferedReader,java.lang.String) -> a
    984:984:boolean readBoolean(java.lang.String) -> c
    988:988:boolean readBoolean(java.io.BufferedReader,java.lang.String) -> b
    992:992:int readInt(java.io.BufferedReader,java.lang.String) -> c
    996:996:float readFloat(java.io.BufferedReader,java.lang.String) -> d
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.n:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> a
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> b
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.o:
    float[] temp -> d
    float[] colors -> e
    float[] timeline -> a
    1287:1314:float[] getColor(float) -> a
    1329:1337:void load(java.io.BufferedReader) -> a
    1340:1345:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.p:
    int life -> a
    int currentLife -> b
    float scale -> c
    float scaleDiff -> d
    float rotation -> e
    float rotationDiff -> f
    float velocity -> g
    float velocityDiff -> h
    float angle -> i
    float angleDiff -> j
    float angleCos -> k
    float angleSin -> l
    float transparency -> m
    float transparencyDiff -> n
    float wind -> o
    float windDiff -> p
    float gravity -> q
    float gravityDiff -> r
    float[] tint -> s
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.q:
    boolean active -> b
    boolean alwaysActive -> c
    1021:1022:void setAlwaysActive(boolean) -> a
    1044:1048:void load(java.io.BufferedReader) -> a
    1051:1053:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.r:
    float lowMin -> a
    float lowMax -> d
    1089:1089:float newLowValue() -> a
    1098:1100:void setLow(float,float) -> a
    1103:1103:float getLowMin() -> b
    1111:1111:float getLowMax() -> c
    1126:1130:void load(java.io.BufferedReader) -> a
    1133:1136:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.s:
    float[] scaling -> d
    float[] timeline -> a
    float highMin -> e
    float highMax -> f
    boolean relative -> g
    1146:1146:float newHighValue() -> d
    1155:1157:void setHigh(float,float) -> b
    1160:1160:float getHighMin() -> e
    1168:1168:float getHighMax() -> f
    1192:1192:boolean isRelative() -> g
    1200:1215:float getScale(float) -> a
    1233:1244:void load(java.io.BufferedReader) -> a
    1247:1255:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.t:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> d
    1409:1409:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    1409:1409:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.u:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> e
    1405:1405:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    1405:1405:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.v:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> a
    boolean edges -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> e
    1388:1395:void load(java.io.BufferedReader) -> a
    1398:1402:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.w:
    int pageWidth -> a
    int pageHeight -> b
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> c
    int padding -> d
    boolean duplicateBorder -> e
    com.badlogic.gdx.utils.Array pages -> f
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page current -> g
    boolean packToTexture -> h
    boolean disposed -> i
    121:121:com.badlogic.gdx.math.Rectangle pack(com.badlogic.gdx.graphics.Pixmap) -> a
    131:190:com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> a
    194:200:void newPage() -> b
    203:239:com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> a
    246:246:com.badlogic.gdx.utils.Array getPages() -> a
    252:256:com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> a
    283:289:void dispose() -> dispose
    323:326:void updateTextureRegions(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    330:332:void updatePageTextures(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    358:359:void setPackToTexture(boolean) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.x:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> a
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> b
    com.badlogic.gdx.math.Rectangle rect -> c
    java.lang.String leafName -> d
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.y:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> a
    com.badlogic.gdx.utils.OrderedMap rects -> b
    com.badlogic.gdx.graphics.Pixmap image -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.utils.Array addedRects -> e
    boolean dirty -> f
    408:424:boolean updateTexture(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page$1 -> com.badlogic.gdx.graphics.g2d.z:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page this$0 -> i
    417:419:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.aa:
    float[] textureCoords -> a
    float[] vertices -> b
    short[] triangles -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> d
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader -> com.badlogic.gdx.graphics.g2d.ab:
    com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters defaultParameters -> a
    com.badlogic.gdx.math.EarClippingTriangulator triangulator -> b
    70:71:com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> a
    80:105:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> a
    118:138:com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle) -> a
    39:39:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    39:39:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters -> com.badlogic.gdx.graphics.g2d.ac:
    java.lang.String texturePrefix -> b
    int readerBuffer -> c
    java.lang.String[] textureExtensions -> d
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.ad:
    float[] vertices -> t
    com.badlogic.gdx.graphics.Color color -> a
    float x -> b
    float y -> c
    float width -> u
    float height -> v
    float originX -> d
    float originY -> e
    float rotation -> f
    float scaleX -> g
    float scaleY -> h
    boolean dirty -> i
    107:127:void set(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    132:155:void setBounds(float,float,float,float) -> a
    161:182:void setSize(float,float) -> a
    188:189:void setPosition(float,float) -> b
    252:269:void translate(float,float) -> c
    273:279:void setColor(com.badlogic.gdx.graphics.Color) -> a
    283:295:void setAlpha(float) -> a
    299:306:void setColor(float,float,float,float) -> b
    320:323:void setOrigin(float,float) -> d
    334:336:void setRotation(float) -> b
    354:381:void rotate90(boolean) -> a
    386:389:void setScale(float) -> c
    394:397:void setScale(float,float) -> e
    410:474:float[] getVertices() -> a
    515:516:void draw(com.badlogic.gdx.graphics.g2d.Batch) -> a
    519:523:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> a
    526:526:float getX() -> b
    530:530:float getY() -> c
    535:535:float getWidth() -> d
    540:540:float getHeight() -> e
    546:546:float getOriginX() -> f
    552:552:float getOriginY() -> g
    568:574:com.badlogic.gdx.graphics.Color getColor() -> h
    578:592:void setRegion(float,float,float,float) -> c
    622:631:void setFlip(boolean,boolean) -> a
    637:655:void flip(boolean,boolean) -> b
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.ae:
    com.badlogic.gdx.graphics.Mesh mesh -> k
    float[] vertices -> a
    int idx -> b
    com.badlogic.gdx.graphics.Texture lastTexture -> c
    float invTexWidth -> d
    float invTexHeight -> e
    boolean drawing -> f
    com.badlogic.gdx.math.Matrix4 transformMatrix -> l
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> m
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> n
    boolean blendingDisabled -> o
    int blendSrcFunc -> p
    int blendDstFunc -> q
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> r
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> s
    boolean ownsShader -> t
    float color -> g
    com.badlogic.gdx.graphics.Color tempColor -> u
    int renderCalls -> h
    int totalRenderCalls -> i
    int maxSpritesInBatch -> j
    128:158:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> f
    163:174:void begin() -> a
    178:191:void end() -> b
    195:196:void setColor(com.badlogic.gdx.graphics.Color) -> a
    200:202:void setColor(float,float,float,float) -> a
    211:217:com.badlogic.gdx.graphics.Color getColor() -> c
    463:501:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> a
    556:582:void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> a
    591:634:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    639:754:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    950:974:void flush() -> d
    978:981:void disableBlending() -> g
    985:988:void enableBlending() -> h
    992:996:void setBlendFunction(int,int) -> a
    1010:1012:void dispose() -> dispose
    1021:1021:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> e
    1026:1029:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    1033:1036:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1039:1047:void setupMatrices() -> j
    1050:1054:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    1085:1085:boolean isBlendingEnabled() -> i
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.af:
    java.lang.String[] tuple -> a
    com.badlogic.gdx.utils.ObjectSet textures -> c
    com.badlogic.gdx.utils.Array regions -> d
    java.util.Comparator indexComparator -> b
    240:273:void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> a
    295:295:com.badlogic.gdx.utils.Array getRegions() -> a
    302:304:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> a
    346:348:com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> b
    379:388:com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> a
    396:406:com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> c
    417:420:void dispose() -> dispose
    433:436:java.lang.String readValue(java.io.BufferedReader) -> a
    441:452:int readTuple(java.io.BufferedReader) -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.ag:
    424:428:int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> a
    422:422:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.ah:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
    boolean rotate -> i
    int[] splits -> j
    int[] pads -> k
    521:524:void flip(boolean,boolean) -> b
    529:529:float getRotatedPackedWidth() -> a
    535:535:float getRotatedPackedHeight() -> b
    539:539:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.ai:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> a
    float originalOffsetX -> b
    float originalOffsetY -> c
    574:575:void setPosition(float,float) -> b
    589:596:void setBounds(float,float,float,float) -> a
    600:601:void setSize(float,float) -> a
    605:606:void setOrigin(float,float) -> d
    616:640:void flip(boolean,boolean) -> b
    645:666:void rotate90(boolean) -> a
    670:670:float getX() -> b
    675:675:float getY() -> c
    680:680:float getOriginX() -> f
    685:685:float getOriginY() -> g
    690:690:float getWidth() -> d
    695:695:float getHeight() -> e
    699:699:float getWidthRatio() -> i
    703:703:float getHeightRatio() -> j
    711:711:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.aj:
    com.badlogic.gdx.utils.Array pages -> a
    com.badlogic.gdx.utils.Array regions -> b
    196:196:com.badlogic.gdx.utils.Array getPages() -> a
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.ak:
    com.badlogic.gdx.files.FileHandle textureFile -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    float width -> c
    float height -> d
    boolean useMipMaps -> e
    com.badlogic.gdx.graphics.Pixmap$Format format -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> i
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> j
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.al:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> a
    int index -> b
    java.lang.String name -> c
    float offsetX -> d
    float offsetY -> e
    int originalWidth -> f
    int originalHeight -> g
    boolean rotate -> h
    int left -> i
    int top -> j
    int width -> k
    int height -> l
    boolean flip -> m
    int[] splits -> n
    int[] pads -> o
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.am:
    com.badlogic.gdx.graphics.Texture texture -> w
    float u -> x
    float v -> y
    float u2 -> z
    float v2 -> A
    int regionWidth -> B
    int regionHeight -> C
    82:87:void setRegion(int,int,int,int) -> a
    90:108:void setRegion(float,float,float,float) -> c
    112:114:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    118:120:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> a
    123:123:com.badlogic.gdx.graphics.Texture getTexture() -> k
    127:128:void setTexture(com.badlogic.gdx.graphics.Texture) -> a
    131:131:float getU() -> l
    140:140:float getV() -> m
    149:149:float getU2() -> n
    158:158:float getV2() -> o
    167:167:int getRegionX() -> p
    175:175:int getRegionY() -> q
    184:184:int getRegionWidth() -> r
    197:197:int getRegionHeight() -> s
    209:219:void flip(boolean,boolean) -> b
    222:222:boolean isFlipX() -> t
    226:226:boolean isFlipY() -> u
com.badlogic.gdx.graphics.g2d.freetype.FreeType -> com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    int FT_PIXEL_MODE_NONE -> a
    int FT_PIXEL_MODE_MONO -> b
    int FT_PIXEL_MODE_GRAY -> c
    int FT_PIXEL_MODE_GRAY2 -> d
    int FT_PIXEL_MODE_GRAY4 -> e
    int FT_PIXEL_MODE_LCD -> f
    int FT_PIXEL_MODE_LCD_V -> g
    int FT_ENCODING_NONE -> h
    int FT_ENCODING_MS_SYMBOL -> i
    int FT_ENCODING_UNICODE -> j
    int FT_ENCODING_SJIS -> k
    int FT_ENCODING_GB2312 -> l
    int FT_ENCODING_BIG5 -> m
    int FT_ENCODING_WANSUNG -> n
    int FT_ENCODING_JOHAB -> o
    int FT_ENCODING_ADOBE_STANDARD -> p
    int FT_ENCODING_ADOBE_EXPERT -> q
    int FT_ENCODING_ADOBE_CUSTOM -> r
    int FT_ENCODING_ADOBE_LATIN_1 -> s
    int FT_ENCODING_OLD_LATIN_2 -> t
    int FT_ENCODING_APPLE_ROMAN -> u
    int FT_FACE_FLAG_SCALABLE -> v
    int FT_FACE_FLAG_FIXED_SIZES -> w
    int FT_FACE_FLAG_FIXED_WIDTH -> x
    int FT_FACE_FLAG_SFNT -> y
    int FT_FACE_FLAG_HORIZONTAL -> z
    int FT_FACE_FLAG_VERTICAL -> A
    int FT_FACE_FLAG_KERNING -> B
    int FT_FACE_FLAG_FAST_GLYPHS -> C
    int FT_FACE_FLAG_MULTIPLE_MASTERS -> D
    int FT_FACE_FLAG_GLYPH_NAMES -> E
    int FT_FACE_FLAG_EXTERNAL_STREAM -> F
    int FT_FACE_FLAG_HINTER -> G
    int FT_FACE_FLAG_CID_KEYED -> H
    int FT_FACE_FLAG_TRICKY -> I
    int FT_STYLE_FLAG_ITALIC -> J
    int FT_STYLE_FLAG_BOLD -> K
    int FT_LOAD_DEFAULT -> L
    int FT_LOAD_NO_SCALE -> M
    int FT_LOAD_NO_HINTING -> N
    int FT_LOAD_RENDER -> O
    int FT_LOAD_NO_BITMAP -> P
    int FT_LOAD_VERTICAL_LAYOUT -> Q
    int FT_LOAD_FORCE_AUTOHINT -> R
    int FT_LOAD_CROP_BITMAP -> S
    int FT_LOAD_PEDANTIC -> T
    int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH -> U
    int FT_LOAD_NO_RECURSE -> V
    int FT_LOAD_IGNORE_TRANSFORM -> W
    int FT_LOAD_MONOCHROME -> X
    int FT_LOAD_LINEAR_DESIGN -> Y
    int FT_LOAD_NO_AUTOHINT -> Z
    int FT_RENDER_MODE_NORMAL -> aa
    int FT_RENDER_MODE_LIGHT -> ab
    int FT_RENDER_MODE_MONO -> ac
    int FT_RENDER_MODE_LCD -> ad
    int FT_RENDER_MODE_LCD_V -> ae
    int FT_RENDER_MODE_MAX -> af
    int FT_KERNING_DEFAULT -> ag
    int FT_KERNING_UNFITTED -> ah
    int FT_KERNING_UNSCALED -> ai
    int FT_STROKER_LINECAP_BUTT -> aj
    int FT_STROKER_LINECAP_ROUND -> ak
    int FT_STROKER_LINECAP_SQUARE -> al
    int FT_STROKER_LINEJOIN_ROUND -> am
    int FT_STROKER_LINEJOIN_BEVEL -> an
    int FT_STROKER_LINEJOIN_MITER_VARIABLE -> ao
    int FT_STROKER_LINEJOIN_MITER -> ap
    int FT_STROKER_LINEJOIN_MITER_FIXED -> aq
    767:767:int encode(char,char,char,char) -> a
    841:844:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType() -> a
    long initFreeTypeJni() -> initFreeTypeJni
    855:856:int toInt(int) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    567:567:int getRows() -> a
    int getRows(long) -> getRows
    575:575:int getWidth() -> b
    int getWidth(long) -> getWidth
    583:583:int getPitch() -> c
    int getPitch(long) -> getPitch
    591:598:java.nio.ByteBuffer getBuffer() -> d
    609:640:com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format,com.badlogic.gdx.graphics.Color) -> a
    java.nio.ByteBuffer getBuffer(long) -> getBuffer
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    122:128:void dispose() -> dispose
    void doneFace(long) -> doneFace
    135:135:int getFaceFlags() -> a
    int getFaceFlags(long) -> getFaceFlags
    151:151:int getNumGlyphs() -> b
    int getNumGlyphs(long) -> getNumGlyphs
    183:183:int getMaxAdvanceWidth() -> c
    int getMaxAdvanceWidth(long) -> getMaxAdvanceWidth
    231:231:boolean setPixelSizes(int,int) -> a
    boolean setPixelSizes(long,int,int) -> setPixelSizes
    247:247:boolean loadChar(int,int) -> b
    boolean loadChar(long,int,int) -> loadChar
    255:255:com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph() -> d
    long getGlyph(long) -> getGlyph
    263:263:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize() -> e
    long getSize(long) -> getSize
    279:279:int getKerning(int,int,int) -> a
    int getKerning(long,int,int,int) -> getKerning
    290:290:int getCharIndex(int) -> a
    int getCharIndex(long,int) -> getCharIndex
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph:
    boolean rendered -> a
    492:493:void dispose() -> dispose
    void done(long) -> done
    500:501:void strokeBorder(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,boolean) -> a
    long strokeBorder(long,long,boolean) -> strokeBorder
    510:514:void toBitmap(int) -> a
    long toBitmap(long,int) -> toBitmap
    524:527:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap() -> a
    long getBitmap(long) -> getBitmap
    536:539:int getLeft() -> b
    int getLeft(long) -> getLeft
    548:551:int getTop() -> c
    int getTop(long) -> getTop
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    679:679:int getHeight() -> a
    int getHeight(long) -> getHeight
    703:703:int getHoriAdvance() -> b
    int getHoriAdvance(long) -> getHoriAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    389:389:com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
    429:429:int getFormat() -> b
    int getFormat(long) -> getFormat
    470:472:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph getGlyph() -> c
    long getGlyph(long) -> getGlyph
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    com.badlogic.gdx.utils.LongMap fontData -> a
    58:62:void dispose() -> dispose
    void doneFreeType(long) -> doneFreeType
    80:87:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(java.nio.ByteBuffer,int) -> a
    long newMemoryFace(long,java.nio.ByteBuffer,int,int) -> newMemoryFace
    99:101:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker createStroker() -> a
    long strokerNew(long) -> strokerNew
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer -> com.badlogic.gdx.graphics.g2d.freetype.a:
    long address -> b
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size:
    305:305:com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    351:351:int getAscender() -> a
    int getAscender(long) -> getAscender
    359:359:int getDescender() -> b
    int getDescender(long) -> getDescender
    367:367:int getHeight() -> c
    int getHeight(long) -> getHeight
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker:
    741:742:void set(int,int,int,int) -> a
    void set(long,int,int,int,int) -> set
    750:751:void dispose() -> dispose
    void done(long) -> done
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator -> com.badlogic.gdx.graphics.g2d.freetype.b:
    int maxTextureSize -> e
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face -> b
    java.lang.String name -> c
    boolean bitmapped -> d
    int pixelWidth -> f
    int pixelHeight -> g
    121:130:boolean checkForBitmapFont() -> a
    156:156:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter) -> a
    163:170:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData) -> a
    303:307:void setPixelSizes(int,int) -> a
    312:449:com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData) -> b
    455:558:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,com.badlogic.gdx.graphics.g2d.PixmapPacker) -> a
    564:566:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData -> com.badlogic.gdx.graphics.g2d.freetype.c:
    com.badlogic.gdx.utils.Array regions -> w
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator generator -> x
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter parameter -> y
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker stroker -> z
    com.badlogic.gdx.graphics.g2d.PixmapPacker packer -> A
    com.badlogic.gdx.utils.Array glyphs -> B
    606:631:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> b
    635:637:void getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,java.lang.CharSequence,int,int) -> a
    641:643:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter -> com.badlogic.gdx.graphics.g2d.freetype.d:
    int size -> a
    com.badlogic.gdx.graphics.Color color -> b
    float borderWidth -> c
    com.badlogic.gdx.graphics.Color borderColor -> d
    boolean borderStraight -> e
    int borderGlyphCount -> f
    int shadowOffsetX -> g
    int shadowOffsetY -> h
    com.badlogic.gdx.graphics.Color shadowColor -> i
    int shadowGlyphCount -> j
    java.lang.String characters -> k
    boolean kerning -> l
    com.badlogic.gdx.graphics.g2d.PixmapPacker packer -> m
    boolean flip -> n
    boolean genMipMaps -> o
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> p
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> q
    boolean incremental -> r
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader -> com.badlogic.gdx.graphics.g2d.freetype.e:
    44:50:com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters) -> a
    55:55:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters) -> a
    34:34:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters -> com.badlogic.gdx.graphics.g2d.freetype.f:
com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader -> com.badlogic.gdx.graphics.g2d.freetype.g:
    34:35:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader$FreeTypeFontLoaderParameter) -> a
    39:42:com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader$FreeTypeFontLoaderParameter) -> b
    47:49:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader$FreeTypeFontLoaderParameter) -> a
    20:20:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    20:20:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    20:20:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader$FreeTypeFontLoaderParameter -> com.badlogic.gdx.graphics.g2d.freetype.h:
    java.lang.String fontFileName -> b
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter fontParameters -> c
com.badlogic.gdx.graphics.g3d.Attribute -> com.badlogic.gdx.graphics.a.a:
    com.badlogic.gdx.utils.Array types -> b
    long type -> a
    int typeBit -> c
    31:33:long getAttributeType(java.lang.String) -> a
    38:41:java.lang.String getAttributeAlias(long) -> a
    49:52:long register(java.lang.String) -> b
    69:69:boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> a
    74:79:boolean equals(java.lang.Object) -> equals
    84:84:java.lang.String toString() -> toString
    89:89:int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.Attributes -> com.badlogic.gdx.graphics.a.b:
    long mask -> a
    com.badlogic.gdx.utils.Array attributes -> b
    boolean sorted -> c
    32:36:void sort() -> a
    77:78:void enable(long) -> c
    86:94:void set(com.badlogic.gdx.graphics.g3d.Attribute) -> a
    149:149:boolean has(long) -> a
    154:156:int indexOf(long) -> b
    164:171:boolean same(com.badlogic.gdx.graphics.g3d.Attributes,boolean) -> a
    183:183:int compare(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> a
    189:189:java.util.Iterator iterator() -> iterator
    195:201:int attributesHash() -> b
    206:206:int hashCode() -> hashCode
    211:213:boolean equals(java.lang.Object) -> equals
    218:229:int compareTo(com.badlogic.gdx.graphics.g3d.Attributes) -> a
    24:24:int compare(java.lang.Object,java.lang.Object) -> compare
    24:24:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.Material -> com.badlogic.gdx.graphics.a.c:
    int counter -> e
    java.lang.String id -> d
    79:79:int hashCode() -> hashCode
    84:84:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.Model -> com.badlogic.gdx.graphics.a.d:
    com.badlogic.gdx.utils.Array materials -> a
    com.badlogic.gdx.utils.Array nodes -> b
    com.badlogic.gdx.utils.Array animations -> c
    com.badlogic.gdx.utils.Array meshes -> d
    com.badlogic.gdx.utils.Array meshParts -> e
    com.badlogic.gdx.utils.Array disposables -> f
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> g
    106:111:void load(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> a
    114:159:void loadAnimations(java.lang.Iterable) -> a
    164:175:void loadNodes(java.lang.Iterable) -> b
    178:226:com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.data.ModelNode) -> a
    230:233:void loadMeshes(java.lang.Iterable) -> c
    236:262:void convertMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> a
    265:268:void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> a
    271:332:com.badlogic.gdx.graphics.g3d.Material convertMaterial(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> a
    344:344:java.lang.Iterable getManagedDisposables() -> a
    349:352:void dispose() -> dispose
    362:369:void calculateTransforms() -> b
    437:437:com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> a
    444:444:com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> a
    452:452:com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> a
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute -> com.badlogic.gdx.graphics.a.a.a:
    long Type -> b
    boolean blended -> c
    int sourceFunction -> d
    int destFunction -> e
    float opacity -> f
    83:88:int hashCode() -> hashCode
    93:98:int compareTo(com.badlogic.gdx.graphics.g3d.Attribute) -> b
    24:24:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute -> com.badlogic.gdx.graphics.a.a.b:
    long Diffuse -> b
    long Specular -> c
    long Ambient -> d
    long Emissive -> e
    long Reflection -> f
    long AmbientLight -> g
    long Fog -> h
    long Mask -> i
    com.badlogic.gdx.graphics.Color color -> j
    42:42:boolean is(long) -> b
    105:107:int hashCode() -> hashCode
    112:113:int compareTo(com.badlogic.gdx.graphics.g3d.Attribute) -> b
    23:23:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute -> com.badlogic.gdx.graphics.a.a.c:
    long Shininess -> b
    long AlphaTest -> c
    float value -> d
    56:58:int hashCode() -> hashCode
    63:65:int compareTo(com.badlogic.gdx.graphics.g3d.Attribute) -> b
    23:23:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute -> com.badlogic.gdx.graphics.a.a.d:
    long Diffuse -> b
    long Specular -> c
    long Bump -> d
    long Normal -> e
    long Ambient -> f
    long Emissive -> g
    long Reflection -> h
    long Mask -> i
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> j
    float offsetU -> k
    float offsetV -> l
    float scaleU -> m
    float scaleV -> n
    int uvIndex -> o
    46:46:boolean is(long) -> b
    171:178:int hashCode() -> hashCode
    183:192:int compareTo(com.badlogic.gdx.graphics.g3d.Attribute) -> b
    27:27:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader -> com.badlogic.gdx.graphics.a.b.a:
    com.badlogic.gdx.utils.BaseJsonReader reader -> c
    com.badlogic.gdx.math.Quaternion tempQ -> d
    61:61:com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> a
    65:78:com.badlogic.gdx.graphics.g3d.model.data.ModelData parseModel(com.badlogic.gdx.files.FileHandle) -> a
    82:124:void parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> a
    127:138:int parseType(java.lang.String) -> b
    144:171:com.badlogic.gdx.graphics.VertexAttribute[] parseAttributes(com.badlogic.gdx.utils.JsonValue) -> a
    175:235:void parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue,java.lang.String) -> a
    238:257:int parseTextureUsage(java.lang.String) -> c
    261:264:com.badlogic.gdx.graphics.Color parseColor(com.badlogic.gdx.utils.JsonValue) -> b
    268:273:com.badlogic.gdx.math.Vector2 readVector2(com.badlogic.gdx.utils.JsonValue,float,float) -> a
    277:285:com.badlogic.gdx.utils.Array parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> b
    291:367:com.badlogic.gdx.graphics.g3d.model.data.ModelNode parseNodesRecursively(com.badlogic.gdx.utils.JsonValue) -> c
    371:467:void parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> c
com.badlogic.gdx.graphics.g3d.loader.MtlLoader -> com.badlogic.gdx.graphics.a.b.b:
    com.badlogic.gdx.utils.Array materials -> a
    335:429:void load(com.badlogic.gdx.files.FileHandle) -> a
    433:439:com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.loader.ObjLoader -> com.badlogic.gdx.graphics.a.b.c:
    boolean logWarning -> c
    com.badlogic.gdx.utils.FloatArray verts -> d
    com.badlogic.gdx.utils.FloatArray norms -> e
    com.badlogic.gdx.utils.FloatArray uvs -> f
    com.badlogic.gdx.utils.Array groups -> g
    100:100:com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters) -> a
    104:286:com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean) -> a
    292:297:com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String) -> b
    301:306:int getIndex(java.lang.String,int) -> a
    64:64:com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> a
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group -> com.badlogic.gdx.graphics.a.b.d:
    java.lang.String name -> a
    java.lang.String materialName -> b
    com.badlogic.gdx.utils.Array faces -> c
    int numFaces -> d
    boolean hasNorms -> e
    boolean hasUVs -> f
    com.badlogic.gdx.graphics.g3d.Material mat -> g
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0 -> h
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters -> com.badlogic.gdx.graphics.a.b.e:
    boolean flipV -> c
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.a.c.a:
    java.lang.String id -> a
    float duration -> b
    com.badlogic.gdx.utils.Array nodeAnimations -> c
com.badlogic.gdx.graphics.g3d.model.MeshPart -> com.badlogic.gdx.graphics.a.c.b:
    java.lang.String id -> a
    int primitiveType -> b
    int indexOffset -> c
    int numVertices -> d
    com.badlogic.gdx.graphics.Mesh mesh -> e
    84:84:boolean equals(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> a
    90:93:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.model.Node -> com.badlogic.gdx.graphics.a.c.c:
    java.lang.String id -> a
    boolean inheritTransform -> b
    boolean isAnimated -> c
    com.badlogic.gdx.math.Vector3 translation -> d
    com.badlogic.gdx.math.Quaternion rotation -> e
    com.badlogic.gdx.math.Vector3 scale -> f
    com.badlogic.gdx.math.Matrix4 localTransform -> g
    com.badlogic.gdx.math.Matrix4 globalTransform -> h
    com.badlogic.gdx.utils.Array parts -> i
    com.badlogic.gdx.graphics.g3d.model.Node parent -> j
    com.badlogic.gdx.utils.Array children -> k
    60:61:com.badlogic.gdx.math.Matrix4 calculateLocalTransform() -> a
    67:71:com.badlogic.gdx.math.Matrix4 calculateWorldTransform() -> b
    78:86:void calculateTransforms(boolean) -> a
    89:101:void calculateBoneTransforms(boolean) -> b
    183:183:int addChild(com.badlogic.gdx.graphics.g3d.model.Node) -> a
    201:212:int insertChild(int,com.badlogic.gdx.graphics.g3d.model.Node) -> a
    236:238:boolean removeChild(com.badlogic.gdx.graphics.g3d.model.Node) -> b
    248:248:com.badlogic.gdx.graphics.g3d.model.Node getParent() -> c
    260:273:com.badlogic.gdx.graphics.g3d.model.Node getNode(com.badlogic.gdx.utils.Array,java.lang.String,boolean,boolean) -> a
com.badlogic.gdx.graphics.g3d.model.NodeAnimation -> com.badlogic.gdx.graphics.a.c.d:
    com.badlogic.gdx.graphics.g3d.model.Node node -> a
    com.badlogic.gdx.utils.Array translation -> b
    com.badlogic.gdx.utils.Array rotation -> c
    com.badlogic.gdx.utils.Array scaling -> d
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe -> com.badlogic.gdx.graphics.a.c.e:
    float keytime -> a
    java.lang.Object value -> b
com.badlogic.gdx.graphics.g3d.model.NodePart -> com.badlogic.gdx.graphics.a.c.f:
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> a
    com.badlogic.gdx.graphics.g3d.Material material -> b
    com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms -> c
    com.badlogic.gdx.math.Matrix4[] bones -> d
    boolean enabled -> e
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation -> com.badlogic.gdx.graphics.a.c.a.a:
    java.lang.String id -> a
    com.badlogic.gdx.utils.Array nodeAnimations -> b
com.badlogic.gdx.graphics.g3d.model.data.ModelData -> com.badlogic.gdx.graphics.a.c.a.b:
    java.lang.String id -> a
    short[] version -> b
    com.badlogic.gdx.utils.Array meshes -> c
    com.badlogic.gdx.utils.Array materials -> d
    com.badlogic.gdx.utils.Array nodes -> e
    com.badlogic.gdx.utils.Array animations -> f
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial -> com.badlogic.gdx.graphics.a.c.a.c:
    java.lang.String id -> a
    com.badlogic.gdx.graphics.Color ambient -> b
    com.badlogic.gdx.graphics.Color diffuse -> c
    com.badlogic.gdx.graphics.Color specular -> d
    com.badlogic.gdx.graphics.Color emissive -> e
    com.badlogic.gdx.graphics.Color reflection -> f
    float shininess -> g
    float opacity -> h
    com.badlogic.gdx.utils.Array textures -> i
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh -> com.badlogic.gdx.graphics.a.c.a.d:
    java.lang.String id -> a
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    float[] vertices -> c
    com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts -> d
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart -> com.badlogic.gdx.graphics.a.c.a.e:
    java.lang.String id -> a
    short[] indices -> b
    int primitiveType -> c
com.badlogic.gdx.graphics.g3d.model.data.ModelNode -> com.badlogic.gdx.graphics.a.c.a.f:
    java.lang.String id -> a
    int boneId -> b
    com.badlogic.gdx.math.Vector3 translation -> c
    com.badlogic.gdx.math.Quaternion rotation -> d
    com.badlogic.gdx.math.Vector3 scale -> e
    java.lang.String meshId -> f
    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts -> g
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children -> h
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation -> com.badlogic.gdx.graphics.a.c.a.g:
    java.lang.String nodeId -> a
    com.badlogic.gdx.utils.Array translation -> b
    com.badlogic.gdx.utils.Array rotation -> c
    com.badlogic.gdx.utils.Array scaling -> d
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe -> com.badlogic.gdx.graphics.a.c.a.h:
    float keytime -> a
    java.lang.Object value -> b
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart -> com.badlogic.gdx.graphics.a.c.a.i:
    java.lang.String materialId -> a
    java.lang.String meshPartId -> b
    com.badlogic.gdx.utils.ArrayMap bones -> c
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture -> com.badlogic.gdx.graphics.a.c.a.j:
    java.lang.String id -> a
    java.lang.String fileName -> b
    com.badlogic.gdx.math.Vector2 uvTranslation -> c
    com.badlogic.gdx.math.Vector2 uvScaling -> d
    int usage -> e
com.badlogic.gdx.graphics.g3d.particles.ParticleController -> com.badlogic.gdx.graphics.a.d.a:
    java.lang.String name -> a
    com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter emitter -> b
    com.badlogic.gdx.utils.Array influencers -> c
    com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer renderer -> d
    com.badlogic.gdx.math.Matrix4 transform -> e
    com.badlogic.gdx.math.Vector3 scale -> f
    float deltaTime -> g
    float deltaTimeSqr -> h
    72:74:void setTimeStep(float) -> a
    231:234:void dispose() -> a
    291:295:void write(com.badlogic.gdx.utils.Json) -> a
    299:303:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
    315:319:void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> a
com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent -> com.badlogic.gdx.graphics.a.d.b:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> a
    com.badlogic.gdx.math.Vector3 TMP_V2 -> b
    com.badlogic.gdx.math.Vector3 TMP_V3 -> c
    com.badlogic.gdx.math.Vector3 TMP_V4 -> d
    com.badlogic.gdx.math.Vector3 TMP_V5 -> e
    com.badlogic.gdx.math.Vector3 TMP_V6 -> f
    com.badlogic.gdx.math.Quaternion TMP_Q -> g
    com.badlogic.gdx.math.Quaternion TMP_Q2 -> h
    com.badlogic.gdx.math.Matrix3 TMP_M3 -> i
    com.badlogic.gdx.math.Matrix4 TMP_M4 -> j
    41:41:void dispose() -> dispose
    52:52:void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> a
    54:54:void write(com.badlogic.gdx.utils.Json) -> a
    56:56:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.graphics.g3d.particles.ParticleEffect -> com.badlogic.gdx.graphics.a.d.c:
    com.badlogic.gdx.utils.Array controllers -> a
    130:133:void dispose() -> dispose
    149:154:void setBatch(com.badlogic.gdx.utils.Array) -> a
    170:174:void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> a
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader -> com.badlogic.gdx.graphics.a.d.d:
    com.badlogic.gdx.utils.Array items -> a
    41:41:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> a
    45:70:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> a
    103:124:com.badlogic.gdx.graphics.g3d.particles.ParticleEffect loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> b
    31:31:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    31:31:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    31:31:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter -> com.badlogic.gdx.graphics.a.d.e:
    com.badlogic.gdx.utils.Array batches -> b
com.badlogic.gdx.graphics.g3d.particles.ResourceData -> com.badlogic.gdx.graphics.a.d.f:
    com.badlogic.gdx.utils.ObjectMap uniqueData -> c
    com.badlogic.gdx.utils.Array data -> d
    com.badlogic.gdx.utils.Array sharedAssets -> a
    int currentLoadIndex -> e
    java.lang.Object resource -> b
    163:163:com.badlogic.gdx.utils.Array getAssets() -> a
    194:198:void write(com.badlogic.gdx.utils.Json) -> a
    202:214:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.graphics.g3d.particles.ResourceData$AssetData -> com.badlogic.gdx.graphics.a.d.g:
    java.lang.String filename -> a
    java.lang.Class type -> b
    104:106:void write(com.badlogic.gdx.utils.Json) -> a
    109:116:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData -> com.badlogic.gdx.graphics.a.d.h:
    com.badlogic.gdx.utils.ObjectMap data -> a
    com.badlogic.gdx.utils.IntArray assets -> b
    int loadIndex -> d
    com.badlogic.gdx.graphics.g3d.particles.ResourceData resources -> c
    82:84:void write(com.badlogic.gdx.utils.Json) -> a
    88:90:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch -> com.badlogic.gdx.graphics.a.d.a.a:
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> a
com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter -> com.badlogic.gdx.graphics.a.d.b.a:
    int minParticleCount -> k
    int maxParticleCount -> l
    64:66:void write(com.badlogic.gdx.utils.Json) -> a
    70:72:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer -> com.badlogic.gdx.graphics.a.d.c.a:
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer -> com.badlogic.gdx.graphics.a.d.d.a:
    com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch batch -> k
    27:31:boolean setBatch(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> a
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> b
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor -> com.badlogic.gdx.graphics.a.e.a:
    com.badlogic.gdx.graphics.GLTexture texture -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    45:50:void set(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    53:58:void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> a
    62:66:boolean equals(java.lang.Object) -> equals
    72:78:int hashCode() -> hashCode
    83:96:int compareTo(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> b
    22:22:int compareTo(java.lang.Object) -> compareTo
com.badlogic.gdx.graphics.g3d.utils.TextureProvider -> com.badlogic.gdx.graphics.a.e.b:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider -> com.badlogic.gdx.graphics.a.e.c:
    com.badlogic.gdx.assets.AssetManager assetManager -> a
    50:50:com.badlogic.gdx.graphics.Texture load(java.lang.String) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    143:145:int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    175:192:com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    90:93:void checkNPOT() -> b
    97:97:boolean hasPKMHeader() -> a
    128:129:void dispose() -> dispose
    132:137:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    52:52:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> g
    57:57:boolean isPrepared() -> a
    62:70:void prepare() -> b
    74:91:void consumeCustomData(int) -> a
    95:95:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> h
    100:100:boolean disposePixmap() -> i
    105:105:int getWidth() -> d
    110:110:int getHeight() -> e
    115:115:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> j
    120:120:boolean useMipMaps() -> k
    125:125:boolean isManaged() -> f
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    54:54:boolean isPrepared() -> a
    59:70:void prepare() -> b
    73:85:com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    90:94:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> h
    99:99:boolean disposePixmap() -> i
    104:104:int getWidth() -> d
    109:109:int getHeight() -> e
    114:114:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> j
    119:119:boolean useMipMaps() -> k
    124:124:boolean isManaged() -> f
    133:133:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> g
    138:138:void consumeCustomData(int) -> a
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    69:72:void setupTexture() -> a
com.badlogic.gdx.graphics.glutils.GLFrameBuffer -> com.badlogic.gdx.graphics.glutils.e:
    java.util.Map buffers -> g
    com.badlogic.gdx.graphics.GLTexture colorTexture -> a
    int defaultFramebufferHandle -> h
    boolean defaultFramebufferHandleInitialized -> i
    int framebufferHandle -> j
    int depthbufferHandle -> k
    int stencilbufferHandle -> l
    int width -> b
    int height -> c
    boolean hasDepth -> d
    boolean hasStencil -> e
    com.badlogic.gdx.graphics.Pixmap$Format format -> f
    118:118:void setupTexture() -> a
    122:197:void build() -> j
    202:212:void dispose() -> dispose
    216:217:void bind() -> b
    221:222:void unbind() -> c
    226:228:void begin() -> d
    232:233:void setFrameBufferViewport() -> e
    237:238:void end() -> f
    247:249:void end(int,int,int,int) -> a
    253:253:com.badlogic.gdx.graphics.GLTexture getColorBufferTexture() -> g
    273:273:int getHeight() -> h
    287:291:void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.GLFrameBuffer) -> a
    296:303:void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    306:307:void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    310:316:java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder) -> a
    320:320:java.lang.String getManagedStatus() -> i
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.f:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    void color(com.badlogic.gdx.graphics.Color) -> a
    void color(float,float,float,float) -> a
    void color(float) -> a
    void vertex(float,float,float) -> a
    void end() -> a
    int getNumVertices() -> b
    int getMaxVertices() -> c
    void dispose() -> d
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.g:
    int primitiveType -> a
    int vertexIdx -> b
    int numSetTexCoords -> c
    int maxVertices -> d
    int numVertices -> e
    com.badlogic.gdx.graphics.Mesh mesh -> f
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> g
    boolean ownsShader -> h
    int numTexCoords -> i
    int vertexSize -> j
    int normalOffset -> k
    int colorOffset -> l
    int texCoordOffset -> m
    com.badlogic.gdx.math.Matrix4 projModelView -> n
    float[] vertices -> o
    java.lang.String[] shaderUniformNames -> p
    83:93:com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> b
    103:105:void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    108:109:void color(com.badlogic.gdx.graphics.Color) -> a
    112:113:void color(float,float,float,float) -> a
    116:117:void color(float) -> a
    134:142:void vertex(float,float,float) -> a
    145:157:void flush() -> e
    160:161:void end() -> a
    164:164:int getNumVertices() -> b
    169:169:int getMaxVertices() -> c
    173:175:void dispose() -> d
    178:201:java.lang.String createVertexShader(boolean,boolean,int) -> c
    205:226:java.lang.String createFragmentShader(boolean,boolean,int) -> d
    231:234:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> a
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.h:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean empty -> d
    53:53:int getNumIndices() -> a
    58:58:int getNumMaxIndices() -> b
    74:79:void setIndices(short[],int,int) -> a
    99:99:java.nio.ShortBuffer getBuffer() -> c
    104:104:void bind() -> d
    108:108:void unbind() -> e
    112:112:void invalidate() -> f
    116:117:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.i:
    java.nio.ShortBuffer buffer -> a
    java.nio.ByteBuffer byteBuffer -> b
    int bufferHandle -> c
    boolean isDirect -> d
    boolean isDirty -> e
    boolean isBound -> f
    int usage -> g
    boolean empty -> h
    89:89:int getNumIndices() -> a
    94:94:int getNumMaxIndices() -> b
    110:121:void setIndices(short[],int,int) -> a
    146:147:java.nio.ShortBuffer getBuffer() -> c
    152:161:void bind() -> d
    165:167:void unbind() -> e
    171:173:void invalidate() -> f
    177:182:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.j:
    java.nio.ShortBuffer buffer -> a
    java.nio.ByteBuffer byteBuffer -> b
    int bufferHandle -> c
    boolean isDirect -> d
    boolean isDirty -> e
    boolean isBound -> f
    int usage -> g
    86:90:int createBufferObject() -> g
    95:95:int getNumIndices() -> a
    100:100:int getNumMaxIndices() -> b
    116:127:void setIndices(short[],int,int) -> a
    153:154:java.nio.ShortBuffer getBuffer() -> c
    159:168:void bind() -> d
    172:174:void unbind() -> e
    178:180:void invalidate() -> f
    184:188:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.k:
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.KTXTextureData -> com.badlogic.gdx.graphics.glutils.l:
    com.badlogic.gdx.files.FileHandle file -> a
    int glType -> b
    int glTypeSize -> c
    int glFormat -> d
    int glInternalFormat -> e
    int glBaseInternalFormat -> f
    int pixelWidth -> g
    int pixelHeight -> h
    int pixelDepth -> i
    int numberOfArrayElements -> j
    int numberOfFaces -> k
    int numberOfMipmapLevels -> l
    int imagePos -> m
    java.nio.ByteBuffer compressedData -> n
    boolean useMipMaps -> o
    64:64:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> g
    69:69:boolean isPrepared() -> a
    74:144:void prepare() -> b
    153:154:void consumeCubemapData() -> c
    158:282:void consumeCustomData(int) -> a
    285:287:void disposePreparedData() -> l
    291:291:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> h
    296:296:boolean disposePixmap() -> i
    301:301:int getWidth() -> d
    306:306:int getHeight() -> e
    346:346:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> j
    351:351:boolean useMipMaps() -> k
    356:356:boolean isManaged() -> f
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.m:
    boolean useHWMipMap -> a
    49:60:void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    63:66:void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap) -> a
    69:77:void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> b
    80:103:void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> c
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.n:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean useMipMaps -> c
    boolean disposePixmap -> d
    boolean managed -> e
    45:45:boolean disposePixmap() -> i
    50:50:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> h
    55:55:int getWidth() -> d
    60:60:int getHeight() -> e
    65:65:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> j
    70:70:boolean useMipMaps() -> k
    75:75:boolean isManaged() -> f
    80:80:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> g
    85:85:void consumeCustomData(int) -> a
    90:90:boolean isPrepared() -> a
    95:95:void prepare() -> b
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.o:
    boolean pedantic -> a
    com.badlogic.gdx.utils.ObjectMap shaders -> e
    java.lang.String log -> f
    boolean isCompiled -> g
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> h
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> i
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> j
    java.lang.String[] uniformNames -> k
    com.badlogic.gdx.utils.ObjectIntMap attributes -> l
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> m
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> n
    java.lang.String[] attributeNames -> o
    int program -> p
    int vertexShaderHandle -> q
    int fragmentShaderHandle -> r
    java.nio.FloatBuffer matrix -> s
    java.lang.String vertexShaderSource -> t
    java.lang.String fragmentShaderSource -> u
    boolean invalidated -> v
    int refCount -> w
    java.nio.IntBuffer intbuf -> b
    java.nio.IntBuffer params -> c
    java.nio.IntBuffer type -> d
    173:188:void compileShaders(java.lang.String,java.lang.String) -> a
    191:212:int loadShader(int,java.lang.String) -> a
    216:239:int linkProgram() -> f
    247:255:java.lang.String getLog() -> a
    261:261:boolean isCompiled() -> b
    265:273:int fetchAttributeLocation(java.lang.String) -> c
    277:277:int fetchUniformLocation(java.lang.String) -> d
    281:290:int fetchUniformLocation(java.lang.String,boolean) -> a
    298:302:void setUniformi(java.lang.String,int) -> a
    498:499:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    507:508:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> a
    515:518:void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean) -> a
    637:640:void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> a
    660:663:void setVertexAttribute(int,int,int,boolean,int,int) -> a
    668:671:void begin() -> c
    676:678:void end() -> d
    682:688:void dispose() -> dispose
    694:699:void disableVertexAttribute(java.lang.String) -> a
    702:705:void disableVertexAttribute(int) -> a
    719:722:void enableVertexAttribute(int) -> b
    725:729:void checkManaged() -> g
    732:736:void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    741:750:void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    753:754:void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    757:765:java.lang.String getManagedStatus() -> e
    785:802:void fetchUniforms() -> h
    805:822:void fetchAttributes() -> i
    839:839:int getAttributeLocation(java.lang.String) -> b
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.p:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> a
    boolean matrixDirty -> b
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> c
    com.badlogic.gdx.math.Matrix4 transformMatrix -> d
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> e
    com.badlogic.gdx.math.Vector2 tmp -> f
    com.badlogic.gdx.graphics.Color color -> g
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType shapeType -> h
    boolean autoShapeType -> i
    float defaultRectLineWidth -> j
    126:127:void setColor(com.badlogic.gdx.graphics.Color) -> a
    131:132:void setColor(float,float,float,float) -> a
    145:147:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    155:157:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    161:161:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> a
    192:193:void setAutoShapeType(boolean) -> a
    198:200:void begin() -> b
    206:214:void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> a
    217:222:void set(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> b
    226:238:void point(float,float,float) -> a
    242:243:void line(float,float,float,float,float,float) -> a
    252:253:void line(float,float,float,float) -> b
    268:277:void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> a
    389:426:void rect(float,float,float,float) -> c
    478:479:void rect(float,float,float,float,float,float,float,float,float) -> a
    489:556:void rect(float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> a
    560:601:void rectLine(float,float,float,float,float) -> a
    611:769:void box(float,float,float,float,float,float) -> b
    1077:1100:void check(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType,com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType,int) -> a
    1104:1106:void end() -> c
    1109:1112:void flush() -> d
    1125:1125:boolean isDrawing() -> e
    1129:1130:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.q:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> a
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> b
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled -> c
    int glType -> d
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> e
    81:81:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    81:81:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    91:91:int getGlType() -> a
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.r:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    65:66:void dispose() -> dispose
    70:70:java.nio.FloatBuffer getBuffer() -> a
    75:75:int getNumVertices() -> b
    84:87:void setVertices(float[],int,int) -> a
    104:142:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    154:166:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    170:170:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    175:175:void invalidate() -> d
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.s:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> c
    java.nio.FloatBuffer buffer -> d
    java.nio.ByteBuffer byteBuffer -> e
    boolean ownsBuffer -> f
    int bufferHandle -> g
    int usage -> h
    boolean isDirty -> a
    boolean isBound -> b
    95:95:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    100:100:int getNumVertices() -> b
    110:111:java.nio.FloatBuffer getBuffer() -> a
    119:134:void setBuffer(java.nio.Buffer,boolean,com.badlogic.gdx.graphics.VertexAttributes) -> a
    137:141:void bufferChanged() -> e
    145:150:void setVertices(float[],int,int) -> a
    172:174:void setUsage(int) -> a
    185:218:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    230:244:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    249:251:void invalidate() -> d
    256:261:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.t:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    82:86:int createBufferObject() -> e
    91:91:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    96:96:int getNumVertices() -> b
    106:107:java.nio.FloatBuffer getBuffer() -> a
    111:115:void bufferChanged() -> f
    119:133:void setVertices(float[],int,int) -> a
    159:191:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    203:217:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    221:223:void invalidate() -> d
    228:232:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO -> com.badlogic.gdx.graphics.glutils.u:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    boolean vaoDirty -> j
    int vaoHandle -> k
    81:81:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    86:86:int getNumVertices() -> b
    96:97:java.nio.FloatBuffer getBuffer() -> a
    101:105:void bufferChanged() -> e
    109:114:void setVertices(float[],int,int) -> a
    139:159:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    162:187:void bindAttributes(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> c
    190:196:void bindData(com.badlogic.gdx.graphics.GL20) -> a
    210:213:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    220:223:void invalidate() -> d
    230:243:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.v:
    int getNumVertices() -> b
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    void setVertices(float[],int,int) -> a
    java.nio.FloatBuffer getBuffer() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> b
    void invalidate() -> d
    void dispose() -> dispose
com.badlogic.gdx.graphics.profiling.GL20Profiler -> com.badlogic.gdx.graphics.b.a:
    com.badlogic.gdx.graphics.GL20 gl20 -> a
    42:45:void glBindTexture(int,int) -> glBindTexture
    49:51:void glBlendFunc(int,int) -> glBlendFunc
    55:57:void glClear(int) -> glClear
    61:63:void glClearColor(float,float,float,float) -> glClearColor
    86:88:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    129:131:void glDepthMask(boolean) -> glDepthMask
    141:143:void glDisable(int) -> glDisable
    147:151:void glDrawArrays(int,int,int) -> glDrawArrays
    155:159:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    163:165:void glEnable(int) -> glEnable
    199:201:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    205:206:java.lang.String glGetString(int) -> glGetString
    223:225:void glPixelStorei(int,int) -> glPixelStorei
    241:243:void glScissor(int,int,int,int) -> glScissor
    266:268:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    272:274:void glTexParameterf(int,int,float) -> glTexParameterf
    279:281:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    285:287:void glViewport(int,int,int,int) -> glViewport
    291:293:void glAttachShader(int,int) -> glAttachShader
    303:305:void glBindBuffer(int,int) -> glBindBuffer
    309:311:void glBindFramebuffer(int,int) -> glBindFramebuffer
    315:317:void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    345:347:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    351:353:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    357:358:int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    363:365:void glCompileShader(int) -> glCompileShader
    369:370:int glCreateProgram() -> glCreateProgram
    375:376:int glCreateShader(int) -> glCreateShader
    393:395:void glDeleteProgram(int) -> glDeleteProgram
    405:407:void glDeleteShader(int) -> glDeleteShader
    417:419:void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    423:427:void glDrawElements(int,int,int,int) -> glDrawElements
    431:433:void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    437:439:void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    443:445:void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    455:457:void glGenerateMipmap(int) -> glGenerateMipmap
    473:474:java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    479:480:java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    491:492:int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    521:523:void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    527:528:java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    539:541:void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    545:546:java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    581:582:int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    647:649:void glLinkProgram(int) -> glLinkProgram
    659:661:void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    677:679:void glShaderSource(int,java.lang.String) -> glShaderSource
    731:733:void glUniform1i(int,int) -> glUniform1i
    833:836:void glUseProgram(int) -> glUseProgram
    894:896:void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    900:902:void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    906:908:void glDeleteTexture(int) -> glDeleteTexture
    912:913:int glGenTexture() -> glGenTexture
    918:920:void glDeleteBuffer(int) -> glDeleteBuffer
    924:926:void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    930:932:void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    936:937:int glGenBuffer() -> glGenBuffer
    942:943:int glGenFramebuffer() -> glGenFramebuffer
    948:949:int glGenRenderbuffer() -> glGenRenderbuffer
    1014:1016:void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
com.badlogic.gdx.graphics.profiling.GL30Profiler -> com.badlogic.gdx.graphics.b.b:
    com.badlogic.gdx.graphics.GL30 gl30 -> a
    43:46:void glBindTexture(int,int) -> glBindTexture
    50:52:void glBlendFunc(int,int) -> glBlendFunc
    56:58:void glClear(int) -> glClear
    62:64:void glClearColor(float,float,float,float) -> glClearColor
    87:89:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    130:132:void glDepthMask(boolean) -> glDepthMask
    142:144:void glDisable(int) -> glDisable
    148:152:void glDrawArrays(int,int,int) -> glDrawArrays
    156:160:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    164:166:void glEnable(int) -> glEnable
    200:202:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    206:207:java.lang.String glGetString(int) -> glGetString
    224:226:void glPixelStorei(int,int) -> glPixelStorei
    242:244:void glScissor(int,int,int,int) -> glScissor
    267:269:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    273:275:void glTexParameterf(int,int,float) -> glTexParameterf
    280:282:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    286:288:void glViewport(int,int,int,int) -> glViewport
    292:294:void glAttachShader(int,int) -> glAttachShader
    304:306:void glBindBuffer(int,int) -> glBindBuffer
    310:312:void glBindFramebuffer(int,int) -> glBindFramebuffer
    316:318:void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    346:348:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    352:354:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    358:359:int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    364:366:void glCompileShader(int) -> glCompileShader
    370:371:int glCreateProgram() -> glCreateProgram
    376:377:int glCreateShader(int) -> glCreateShader
    394:396:void glDeleteProgram(int) -> glDeleteProgram
    406:408:void glDeleteShader(int) -> glDeleteShader
    418:420:void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    424:428:void glDrawElements(int,int,int,int) -> glDrawElements
    432:434:void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    438:440:void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    444:446:void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    456:458:void glGenerateMipmap(int) -> glGenerateMipmap
    474:475:java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    480:481:java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    492:493:int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    522:524:void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    528:529:java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    540:542:void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    546:547:java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    582:583:int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    648:650:void glLinkProgram(int) -> glLinkProgram
    660:662:void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    678:680:void glShaderSource(int,java.lang.String) -> glShaderSource
    732:734:void glUniform1i(int,int) -> glUniform1i
    834:837:void glUseProgram(int) -> glUseProgram
    895:897:void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    901:903:void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    1098:1100:void glBindVertexArray(int) -> glBindVertexArray
    1110:1112:void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    1122:1124:void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    1128:1129:boolean glIsVertexArray(int) -> glIsVertexArray
    1475:1477:void glDeleteTexture(int) -> glDeleteTexture
    1481:1482:int glGenTexture() -> glGenTexture
    1487:1489:void glDeleteBuffer(int) -> glDeleteBuffer
    1493:1495:void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    1499:1501:void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    1505:1506:int glGenBuffer() -> glGenBuffer
    1511:1512:int glGenFramebuffer() -> glGenFramebuffer
    1517:1518:int glGenRenderbuffer() -> glGenRenderbuffer
    1583:1585:void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
com.badlogic.gdx.graphics.profiling.GLProfiler -> com.badlogic.gdx.graphics.b.c:
    int calls -> b
    int textureBindings -> c
    int drawCalls -> d
    int shaderSwitches -> e
    com.badlogic.gdx.math.FloatCounter vertexCount -> f
    48:53:void enable() -> a
    64:64:boolean isEnabled() -> b
    69:74:void reset() -> c
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.d.a:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> a
    float tapSquareSize -> d
    long tapCountInterval -> e
    float longPressSeconds -> f
    long maxFlingDelay -> g
    boolean inTapSquare -> h
    int tapCount -> i
    long lastTapTime -> j
    float lastTapX -> k
    float lastTapY -> l
    int lastTapButton -> m
    int lastTapPointer -> n
    boolean longPressFired -> b
    boolean pinching -> o
    boolean panning -> p
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> q
    float tapSquareCenterX -> r
    float tapSquareCenterY -> s
    long gestureStartTime -> t
    com.badlogic.gdx.math.Vector2 pointer1 -> c
    com.badlogic.gdx.math.Vector2 pointer2 -> u
    com.badlogic.gdx.math.Vector2 initialPointer1 -> v
    com.badlogic.gdx.math.Vector2 initialPointer2 -> w
    com.badlogic.gdx.utils.Timer$Task longPressTask -> x
    88:88:boolean touchDown(int,int,int,int) -> a
    92:123:boolean touchDown(float,float,int,int) -> a
    128:128:boolean touchDragged(int,int,int) -> a
    132:164:boolean touchDragged(float,float,int) -> a
    169:169:boolean touchUp(int,int,int,int) -> b
    173:224:boolean touchUp(float,float,int,int) -> b
    229:231:void cancel() -> a
    246:246:boolean isPanning() -> b
    256:256:boolean isWithinTapSquare(float,float,float,float) -> a
    265:266:void setTapSquareSize(float) -> a
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.d.b:
    com.badlogic.gdx.input.GestureDetector this$0 -> a
    59:60:void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.d.c:
    331:331:boolean touchDown(float,float,int,int) -> a
    336:336:boolean tap(float,float,int,int) -> b
    341:341:boolean longPress(float,float) -> a
    346:346:boolean fling(float,float,int) -> a
    351:351:boolean pan(float,float,float,float) -> a
    356:356:boolean panStop(float,float,int,int) -> c
    361:361:boolean zoom(float,float) -> b
    366:366:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.d.d:
    boolean touchDown(float,float,int,int) -> a
    boolean tap(float,float,int,int) -> b
    boolean longPress(float,float) -> a
    boolean fling(float,float,int) -> a
    boolean pan(float,float,float,float) -> a
    boolean panStop(float,float,int,int) -> c
    boolean zoom(float,float) -> b
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.d.e:
    int sampleSize -> a
    float lastX -> b
    float lastY -> c
    float deltaX -> d
    float deltaY -> e
    long lastTime -> f
    int numSamples -> g
    float[] meanX -> h
    float[] meanY -> i
    long[] meanTime -> j
    381:392:void start(float,float,long) -> a
    395:407:void update(float,float,long) -> b
    410:413:float getVelocityX() -> a
    417:420:float getVelocityY() -> b
    424:429:float getAverage(float[],int) -> a
    433:439:long getAverage(long[],int) -> a
com.badlogic.gdx.maps.ImageResolver -> com.badlogic.gdx.e.a:
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver -> com.badlogic.gdx.e.b:
    com.badlogic.gdx.assets.AssetManager assetManager -> a
    54:54:com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver -> com.badlogic.gdx.e.c:
    com.badlogic.gdx.utils.ObjectMap images -> a
    41:41:com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.Map -> com.badlogic.gdx.e.d:
    com.badlogic.gdx.maps.MapLayers layers -> a
    com.badlogic.gdx.maps.MapProperties properties -> b
    54:54:com.badlogic.gdx.maps.MapLayers getLayers() -> a
    59:59:com.badlogic.gdx.maps.MapProperties getProperties() -> b
    65:65:void dispose() -> dispose
com.badlogic.gdx.maps.MapLayer -> com.badlogic.gdx.e.e:
    java.lang.String name -> a
    float opacity -> b
    boolean visible -> c
    com.badlogic.gdx.maps.MapObjects objects -> d
    com.badlogic.gdx.maps.MapProperties properties -> e
    29:29:java.lang.String getName() -> a
    34:35:void setName(java.lang.String) -> a
    39:39:float getOpacity() -> b
    44:45:void setOpacity(float) -> a
    49:49:com.badlogic.gdx.maps.MapObjects getObjects() -> c
    59:60:void setVisible(boolean) -> a
    64:64:com.badlogic.gdx.maps.MapProperties getProperties() -> d
com.badlogic.gdx.maps.MapLayers -> com.badlogic.gdx.e.f:
    com.badlogic.gdx.utils.Array layers -> a
    37:43:com.badlogic.gdx.maps.MapLayer get(java.lang.String) -> a
    63:64:void add(com.badlogic.gdx.maps.MapLayer) -> a
    86:93:com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> a
    99:99:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapObject -> com.badlogic.gdx.e.g:
    java.lang.String name -> a
    float opacity -> b
    boolean visible -> c
    com.badlogic.gdx.maps.MapProperties properties -> d
    com.badlogic.gdx.graphics.Color color -> e
    36:37:void setName(java.lang.String) -> a
    66:67:void setVisible(boolean) -> a
    71:71:com.badlogic.gdx.maps.MapProperties getProperties() -> a
com.badlogic.gdx.maps.MapObjects -> com.badlogic.gdx.e.h:
    com.badlogic.gdx.utils.Array objects -> a
    69:70:void add(com.badlogic.gdx.maps.MapObject) -> a
    85:85:com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> a
    92:99:com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> a
    105:105:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapProperties -> com.badlogic.gdx.e.i:
    com.badlogic.gdx.utils.ObjectMap properties -> a
    45:45:java.lang.Object get(java.lang.String) -> a
    54:54:java.lang.Object get(java.lang.String,java.lang.Class) -> a
    71:72:void put(java.lang.String,java.lang.Object) -> a
com.badlogic.gdx.maps.objects.CircleMapObject -> com.badlogic.gdx.e.a.a:
    com.badlogic.gdx.math.Circle circle -> a
    29:29:com.badlogic.gdx.math.Circle getCircle() -> b
com.badlogic.gdx.maps.objects.EllipseMapObject -> com.badlogic.gdx.e.a.b:
    com.badlogic.gdx.math.Ellipse ellipse -> a
com.badlogic.gdx.maps.objects.PolygonMapObject -> com.badlogic.gdx.e.a.c:
    com.badlogic.gdx.math.Polygon polygon -> a
    17:17:com.badlogic.gdx.math.Polygon getPolygon() -> b
com.badlogic.gdx.maps.objects.PolylineMapObject -> com.badlogic.gdx.e.a.d:
    com.badlogic.gdx.math.Polyline polyline -> a
    29:29:com.badlogic.gdx.math.Polyline getPolyline() -> b
com.badlogic.gdx.maps.objects.RectangleMapObject -> com.badlogic.gdx.e.a.e:
    com.badlogic.gdx.math.Rectangle rectangle -> a
    29:29:com.badlogic.gdx.math.Rectangle getRectangle() -> b
com.badlogic.gdx.maps.objects.TextureMapObject -> com.badlogic.gdx.e.a.f:
    float x -> a
    float y -> b
    float originX -> c
    float originY -> d
    float scaleX -> e
    float scaleY -> f
    float rotation -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> h
    41:42:void setX(float) -> a
    51:52:void setY(float) -> b
    81:82:void setScaleX(float) -> c
    91:92:void setScaleY(float) -> d
    101:102:void setRotation(float) -> e
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader -> com.badlogic.gdx.e.b.a:
    com.badlogic.gdx.utils.XmlReader xml -> a
    com.badlogic.gdx.utils.XmlReader$Element root -> b
    boolean convertObjectToTileSpace -> c
    boolean flipY -> d
    int mapTileWidth -> e
    int mapTileHeight -> f
    int mapWidthInPixels -> g
    int mapHeightInPixels -> h
    com.badlogic.gdx.maps.tiled.TiledMap map -> i
    72:105:void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> a
    108:123:void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> b
    126:154:void loadImageLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    157:164:void loadBasicLayerInfo(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> a
    167:253:void loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> a
    256:267:void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> a
    270:287:com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> a
    291:343:int[] getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int) -> a
    347:347:int unsignedByteToInt(byte) -> a
    351:361:com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader$Parameters -> com.badlogic.gdx.e.b.b:
    boolean generateMipMaps -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> d
    boolean convertObjectToTileSpace -> e
    boolean flipY -> f
com.badlogic.gdx.maps.tiled.TiledMap -> com.badlogic.gdx.e.b.c:
    com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets -> a
    com.badlogic.gdx.utils.Array ownedResources -> b
    34:34:com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets() -> c
    46:47:void setOwnedResources(com.badlogic.gdx.utils.Array) -> a
    51:56:void dispose() -> dispose
com.badlogic.gdx.maps.tiled.TiledMapImageLayer -> com.badlogic.gdx.e.b.d:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    float x -> b
    float y -> c
    36:36:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> e
    44:44:float getX() -> f
    52:52:float getY() -> g
com.badlogic.gdx.maps.tiled.TiledMapTile -> com.badlogic.gdx.e.b.e:
    int getId() -> a
    void setId(int) -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> b
    float getOffsetX() -> c
    void setOffsetX(float) -> a
    float getOffsetY() -> d
    void setOffsetY(float) -> b
    com.badlogic.gdx.maps.MapProperties getProperties() -> e
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode -> com.badlogic.gdx.e.b.f:
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE -> a
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA -> b
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES -> c
    25:25:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values() -> values
    25:25:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.maps.tiled.TiledMapTileLayer -> com.badlogic.gdx.e.b.g:
    int width -> a
    int height -> b
    float tileWidth -> c
    float tileHeight -> d
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells -> e
    34:34:int getWidth() -> e
    39:39:int getHeight() -> f
    44:44:float getTileWidth() -> g
    49:49:float getTileHeight() -> h
    71:73:com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int) -> a
    82:85:void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell) -> a
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell -> com.badlogic.gdx.e.b.h:
    com.badlogic.gdx.maps.tiled.TiledMapTile tile -> a
    boolean flipHorizontally -> b
    boolean flipVertically -> c
    int rotation -> d
    100:100:com.badlogic.gdx.maps.tiled.TiledMapTile getTile() -> a
    107:108:void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile) -> a
    112:112:boolean getFlipHorizontally() -> b
    119:120:void setFlipHorizontally(boolean) -> a
    124:124:boolean getFlipVertically() -> c
    131:132:void setFlipVertically(boolean) -> b
    136:136:int getRotation() -> d
    143:144:void setRotation(int) -> a
com.badlogic.gdx.maps.tiled.TiledMapTileSet -> com.badlogic.gdx.e.b.i:
    java.lang.String name -> a
    com.badlogic.gdx.utils.IntMap tiles -> b
    com.badlogic.gdx.maps.MapProperties properties -> c
    39:40:void setName(java.lang.String) -> a
    44:44:com.badlogic.gdx.maps.MapProperties getProperties() -> a
    58:58:com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> a
    64:64:java.util.Iterator iterator() -> iterator
    72:73:void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile) -> a
com.badlogic.gdx.maps.tiled.TiledMapTileSets -> com.badlogic.gdx.e.b.j:
    com.badlogic.gdx.utils.Array tilesets -> a
    52:53:void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> a
    76:83:com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> a
    89:89:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.tiled.TmxMapLoader -> com.badlogic.gdx.e.b.k:
    65:65:com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> b
    75:94:com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> a
    100:114:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> a
    118:118:com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> b
    128:146:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> a
    156:211:com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    219:252:com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> a
    260:275:com.badlogic.gdx.utils.Array loadImages(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> b
    304:456:void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> b
    42:42:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    42:42:void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    42:42:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters -> com.badlogic.gdx.e.b.l:
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer -> com.badlogic.gdx.e.b.a.a:
    com.badlogic.gdx.maps.tiled.TiledMap map -> a
    float unitScale -> b
    com.badlogic.gdx.graphics.g2d.Batch batch -> c
    com.badlogic.gdx.math.Rectangle viewBounds -> d
    com.badlogic.gdx.math.Rectangle imageBounds -> e
    boolean ownsBatch -> f
    float[] vertices -> g
    79:80:void setMap(com.badlogic.gdx.maps.tiled.TiledMap) -> a
    128:130:void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> a
    181:236:void renderImageLayer(com.badlogic.gdx.maps.tiled.TiledMapImageLayer) -> a
    251:254:void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer -> com.badlogic.gdx.e.b.a.b:
    68:207:void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> a
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile -> com.badlogic.gdx.e.b.b.a:
    long lastTiledMapRenderTime -> a
    int id -> b
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> c
    com.badlogic.gdx.maps.MapProperties properties -> d
    com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile[] frameTiles -> e
    int[] animationIntervals -> f
    int frameCount -> g
    int loopDuration -> h
    long initialTimeOffset -> i
    47:47:int getId() -> a
    52:53:void setId(int) -> a
    66:74:int getCurrentFrameIndex() -> f
    79:79:com.badlogic.gdx.maps.tiled.TiledMapTile getCurrentFrame() -> g
    84:84:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> b
    94:94:float getOffsetX() -> c
    99:99:void setOffsetX(float) -> a
    104:104:float getOffsetY() -> d
    109:109:void setOffsetY(float) -> b
    133:136:com.badlogic.gdx.maps.MapProperties getProperties() -> e
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile -> com.badlogic.gdx.e.b.b.b:
    int id -> a
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> b
    com.badlogic.gdx.maps.MapProperties properties -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> d
    float offsetX -> e
    float offsetY -> f
    40:40:int getId() -> a
    45:46:void setId(int) -> a
    60:63:com.badlogic.gdx.maps.MapProperties getProperties() -> e
    68:68:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> b
    78:78:float getOffsetX() -> c
    83:84:void setOffsetX(float) -> a
    88:88:float getOffsetY() -> d
    93:94:void setOffsetY(float) -> b
com.badlogic.gdx.math.Affine2 -> com.badlogic.gdx.math.a:
    float m00 -> a
    float m01 -> b
    float m02 -> c
    float m10 -> d
    float m11 -> e
    float m12 -> f
    227:244:com.badlogic.gdx.math.Affine2 setToTrnRotScl(float,float,float,float,float) -> a
    393:406:com.badlogic.gdx.math.Affine2 preMul(com.badlogic.gdx.math.Affine2) -> a
    414:416:com.badlogic.gdx.math.Affine2 translate(float,float) -> a
    664:664:java.lang.String toString() -> toString
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.b:
    float x -> a
    float y -> b
    float radius -> c
    77:80:void set(float,float,float) -> a
    151:153:boolean contains(float,float) -> a
    191:191:java.lang.String toString() -> toString
    206:209:boolean equals(java.lang.Object) -> equals
    214:219:int hashCode() -> hashCode
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.c:
    com.badlogic.gdx.utils.ShortArray indicesArray -> a
    short[] indices -> b
    float[] vertices -> c
    int vertexCount -> d
    com.badlogic.gdx.utils.IntArray vertexTypes -> e
    com.badlogic.gdx.utils.ShortArray triangles -> f
    57:57:com.badlogic.gdx.utils.ShortArray computeTriangles(float[]) -> a
    65:93:com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int) -> a
    97:117:void triangulate() -> a
    121:126:int classifyVertex(int) -> a
    131:145:int findEarTip() -> b
    149:182:boolean isEarTip(int) -> b
    186:196:void cutEarTip(int) -> c
    199:199:int previousIndex(int) -> d
    203:203:int nextIndex(int) -> e
    207:220:boolean areVerticesClockwise(float[],int,int) -> b
    224:227:int computeSpannedAreaSign(float,float,float,float,float,float) -> a
com.badlogic.gdx.math.Ellipse -> com.badlogic.gdx.math.d:
    float x -> a
    float y -> b
    float width -> c
    float height -> d
    204:207:boolean equals(java.lang.Object) -> equals
    212:218:int hashCode() -> hashCode
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.e:
    int count -> a
    float total -> b
    float min -> c
    float max -> d
    float average -> e
    float latest -> f
    float value -> g
    com.badlogic.gdx.math.WindowedMean mean -> h
    53:68:void put(float) -> a
    72:80:void reset() -> a
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.f:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Vector3 tmpV -> f
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    62:77:void update(com.badlogic.gdx.math.Matrix4) -> a
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.g:
    com.badlogic.gdx.math.Interpolation linear -> a
    com.badlogic.gdx.math.Interpolation fade -> b
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> c
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> d
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> e
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> f
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> g
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> h
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> i
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> j
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> k
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> l
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> m
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> n
    com.badlogic.gdx.math.Interpolation sine -> o
    com.badlogic.gdx.math.Interpolation sineIn -> p
    com.badlogic.gdx.math.Interpolation sineOut -> q
    com.badlogic.gdx.math.Interpolation$Exp exp10 -> r
    com.badlogic.gdx.math.Interpolation$ExpIn exp10In -> s
    com.badlogic.gdx.math.Interpolation$ExpOut exp10Out -> t
    com.badlogic.gdx.math.Interpolation$Exp exp5 -> u
    com.badlogic.gdx.math.Interpolation$ExpIn exp5In -> v
    com.badlogic.gdx.math.Interpolation$ExpOut exp5Out -> w
    com.badlogic.gdx.math.Interpolation circle -> x
    com.badlogic.gdx.math.Interpolation circleIn -> y
    com.badlogic.gdx.math.Interpolation circleOut -> z
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> A
    com.badlogic.gdx.math.Interpolation$ElasticIn elasticIn -> B
    com.badlogic.gdx.math.Interpolation$ElasticOut elasticOut -> C
    com.badlogic.gdx.math.Interpolation$Swing swing -> D
    com.badlogic.gdx.math.Interpolation$SwingIn swingIn -> E
    com.badlogic.gdx.math.Interpolation$SwingOut swingOut -> F
    com.badlogic.gdx.math.Interpolation$Bounce bounce -> G
    com.badlogic.gdx.math.Interpolation$BounceIn bounceIn -> H
    com.badlogic.gdx.math.Interpolation$BounceOut bounceOut -> I
    float apply(float) -> a
    27:27:float apply(float,float,float) -> a
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.h:
    34:34:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.i:
    40:40:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.j:
    64:64:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.k:
    70:70:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.l:
    76:76:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.m:
    90:96:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.n:
    102:102:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.o:
    108:109:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.p:
    255:257:float out(float) -> b
    261:262:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.q:
    345:345:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.r:
    float[] widths -> J
    float[] heights -> K
    319:331:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.s:
    float value -> J
    float power -> K
    float scale -> L
    float bounces -> M
    211:217:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.t:
    227:228:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.u:
    238:239:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.v:
    float value -> J
    float power -> K
    float min -> L
    float scale -> M
    173:174:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.w:
    184:184:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.x:
    194:194:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.y:
    int power -> J
    135:136:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.z:
    146:146:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.aa:
    156:156:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.ab:
    float scale -> J
    359:365:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.ac:
    float scale -> J
    390:390:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.ad:
    float scale -> J
    377:378:float apply(float) -> a
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.ae:
    int ATAN2_DIM -> a
    float INV_ATAN2_DIM_MINUS_1 -> c
    java.util.Random random -> b
    63:63:float sin(float) -> a
    68:68:float cos(float) -> b
    73:73:float sinDeg(float) -> c
    78:78:float cosDeg(float) -> d
    137:137:int random(int) -> a
    167:167:float random() -> a
    172:172:float random(float) -> e
    177:177:float random(float,float) -> a
    228:235:int nextPowerOfTwo(int) -> b
    239:239:boolean isPowerOfTwo(int) -> c
    251:253:int clamp(int,int,int) -> a
    263:265:float clamp(float,float,float) -> a
    339:339:boolean isEqual(float,float) -> b
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.af:
    float[] table -> a
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.ag:
    float[] val -> a
    float[] tmp -> b
    60:70:com.badlogic.gdx.math.Matrix3 idt() -> a
    272:273:java.lang.String toString() -> toString
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    float[] tmp -> l
    float[] val -> a
    com.badlogic.gdx.math.Quaternion quat -> b
    com.badlogic.gdx.math.Quaternion quat2 -> c
    com.badlogic.gdx.math.Vector3 l_vez -> d
    com.badlogic.gdx.math.Vector3 l_vex -> e
    com.badlogic.gdx.math.Vector3 l_vey -> f
    com.badlogic.gdx.math.Vector3 tmpVec -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    com.badlogic.gdx.math.Vector3 right -> i
    com.badlogic.gdx.math.Vector3 tmpForward -> j
    com.badlogic.gdx.math.Vector3 tmpUp -> k
    117:117:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    127:128:com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    203:203:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> a
    222:246:com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float) -> a
    319:320:com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    364:380:com.badlogic.gdx.math.Matrix4 idt() -> a
    388:447:com.badlogic.gdx.math.Matrix4 inv() -> b
    550:551:com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> a
    581:607:com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    655:659:com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> a
    827:842:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    855:859:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    876:876:java.lang.String toString() -> toString
    996:1012:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Affine2) -> a
    void mul(float[],float[]) -> mul
    void prj(float[],float[],int,int,int) -> prj
    boolean inv(float[]) -> inv
    1416:1434:com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> b
    1493:1495:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> a
    1513:1531:com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> c
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.ah:
    com.badlogic.gdx.math.Vector3 normal -> a
    float d -> b
    80:82:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    180:180:java.lang.String toString() -> toString
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.ai:
    float[] localVertices -> a
    float[] worldVertices -> b
    float x -> c
    float y -> d
    float originX -> e
    float originY -> f
    float rotation -> g
    float scaleX -> h
    float scaleY -> i
    boolean dirty -> j
    56:94:float[] getTransformedVertices() -> a
    106:109:void setPosition(float,float) -> a
com.badlogic.gdx.math.Polyline -> com.badlogic.gdx.math.aj:
    float[] localVertices -> a
    float[] worldVertices -> b
    float x -> c
    float y -> d
    float originX -> e
    float originY -> f
    float rotation -> g
    float scaleX -> h
    float scaleY -> i
    boolean calculateScaledLength -> j
    boolean calculateLength -> k
    boolean dirty -> l
    48:86:float[] getTransformedVertices() -> a
    154:157:void setPosition(float,float) -> a
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.ak:
    com.badlogic.gdx.math.Quaternion tmp1 -> e
    com.badlogic.gdx.math.Quaternion tmp2 -> f
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    73:77:com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> a
    84:84:com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> a
    113:113:java.lang.String toString() -> toString
    340:366:void toMatrix(float[]) -> a
    371:371:com.badlogic.gdx.math.Quaternion idt() -> a
    682:688:int hashCode() -> hashCode
    693:706:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.RandomXS128 -> com.badlogic.gdx.math.al:
    long seed0 -> a
    long seed1 -> b
    70:74:long nextLong() -> nextLong
    80:80:int next(int) -> next
    88:88:int nextInt() -> nextInt
    99:99:int nextInt(int) -> nextInt
    110:115:long nextLong(long) -> a
    124:124:double nextDouble() -> nextDouble
    133:133:float nextFloat() -> nextFloat
    141:141:boolean nextBoolean() -> nextBoolean
    150:157:void nextBytes(byte[]) -> nextBytes
    166:168:void setSeed(long) -> setSeed
    174:176:void setState(long,long) -> a
    188:194:long murmurHash3(long) -> b
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.am:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    64:69:com.badlogic.gdx.math.Rectangle set(float,float,float,float) -> set
    74:74:float getX() -> getX
    81:83:com.badlogic.gdx.math.Rectangle setX(float) -> setX
    88:88:float getY() -> getY
    95:97:com.badlogic.gdx.math.Rectangle setY(float) -> setY
    102:102:float getWidth() -> getWidth
    109:111:com.badlogic.gdx.math.Rectangle setWidth(float) -> setWidth
    116:116:float getHeight() -> getHeight
    123:125:com.badlogic.gdx.math.Rectangle setHeight(float) -> setHeight
    131:131:com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2) -> getPosition
    138:141:com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    149:152:com.badlogic.gdx.math.Rectangle setPosition(float,float) -> setPosition
    160:163:com.badlogic.gdx.math.Rectangle setSize(float,float) -> setSize
    170:173:com.badlogic.gdx.math.Rectangle setSize(float) -> setSize
    179:179:com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2) -> getSize
    186:186:boolean contains(float,float) -> contains
    192:192:boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    198:204:boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    211:211:boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    218:223:com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle) -> set
    230:240:com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle) -> merge
    248:258:com.badlogic.gdx.math.Rectangle merge(float,float) -> merge
    265:265:com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2) -> merge
    272:287:com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[]) -> merge
    293:293:float getAspectRatio() -> getAspectRatio
    300:302:com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2) -> getCenter
    310:311:com.badlogic.gdx.math.Rectangle setCenter(float,float) -> setCenter
    318:319:com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2) -> setCenter
    327:338:com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle) -> fitOutside
    346:357:com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle) -> fitInside
    361:361:java.lang.String toString() -> toString
    365:365:float area() -> area
    369:369:float perimeter() -> perimeter
    373:379:int hashCode() -> hashCode
    383:391:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.an:
    com.badlogic.gdx.math.Vector2 X -> a
    com.badlogic.gdx.math.Vector2 Y -> b
    com.badlogic.gdx.math.Vector2 Zero -> c
    float x -> d
    float y -> e
    57:57:com.badlogic.gdx.math.Vector2 cpy() -> a
    66:66:float len() -> b
    80:82:com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> a
    90:92:com.badlogic.gdx.math.Vector2 set(float,float) -> a
    97:99:com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> b
    107:109:com.badlogic.gdx.math.Vector2 sub(float,float) -> b
    114:119:com.badlogic.gdx.math.Vector2 nor() -> c
    124:126:com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> c
    134:136:com.badlogic.gdx.math.Vector2 add(float,float) -> c
    154:156:com.badlogic.gdx.math.Vector2 scl(float) -> a
    196:198:float dst(com.badlogic.gdx.math.Vector2) -> d
    275:275:java.lang.String toString() -> toString
    394:398:int hashCode() -> hashCode
    403:409:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.ao:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 X -> d
    com.badlogic.gdx.math.Vector3 Y -> e
    com.badlogic.gdx.math.Vector3 Z -> f
    com.badlogic.gdx.math.Vector3 Zero -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    82:85:com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    90:90:com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    117:117:com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    126:126:com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    139:139:com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    149:149:com.badlogic.gdx.math.Vector3 sub(float,float,float) -> c
    162:162:com.badlogic.gdx.math.Vector3 scl(float) -> a
    212:212:float len2() -> a
    275:277:com.badlogic.gdx.math.Vector3 nor() -> b
    287:287:float dot(com.badlogic.gdx.math.Vector3) -> d
    303:303:com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> e
    312:312:com.badlogic.gdx.math.Vector3 crs(float,float,float) -> d
    328:329:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> a
    374:376:com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> b
    568:568:java.lang.String toString() -> toString
    615:620:int hashCode() -> hashCode
    625:632:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.ap:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    41:41:boolean hasEnoughData() -> a
    46:51:void clear() -> b
    57:62:void addValue(float) -> a
    68:79:float getMean() -> c
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.a.a:
    com.badlogic.gdx.math.Vector3 origin -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 tmp -> c
    72:72:java.lang.String toString() -> toString
    113:116:boolean equals(java.lang.Object) -> equals
    121:125:int hashCode() -> hashCode
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.f.a:
    int statusCode -> a
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.f.b:
    com.badlogic.gdx.utils.async.AsyncExecutor asyncExecutor -> c
    com.badlogic.gdx.utils.ObjectMap connections -> a
    com.badlogic.gdx.utils.ObjectMap listeners -> b
    133:230:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> a
    233:239:void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> a
    242:244:void removeFromConnectionsAndListeners(com.badlogic.gdx.Net$HttpRequest) -> b
    248:250:void putIntoConnectionsAndListeners(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener,java.net.HttpURLConnection) -> a
    253:254:com.badlogic.gdx.Net$HttpResponseListener getFromListeners(com.badlogic.gdx.Net$HttpRequest) -> c
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.f.c:
    boolean val$doingOutPut -> a
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> b
    java.net.HttpURLConnection val$connection -> c
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> d
    com.badlogic.gdx.net.NetJavaImpl this$0 -> e
    174:219:java.lang.Void call() -> a
    169:169:java.lang.Object call() -> d
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.f.d:
    java.net.HttpURLConnection connection -> a
    com.badlogic.gdx.net.HttpStatus status -> b
com.badlogic.gdx.net.NetJavaServerSocketImpl -> com.badlogic.gdx.f.e:
    com.badlogic.gdx.Net$Protocol protocol -> a
    java.net.ServerSocket server -> b
    93:101:void dispose() -> dispose
com.badlogic.gdx.net.NetJavaSocketImpl -> com.badlogic.gdx.f.f:
    java.net.Socket socket -> a
    61:76:void applyHints(com.badlogic.gdx.net.SocketHints) -> a
    112:120:void dispose() -> dispose
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.f.g:
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.f.h:
    int backlog -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    boolean reuseAddress -> e
    int acceptTimeout -> f
    int receiveBufferSize -> g
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.f.i:
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.f.j:
    int connectTimeout -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    int trafficClass -> e
    boolean keepAlive -> f
    boolean tcpNoDelay -> g
    int sendBufferSize -> h
    int receiveBufferSize -> i
    boolean linger -> j
    int lingerDuration -> k
    int socketTimeout -> l
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> a
    float[] tmp -> g
    com.badlogic.gdx.physics.box2d.World world -> h
    com.badlogic.gdx.utils.Array fixtures -> i
    com.badlogic.gdx.utils.Array joints -> b
    java.lang.Object userData -> j
    com.badlogic.gdx.physics.box2d.Transform transform -> k
    com.badlogic.gdx.math.Vector2 position -> l
    com.badlogic.gdx.math.Vector2 worldCenter -> m
    com.badlogic.gdx.math.Vector2 localCenter -> n
    com.badlogic.gdx.math.Vector2 linearVelocity -> o
    com.badlogic.gdx.physics.box2d.MassData massData -> p
    com.badlogic.gdx.math.Vector2 localPoint -> q
    com.badlogic.gdx.math.Vector2 worldVector -> r
    com.badlogic.gdx.math.Vector2 localPoint2 -> c
    com.badlogic.gdx.math.Vector2 localVector -> d
    com.badlogic.gdx.math.Vector2 linVelWorld -> e
    com.badlogic.gdx.math.Vector2 linVelLoc -> f
    59:65:void reset(long) -> a
    73:79:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> a
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    139:140:void setTransform(com.badlogic.gdx.math.Vector2,float) -> a
    148:149:void setTransform(float,float,float) -> a
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    160:161:com.badlogic.gdx.physics.box2d.Transform getTransform() -> a
    void jniGetTransform(long,float[]) -> jniGetTransform
    179:182:com.badlogic.gdx.math.Vector2 getPosition() -> b
    void jniGetPosition(long,float[]) -> jniGetPosition
    195:195:float getAngle() -> c
    float jniGetAngle(long) -> jniGetAngle
    208:211:com.badlogic.gdx.math.Vector2 getWorldCenter() -> d
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    246:247:void setLinearVelocity(float,float) -> a
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    259:262:com.badlogic.gdx.math.Vector2 getLinearVelocity() -> e
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    274:275:void setAngularVelocity(float) -> a
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    365:366:void applyLinearImpulse(float,float,float,float,boolean) -> a
    void jniApplyLinearImpulse(long,float,float,float,float,boolean) -> jniApplyLinearImpulse
    644:648:com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> f
    int jniGetType(long) -> jniGetType
    710:710:boolean isAwake() -> g
    boolean jniIsAwake(long) -> jniIsAwake
    725:730:void setActive(boolean) -> a
    void jniSetActive(long,boolean) -> jniSetActive
    739:739:boolean isActive() -> h
    boolean jniIsActive(long) -> jniIsActive
    749:750:void setFixedRotation(boolean) -> b
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    769:769:com.badlogic.gdx.utils.Array getFixtureList() -> i
    774:774:com.badlogic.gdx.utils.Array getJointList() -> j
    787:787:float getGravityScale() -> k
    float jniGetGravityScale(long) -> jniGetGravityScale
    797:798:void setGravityScale(float) -> b
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    812:812:java.lang.Object getUserData() -> l
    817:818:void setUserData(java.lang.Object) -> a
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.a:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> a
    com.badlogic.gdx.math.Vector2 position -> b
    float angle -> c
    com.badlogic.gdx.math.Vector2 linearVelocity -> d
    float angularVelocity -> e
    float linearDamping -> f
    float angularDamping -> g
    boolean allowSleep -> h
    boolean awake -> i
    boolean fixedRotation -> j
    boolean bullet -> k
    boolean active -> l
    float gravityScale -> m
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.b:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> a
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> b
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> c
    int value -> d
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES -> e
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
    38:38:int getValue() -> a
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.c:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> a
    com.badlogic.gdx.math.Vector2[] vertices -> j
    com.badlogic.gdx.math.Vector2 lower -> k
    com.badlogic.gdx.math.Vector2 upper -> l
    com.badlogic.gdx.utils.Array bodies -> m
    com.badlogic.gdx.utils.Array joints -> n
    boolean drawBodies -> o
    boolean drawJoints -> p
    boolean drawAABBs -> q
    boolean drawInactiveBodies -> r
    boolean drawVelocities -> s
    boolean drawContacts -> t
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> b
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> c
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> d
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> e
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> f
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> g
    com.badlogic.gdx.graphics.Color AABB_COLOR -> h
    com.badlogic.gdx.graphics.Color VELOCITY_COLOR -> i
    com.badlogic.gdx.math.Vector2 t -> u
    com.badlogic.gdx.math.Vector2 axis -> v
    com.badlogic.gdx.math.Vector2 f -> w
    com.badlogic.gdx.math.Vector2 v -> x
    com.badlogic.gdx.math.Vector2 lv -> y
    78:80:void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> a
    92:116:void renderBodies(com.badlogic.gdx.physics.box2d.World) -> a
    119:133:void renderBody(com.badlogic.gdx.physics.box2d.Body) -> a
    136:145:com.badlogic.gdx.graphics.Color getColorByBody(com.badlogic.gdx.physics.box2d.Body) -> b
    149:189:void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> a
    195:233:void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> a
    240:255:void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    258:267:void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean) -> a
    270:296:void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    299:301:void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    304:309:void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> a
    368:369:void dispose() -> dispose
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    boolean isLooped -> a
    float[] verts -> c
    long newChainShape() -> newChainShape
    76:78:void createChain(float[]) -> a
    83:89:void createChain(com.badlogic.gdx.math.Vector2[]) -> a
    void jniCreateChain(long,float[],int) -> jniCreateChain
    132:132:int getVertexCount() -> a
    int jniGetVertexCount(long) -> jniGetVertexCount
    146:149:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> a
    com.badlogic.gdx.math.Vector2 position -> c
    long newCircleShape() -> newCircleShape
    52:55:com.badlogic.gdx.math.Vector2 getPosition() -> a
    void jniGetPosition(long,float[]) -> jniGetPosition
    66:67:void setPosition(com.badlogic.gdx.math.Vector2) -> a
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> b
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> c
    float[] tmp -> d
    48:60:com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> a
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    116:116:com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> b
    long jniGetFixtureA(long) -> jniGetFixtureA
    126:126:com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> c
    long jniGetFixtureB(long) -> jniGetFixtureB
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.d:
    boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> a
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.e:
    com.badlogic.gdx.physics.box2d.World world -> a
    long addr -> b
    float[] tmp -> c
    float[] normalImpulses -> d
    float[] tangentImpulses -> e
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.f:
    void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> a
    void endContact(com.badlogic.gdx.physics.box2d.Contact) -> b
    void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> a
    void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> a
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> a
    long newEdgeShape() -> newEdgeShape
    59:62:void getVertex1(com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    71:74:void getVertex2(com.badlogic.gdx.math.Vector2) -> b
    void jniGetVertex2(long,float[]) -> jniGetVertex2
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.g:
    short categoryBits -> a
    short maskBits -> b
    short groupIndex -> c
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> d
    long addr -> a
    com.badlogic.gdx.physics.box2d.Shape shape -> b
    java.lang.Object userData -> c
    short[] tmp -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
    48:52:void reset(com.badlogic.gdx.physics.box2d.Body,long) -> a
    57:68:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    int jniGetType(long) -> jniGetType
    88:111:com.badlogic.gdx.physics.box2d.Shape getShape() -> b
    long jniGetShape(long) -> jniGetShape
    160:164:com.badlogic.gdx.physics.box2d.Filter getFilterData() -> c
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    188:188:com.badlogic.gdx.physics.box2d.Body getBody() -> d
    301:302:void setUserData(java.lang.Object) -> a
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.h:
    com.badlogic.gdx.physics.box2d.Shape shape -> a
    float friction -> b
    float restitution -> c
    float density -> d
    boolean isSensor -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> d
    float[] tmp -> e
    java.lang.Object userData -> f
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> b
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> c
    com.badlogic.gdx.math.Vector2 anchorA -> g
    com.badlogic.gdx.math.Vector2 anchorB -> h
    54:58:com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> a
    int jniGetType(long) -> jniGetType
    68:68:com.badlogic.gdx.physics.box2d.Body getBodyA() -> b
    long jniGetBodyA(long) -> jniGetBodyA
    78:78:com.badlogic.gdx.physics.box2d.Body getBodyB() -> c
    long jniGetBodyB(long) -> jniGetBodyB
    90:93:com.badlogic.gdx.math.Vector2 getAnchorA() -> d
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    107:110:com.badlogic.gdx.math.Vector2 getAnchorB() -> e
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    167:168:void setUserData(java.lang.Object) -> a
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.i:
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.j:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> a
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> b
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> c
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> d
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> e
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> f
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> g
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> h
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> i
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> j
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> k
    com.badlogic.gdx.physics.box2d.JointDef$JointType MotorJoint -> l
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> m
    int value -> n
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES -> o
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.k:
    com.badlogic.gdx.physics.box2d.Body other -> a
    com.badlogic.gdx.physics.box2d.Joint joint -> b
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.l:
    long addr -> a
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> b
    com.badlogic.gdx.math.Vector2 localNormal -> c
    com.badlogic.gdx.math.Vector2 localPoint -> d
    int[] tmpInt -> e
    float[] tmpFloat -> f
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.m:
    com.badlogic.gdx.math.Vector2 localPoint -> a
    float normalImpulse -> b
    float tangentImpulse -> c
    int contactID -> d
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> e
    118:118:java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.n:
    com.badlogic.gdx.math.Vector2 center -> a
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> a
    long newPolygonShape() -> newPolygonShape
    61:62:void set(float[]) -> a
    void jniSet(long,float[],int,int) -> jniSet
    85:86:void setAsBox(float,float) -> a
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    99:100:void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> a
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    109:109:int getVertexCount() -> a
    int jniGetVertexCount(long) -> jniGetVertexCount
    123:126:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.o:
    boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture) -> a
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.p:
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> b
    45:45:float getRadius() -> b
    float jniGetRadius(long) -> jniGetRadius
    55:56:void setRadius(float) -> a
    void jniSetRadius(long,float) -> jniSetRadius
    65:66:void dispose() -> c
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.q:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> a
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> b
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> c
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> d
    com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES -> e
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.r:
    float[] vals -> a
    com.badlogic.gdx.math.Vector2 position -> b
    49:54:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> a
    59:59:com.badlogic.gdx.math.Vector2 getPosition() -> a
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> a
    com.badlogic.gdx.utils.Pool freeFixtures -> b
    long addr -> c
    com.badlogic.gdx.utils.LongMap bodies -> d
    com.badlogic.gdx.utils.LongMap fixtures -> e
    com.badlogic.gdx.utils.LongMap joints -> f
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> g
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> h
    float[] tmpGravity -> i
    com.badlogic.gdx.math.Vector2 gravity -> j
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> k
    long[] contactAddrs -> l
    com.badlogic.gdx.utils.Array contacts -> m
    com.badlogic.gdx.utils.Array freeContacts -> n
    com.badlogic.gdx.physics.box2d.Contact contact -> o
    com.badlogic.gdx.physics.box2d.Manifold manifold -> p
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> q
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> r
    com.badlogic.gdx.math.Vector2 rayPoint -> s
    com.badlogic.gdx.math.Vector2 rayNormal -> t
    long newWorld(float,float,boolean) -> newWorld
    274:275:void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> a
    283:289:com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> a
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    320:331:void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> a
    void jniDestroyBody(long,long) -> jniDestroyBody
    370:371:void deactivateBody(com.badlogic.gdx.physics.box2d.Body) -> b
    void jniDeactivateBody(long,long) -> jniDeactivateBody
    662:667:void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    686:687:void step(float,int,int) -> a
    void jniStep(long,float,int,int) -> jniStep
    771:771:int getContactCount() -> a
    int jniGetContactCount(long) -> jniGetContactCount
    781:782:void setGravity(com.badlogic.gdx.math.Vector2) -> a
    void jniSetGravity(long,float,float) -> jniSetGravity
    884:905:com.badlogic.gdx.utils.Array getContactList() -> b
    910:915:void getBodies(com.badlogic.gdx.utils.Array) -> a
    928:933:void getJoints(com.badlogic.gdx.utils.Array) -> b
    void jniGetContactList(long,long[]) -> jniGetContactList
    948:949:void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    961:972:boolean contactFilter(long,long) -> contactFilter
    981:983:void beginContact(long) -> beginContact
    986:988:void endContact(long) -> endContact
    991:994:void preSolve(long,long) -> preSolve
    997:1000:void postSolve(long,long) -> postSolve
    1003:1006:boolean reportFixture(long) -> reportFixture
    1041:1048:float reportRayFixture(long,float,float,float,float,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.s:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    194:194:com.badlogic.gdx.physics.box2d.Body newObject() -> a
    191:191:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.t:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    202:202:com.badlogic.gdx.physics.box2d.Fixture newObject() -> a
    199:199:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.u:
    com.badlogic.gdx.math.Vector2 normal -> a
    com.badlogic.gdx.math.Vector2[] points -> b
    float[] separations -> c
    int numContactPoints -> d
    39:39:com.badlogic.gdx.math.Vector2[] getPoints() -> a
    50:50:int getNumberOfContactPoints() -> b
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> d
    com.badlogic.gdx.math.Vector2 groundAnchorA -> e
    com.badlogic.gdx.math.Vector2 groundAnchorB -> f
    41:43:com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> f
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    56:58:com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> g
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.a:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.scenes.scene2d.Actor target -> b
    com.badlogic.gdx.utils.Pool pool -> c
    boolean act(float) -> a
    42:42:void restart() -> a
    56:64:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    68:68:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> b
    74:75:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    89:93:void reset() -> reset
    96:96:com.badlogic.gdx.utils.Pool getPool() -> c
    103:104:void setPool(com.badlogic.gdx.utils.Pool) -> a
    107:111:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.b:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    boolean debug -> debug
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.Object userObject -> userObject
    83:83:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    90:106:void act(float) -> act
    121:159:boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    169:194:boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    209:210:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    216:217:boolean remove() -> remove
    225:229:boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    233:233:boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    237:237:com.badlogic.gdx.utils.Array getListeners() -> getListeners
    243:244:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    248:248:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    252:252:com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    256:260:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    263:264:void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    267:267:com.badlogic.gdx.utils.Array getActions() -> getActions
    272:272:boolean hasActions() -> hasActions
    277:280:void clearActions() -> clearActions
    284:286:void clearListeners() -> clearListeners
    290:292:void clear() -> clear
    296:296:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    302:303:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    307:312:boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    318:322:boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    328:328:boolean hasParent() -> hasParent
    333:333:com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    339:340:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    344:344:boolean isTouchable() -> isTouchable
    348:348:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    353:354:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    357:357:boolean isVisible() -> isVisible
    362:363:void setVisible(boolean) -> setVisible
    367:367:java.lang.Object getUserObject() -> getUserObject
    372:373:void setUserObject(java.lang.Object) -> setUserObject
    377:377:float getX() -> getX
    382:387:float getX(int) -> getX
    391:395:void setX(float) -> setX
    399:399:float getY() -> getY
    403:407:void setY(float) -> setY
    411:416:float getY(int) -> getY
    421:426:void setPosition(float,float) -> setPosition
    430:445:void setPosition(float,float,int) -> setPosition
    449:454:void moveBy(float,float) -> moveBy
    457:457:float getWidth() -> getWidth
    461:464:void setWidth(float) -> setWidth
    467:467:float getHeight() -> getHeight
    471:474:void setHeight(float) -> setHeight
    478:478:float getTop() -> getTop
    483:483:float getRight() -> getRight
    488:488:void positionChanged() -> positionChanged
    492:492:void sizeChanged() -> sizeChanged
    496:501:void setSize(float,float) -> setSize
    505:508:void sizeBy(float) -> sizeBy
    512:515:void sizeBy(float,float) -> sizeBy
    519:529:void setBounds(float,float,float,float) -> setBounds
    532:532:float getOriginX() -> getOriginX
    536:537:void setOriginX(float) -> setOriginX
    540:540:float getOriginY() -> getOriginY
    544:545:void setOriginY(float) -> setOriginY
    549:551:void setOrigin(float,float) -> setOrigin
    555:568:void setOrigin(int) -> setOrigin
    571:571:float getScaleX() -> getScaleX
    575:576:void setScaleX(float) -> setScaleX
    579:579:float getScaleY() -> getScaleY
    583:584:void setScaleY(float) -> setScaleY
    588:590:void setScale(float) -> setScale
    594:596:void setScale(float,float) -> setScale
    600:602:void scaleBy(float) -> scaleBy
    606:608:void scaleBy(float,float) -> scaleBy
    611:611:float getRotation() -> getRotation
    615:616:void setRotation(float) -> setRotation
    620:621:void rotateBy(float) -> rotateBy
    624:625:void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    628:629:void setColor(float,float,float,float) -> setColor
    633:633:com.badlogic.gdx.graphics.Color getColor() -> getColor
    638:638:java.lang.String getName() -> getName
    644:645:void setName(java.lang.String) -> setName
    649:650:void toFront() -> toFront
    654:655:void toBack() -> toBack
    661:671:void setZIndex(int) -> setZIndex
    676:678:int getZIndex() -> getZIndex
    683:683:boolean clipBegin() -> clipBegin
    692:703:boolean clipBegin(float,float,float,float) -> clipBegin
    708:709:void clipEnd() -> clipEnd
    713:715:com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    720:722:com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    728:728:com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    733:758:com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    763:769:com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    774:799:com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    804:805:void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    809:813:void drawDebugBounds(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugBounds
    817:819:void setDebug(boolean) -> setDebug
    822:822:boolean getDebug() -> getDebug
    827:828:com.badlogic.gdx.scenes.scene2d.Actor debug() -> debug
    832:838:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.c:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> c
    boolean capture -> d
    boolean bubbles -> e
    boolean handled -> f
    boolean stopped -> g
    boolean cancelled -> h
    48:49:void handle() -> a
    55:58:void cancel() -> b
    63:64:void stop() -> c
    67:75:void reset() -> reset
    79:79:com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> d
    83:84:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    88:88:com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> e
    92:93:void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    96:96:boolean getBubbles() -> f
    107:107:boolean isHandled() -> g
    112:112:boolean isStopped() -> h
    117:117:boolean isCancelled() -> i
    121:122:void setCapture(boolean) -> a
    131:132:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    136:136:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> j
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.d:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.e:
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Affine2 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 computedTransform -> computedTransform
    com.badlogic.gdx.math.Matrix4 oldTransform -> oldTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    46:51:void act(float) -> act
    56:59:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    66:132:void drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float) -> drawChildren
    137:141:void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    148:179:void drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugChildren
    183:203:com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    209:211:void applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    216:217:void resetTransform(com.badlogic.gdx.graphics.g2d.Batch) -> resetTransform
    223:225:void applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4) -> applyTransform
    230:231:void resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> resetTransform
    236:237:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    241:241:com.badlogic.gdx.math.Rectangle getCullingArea() -> getCullingArea
    245:255:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    260:260:void childrenChanged() -> childrenChanged
    264:269:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    274:282:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    287:293:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    298:307:void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    311:311:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    320:328:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> removeActor
    333:342:void clearChildren() -> clearChildren
    346:348:void clear() -> clear
    352:362:com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    366:370:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    374:378:boolean swapActor(int,int) -> swapActor
    383:387:boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    392:392:com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    396:396:boolean hasChildren() -> hasChildren
    405:406:void setTransform(boolean) -> setTransform
    409:409:boolean isTransform() -> isTransform
    415:421:com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
    426:436:void setDebug(boolean,boolean) -> setDebug
    440:441:com.badlogic.gdx.scenes.scene2d.Group debugAll() -> debugAll
    446:449:java.lang.String toString() -> toString
    453:469:void toString(java.lang.StringBuilder,int) -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.f:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> a
    float stageX -> b
    float stageY -> c
    int pointer -> d
    int button -> e
    int keyCode -> f
    int scrollAmount -> g
    char character -> h
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> i
    32:35:void reset() -> reset
    39:39:float getStageX() -> k
    43:44:void setStageX(float) -> a
    48:48:float getStageY() -> l
    52:53:void setStageY(float) -> b
    57:57:com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> m
    61:62:void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> a
    67:67:int getPointer() -> n
    71:72:void setPointer(int) -> a
    77:77:int getButton() -> o
    81:82:void setButton(int) -> b
    86:86:int getKeyCode() -> p
    90:91:void setKeyCode(int) -> c
    95:95:char getCharacter() -> q
    99:100:void setCharacter(char) -> a
    104:104:int getScrollAmount() -> r
    108:109:void setScrollAmount(int) -> d
    114:114:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> s
    119:120:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    125:127:com.badlogic.gdx.math.Vector2 toCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> a
    132:132:boolean isTouchFocusCancel() -> t
    136:136:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.g:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> a
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> b
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> c
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> d
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> e
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> f
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> g
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> h
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> i
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> j
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> k
    140:140:com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    140:140:com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.h:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    40:74:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    82:82:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    89:89:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    95:95:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    101:101:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    109:109:void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    116:116:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    120:120:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    125:125:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    130:130:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    135:135:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.i:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.j:
    boolean debug -> a
    com.badlogic.gdx.utils.viewport.Viewport viewport -> b
    com.badlogic.gdx.graphics.g2d.Batch batch -> c
    boolean ownsBatch -> d
    com.badlogic.gdx.scenes.scene2d.Group root -> e
    com.badlogic.gdx.math.Vector2 tempCoords -> f
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> g
    boolean[] pointerTouched -> h
    int[] pointerScreenX -> i
    int[] pointerScreenY -> j
    int mouseScreenX -> k
    int mouseScreenY -> l
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> m
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> n
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> o
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> p
    boolean actionsRequestRendering -> q
    com.badlogic.gdx.graphics.glutils.ShapeRenderer debugShapes -> r
    boolean debugAll -> s
    boolean debugUnderMouse -> t
    boolean debugParentUnderMouse -> u
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debugTableUnderMouse -> v
    com.badlogic.gdx.graphics.Color debugColor -> w
    119:133:void draw() -> a
    136:171:void drawDebug() -> o
    175:182:void disableDebug(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    186:187:void act() -> b
    194:224:void act(float) -> a
    228:250:com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> a
    255:282:boolean touchDown(int,int,int,int) -> a
    288:318:boolean touchDragged(int,int,int) -> a
    324:355:boolean touchUp(int,int,int,int) -> b
    361:382:boolean mouseMoved(int,int) -> a
    388:401:boolean scrolled(int) -> c
    407:415:boolean keyDown(int) -> a
    421:429:boolean keyUp(int) -> b
    435:443:boolean keyTyped(char) -> a
    449:456:void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> a
    475:499:void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    506:507:void cancelTouchFocus() -> c
    512:536:void cancelTouchFocusExcept(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    541:542:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    553:553:com.badlogic.gdx.utils.Array getActors() -> d
    571:571:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    577:577:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> b
    582:584:void clear() -> e
    588:591:void unfocusAll() -> f
    595:598:void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    603:623:void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    628:628:com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> g
    634:654:void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    659:659:com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> h
    676:676:float getWidth() -> i
    681:681:float getHeight() -> j
    686:686:com.badlogic.gdx.graphics.Camera getCamera() -> k
    691:691:com.badlogic.gdx.scenes.scene2d.Group getRoot() -> l
    700:701:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    707:708:com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> a
    730:737:void calculateScissors(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    747:747:boolean getActionsRequestRendering() -> m
    752:752:com.badlogic.gdx.graphics.Color getDebugColor() -> n
    762:768:void setDebugAll(boolean) -> a
    811:813:void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.k:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> a
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor target -> c
    int pointer -> d
    int button -> e
    823:825:void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.l:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> a
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> b
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> c
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> d
    21:21:com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    21:21:com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.a.a:
    33:36:com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> a
    71:71:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> a
    75:79:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> a
    108:112:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> b
    155:155:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> b
    159:163:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> c
    238:238:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> a
    243:243:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> a
    248:252:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> a
    262:266:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> a
    276:280:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> b
    288:288:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> a
    292:294:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> a
    304:304:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> b
    320:323:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> a
    340:343:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    347:351:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    391:394:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    443:446:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> a
    450:452:com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> a
    462:464:com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> b
    483:486:com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> a
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.a.b:
    com.badlogic.gdx.utils.Array waitForActions -> d
    29:31:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    34:36:void restart() -> a
    39:47:boolean delegate(float) -> b
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.a.c:
    float start -> c
    float end -> d
    com.badlogic.gdx.graphics.Color color -> e
    30:32:void begin() -> d
    35:36:void update(float) -> b
    39:41:void reset() -> reset
    58:59:void setAlpha(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.a.d:
    float duration -> d
    float time -> e
    32:38:boolean delegate(float) -> b
    47:49:void restart() -> a
    67:68:void setDuration(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.a.e:
    com.badlogic.gdx.scenes.scene2d.Action action -> c
    30:31:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    boolean delegate(float) -> b
    40:45:boolean act(float) -> a
    50:51:void restart() -> a
    54:56:void reset() -> reset
    59:61:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    64:66:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    69:69:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.a.f:
    float amountX -> c
    float amountY -> d
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.a.g:
    float startX -> c
    float startY -> d
    float endX -> e
    float endY -> f
    int alignment -> g
    29:31:void begin() -> d
    34:35:void update(float) -> b
    38:40:void reset() -> reset
    43:45:void setPosition(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.a.h:
    com.badlogic.gdx.utils.Array actions -> c
    boolean complete -> d
    64:77:boolean act(float) -> a
    82:86:void restart() -> a
    89:91:void reset() -> reset
    94:96:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    99:103:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    110:119:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.a.i:
    float lastPercent -> c
    25:26:void begin() -> d
    29:31:void update(float) -> b
    void updateRelative(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.a.j:
    boolean removed -> c
    28:32:boolean act(float) -> a
    36:37:void restart() -> a
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction -> com.badlogic.gdx.scenes.scene2d.a.k:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> c
    boolean capture -> d
    30:34:boolean act(float) -> a
    42:43:void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    50:51:void setCapture(boolean) -> a
    54:56:void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.a.l:
    int repeatCount -> d
    int executedCount -> e
    boolean finished -> f
    28:35:boolean delegate(float) -> b
    44:47:void restart() -> a
    51:52:void setCount(int) -> a
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.a.m:
    java.lang.Runnable runnable -> c
    boolean ran -> d
    30:34:boolean act(float) -> a
    39:46:void run() -> d
    49:50:void restart() -> a
    53:55:void reset() -> reset
    62:63:void setRunnable(java.lang.Runnable) -> a
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.a.n:
    float startX -> c
    float startY -> d
    float endX -> e
    float endY -> f
    26:28:void begin() -> d
    31:32:void update(float) -> b
    35:37:void setScale(float,float) -> a
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.a.o:
    int index -> d
    61:72:boolean act(float) -> a
    77:79:void restart() -> a
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.a.p:
    float duration -> c
    float time -> d
    com.badlogic.gdx.math.Interpolation interpolation -> e
    boolean reverse -> f
    boolean began -> g
    boolean complete -> h
    43:64:boolean act(float) -> a
    71:71:void begin() -> d
    75:75:void end() -> e
    void update(float) -> b
    88:91:void restart() -> a
    94:97:void reset() -> reset
    115:116:void setDuration(float) -> d
    123:124:void setInterpolation(com.badlogic.gdx.math.Interpolation) -> a
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.a.q:
    boolean visible -> c
    28:29:boolean act(float) -> a
    37:38:void setVisible(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    boolean programmaticChangeEvents -> programmaticChangeEvents
    87:94:void initialize() -> initialize
    113:114:void setChecked(boolean) -> setChecked
    117:126:void setChecked(boolean,boolean) -> setChecked
    131:132:void toggle() -> toggle
    135:135:boolean isChecked() -> isChecked
    139:139:boolean isPressed() -> isPressed
    143:143:boolean isOver() -> isOver
    147:147:com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    151:151:boolean isDisabled() -> isDisabled
    156:157:void setDisabled(boolean) -> setDisabled
    161:162:void setProgrammaticChangeEvents(boolean) -> setProgrammaticChangeEvents
    165:182:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    187:187:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    192:192:com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup getButtonGroup() -> getButtonGroup
    196:233:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    236:240:float getPrefWidth() -> getPrefWidth
    244:248:float getPrefHeight() -> getPrefHeight
    252:252:float getMinWidth() -> getMinWidth
    256:256:float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    90:92:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    44:51:void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    54:57:void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    60:64:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    67:70:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    73:75:void clear() -> clear
    79:87:void setChecked(java.lang.String) -> setChecked
    93:114:boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    119:126:void uncheckAll() -> uncheckAll
    130:131:com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    136:137:int getCheckedIndex() -> getCheckedIndex
    141:141:com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    145:145:com.badlogic.gdx.utils.Array getButtons() -> getButtons
    150:151:void setMinCheckCount(int) -> setMinCheckCount
    155:157:void setMaxCheckCount(int) -> setMaxCheckCount
    163:164:void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.Cell -> com.badlogic.gdx.scenes.scene2d.ui.Cell:
    java.lang.Float zerof -> zerof
    java.lang.Float onef -> onef
    java.lang.Integer zeroi -> zeroi
    java.lang.Integer onei -> onei
    java.lang.Integer centeri -> centeri
    java.lang.Integer topi -> topi
    java.lang.Integer bottomi -> bottomi
    java.lang.Integer lefti -> lefti
    java.lang.Integer righti -> righti
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceTop -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceLeft -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceBottom -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceRight -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    java.lang.Float fillX -> fillX
    java.lang.Float fillY -> fillY
    java.lang.Integer align -> align
    java.lang.Integer expandX -> expandX
    java.lang.Integer expandY -> expandY
    java.lang.Integer colspan -> colspan
    java.lang.Boolean uniformX -> uniformX
    java.lang.Boolean uniformY -> uniformY
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    float actorX -> actorX
    float actorY -> actorY
    float actorWidth -> actorWidth
    float actorHeight -> actorHeight
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> table
    boolean endRow -> endRow
    int column -> column
    int row -> row
    int cellAboveIndex -> cellAboveIndex
    float computedPadTop -> computedPadTop
    float computedPadLeft -> computedPadLeft
    float computedPadBottom -> computedPadBottom
    float computedPadRight -> computedPadRight
    43:44:void setLayout(com.badlogic.gdx.scenes.scene2d.ui.Table) -> setLayout
    48:53:com.badlogic.gdx.scenes.scene2d.ui.Cell setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    58:59:com.badlogic.gdx.scenes.scene2d.ui.Cell clearActor() -> clearActor
    64:64:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    69:69:boolean hasActor() -> hasActor
    74:81:com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    86:94:com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    99:100:com.badlogic.gdx.scenes.scene2d.ui.Cell size(float) -> size
    105:106:com.badlogic.gdx.scenes.scene2d.ui.Cell size(float,float) -> size
    111:115:com.badlogic.gdx.scenes.scene2d.ui.Cell width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    120:121:com.badlogic.gdx.scenes.scene2d.ui.Cell width(float) -> width
    126:130:com.badlogic.gdx.scenes.scene2d.ui.Cell height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    135:136:com.badlogic.gdx.scenes.scene2d.ui.Cell height(float) -> height
    141:144:com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    149:153:com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    157:159:com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    163:165:com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    170:171:com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float) -> minSize
    176:177:com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float,float) -> minSize
    181:182:com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(float) -> minWidth
    186:187:com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(float) -> minHeight
    192:195:com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    200:204:com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    208:210:com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    214:216:com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    221:222:com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float,float) -> prefSize
    227:228:com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float) -> prefSize
    232:233:com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(float) -> prefWidth
    237:238:com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(float) -> prefHeight
    243:246:com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    251:255:com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    259:261:com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    265:267:com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    272:273:com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float) -> maxSize
    278:279:com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float,float) -> maxSize
    283:284:com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(float) -> maxWidth
    288:289:com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(float) -> maxHeight
    294:299:com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    303:311:com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    315:317:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceTop
    321:323:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceLeft
    327:329:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceBottom
    333:335:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceRight
    340:342:com.badlogic.gdx.scenes.scene2d.ui.Cell space(float) -> space
    346:351:com.badlogic.gdx.scenes.scene2d.ui.Cell space(float,float,float,float) -> space
    355:357:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(float) -> spaceTop
    361:363:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(float) -> spaceLeft
    367:369:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(float) -> spaceBottom
    373:375:com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(float) -> spaceRight
    380:385:com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    389:397:com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    401:403:com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    407:409:com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    413:415:com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    419:421:com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    426:427:com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float) -> pad
    431:432:com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float,float,float,float) -> pad
    436:437:com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(float) -> padTop
    441:442:com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(float) -> padLeft
    446:447:com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(float) -> padBottom
    451:452:com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(float) -> padRight
    457:459:com.badlogic.gdx.scenes.scene2d.ui.Cell fill() -> fill
    464:465:com.badlogic.gdx.scenes.scene2d.ui.Cell fillX() -> fillX
    470:471:com.badlogic.gdx.scenes.scene2d.ui.Cell fillY() -> fillY
    475:477:com.badlogic.gdx.scenes.scene2d.ui.Cell fill(float,float) -> fill
    482:484:com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean,boolean) -> fill
    489:491:com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean) -> fill
    497:498:com.badlogic.gdx.scenes.scene2d.ui.Cell align(int) -> align
    503:504:com.badlogic.gdx.scenes.scene2d.ui.Cell center() -> center
    509:513:com.badlogic.gdx.scenes.scene2d.ui.Cell top() -> top
    518:522:com.badlogic.gdx.scenes.scene2d.ui.Cell left() -> left
    527:531:com.badlogic.gdx.scenes.scene2d.ui.Cell bottom() -> bottom
    536:540:com.badlogic.gdx.scenes.scene2d.ui.Cell right() -> right
    545:547:com.badlogic.gdx.scenes.scene2d.ui.Cell expand() -> expand
    552:553:com.badlogic.gdx.scenes.scene2d.ui.Cell expandX() -> expandX
    558:559:com.badlogic.gdx.scenes.scene2d.ui.Cell expandY() -> expandY
    563:565:com.badlogic.gdx.scenes.scene2d.ui.Cell expand(int,int) -> expand
    570:572:com.badlogic.gdx.scenes.scene2d.ui.Cell expand(boolean,boolean) -> expand
    576:577:com.badlogic.gdx.scenes.scene2d.ui.Cell colspan(int) -> colspan
    582:584:com.badlogic.gdx.scenes.scene2d.ui.Cell uniform() -> uniform
    589:590:com.badlogic.gdx.scenes.scene2d.ui.Cell uniformX() -> uniformX
    595:596:com.badlogic.gdx.scenes.scene2d.ui.Cell uniformY() -> uniformY
    600:602:com.badlogic.gdx.scenes.scene2d.ui.Cell uniform(boolean,boolean) -> uniform
    606:610:void setActorBounds(float,float,float,float) -> setActorBounds
    613:613:float getActorX() -> getActorX
    617:618:void setActorX(float) -> setActorX
    621:621:float getActorY() -> getActorY
    625:626:void setActorY(float) -> setActorY
    629:629:float getActorWidth() -> getActorWidth
    633:634:void setActorWidth(float) -> setActorWidth
    637:637:float getActorHeight() -> getActorHeight
    641:642:void setActorHeight(float) -> setActorHeight
    645:645:int getColumn() -> getColumn
    649:649:int getRow() -> getRow
    654:654:com.badlogic.gdx.scenes.scene2d.ui.Value getMinWidthValue() -> getMinWidthValue
    658:658:float getMinWidth() -> getMinWidth
    663:663:com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    667:667:float getMinHeight() -> getMinHeight
    672:672:com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    676:676:float getPrefWidth() -> getPrefWidth
    681:681:com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    685:685:float getPrefHeight() -> getPrefHeight
    690:690:com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    694:694:float getMaxWidth() -> getMaxWidth
    699:699:com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    703:703:float getMaxHeight() -> getMaxHeight
    708:708:com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceTopValue() -> getSpaceTopValue
    712:712:float getSpaceTop() -> getSpaceTop
    717:717:com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceLeftValue() -> getSpaceLeftValue
    721:721:float getSpaceLeft() -> getSpaceLeft
    726:726:com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceBottomValue() -> getSpaceBottomValue
    730:730:float getSpaceBottom() -> getSpaceBottom
    735:735:com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceRightValue() -> getSpaceRightValue
    739:739:float getSpaceRight() -> getSpaceRight
    744:744:com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    748:748:float getPadTop() -> getPadTop
    753:753:com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    757:757:float getPadLeft() -> getPadLeft
    762:762:com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    766:766:float getPadBottom() -> getPadBottom
    771:771:com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    775:775:float getPadRight() -> getPadRight
    780:780:float getPadX() -> getPadX
    785:785:float getPadY() -> getPadY
    790:790:float getFillX() -> getFillX
    795:795:float getFillY() -> getFillY
    800:800:int getAlign() -> getAlign
    805:805:int getExpandX() -> getExpandX
    810:810:int getExpandY() -> getExpandY
    815:815:int getColspan() -> getColspan
    820:820:boolean getUniformX() -> getUniformX
    825:825:boolean getUniformY() -> getUniformY
    830:830:boolean isEndRow() -> isEndRow
    835:835:float getComputedPadTop() -> getComputedPadTop
    840:840:float getComputedPadLeft() -> getComputedPadLeft
    845:845:float getComputedPadBottom() -> getComputedPadBottom
    850:850:float getComputedPadRight() -> getComputedPadRight
    854:855:void row() -> row
    858:858:com.badlogic.gdx.scenes.scene2d.ui.Table getTable() -> getTable
    863:885:void clear() -> clear
    889:916:void reset() -> reset
    919:941:void set(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> set
    945:968:void merge(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> merge
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Cell imageCell -> imageCell
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    51:54:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    59:59:com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    63:80:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    83:83:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    27:27:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    27:27:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOnDisabled -> checkboxOnDisabled
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOffDisabled -> checkboxOffDisabled
com.badlogic.gdx.scenes.scene2d.ui.Container -> com.badlogic.gdx.scenes.scene2d.ui.Container:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    float fillX -> fillX
    float fillY -> fillY
    int align -> align
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    boolean round -> round
    41:61:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    66:70:void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    75:76:void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    83:92:void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean) -> setBackground
    96:97:com.badlogic.gdx.scenes.scene2d.ui.Container background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    101:101:com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    105:151:void layout() -> layout
    155:160:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    164:164:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    170:170:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    176:176:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    182:182:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    188:188:void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    192:194:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    199:206:com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    211:219:com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    224:225:com.badlogic.gdx.scenes.scene2d.ui.Container size(float) -> size
    230:231:com.badlogic.gdx.scenes.scene2d.ui.Container size(float,float) -> size
    236:240:com.badlogic.gdx.scenes.scene2d.ui.Container width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    245:246:com.badlogic.gdx.scenes.scene2d.ui.Container width(float) -> width
    251:255:com.badlogic.gdx.scenes.scene2d.ui.Container height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    260:261:com.badlogic.gdx.scenes.scene2d.ui.Container height(float) -> height
    266:269:com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    274:278:com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    282:284:com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    288:290:com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    295:296:com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float) -> minSize
    301:302:com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float,float) -> minSize
    306:307:com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(float) -> minWidth
    311:312:com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(float) -> minHeight
    317:320:com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    325:329:com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    333:335:com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    339:341:com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    346:347:com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float,float) -> prefSize
    352:353:com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float) -> prefSize
    357:358:com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(float) -> prefWidth
    362:363:com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(float) -> prefHeight
    368:371:com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    376:380:com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    384:386:com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    390:392:com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    397:398:com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float) -> maxSize
    403:404:com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float,float) -> maxSize
    408:409:com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(float) -> maxWidth
    413:414:com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(float) -> maxHeight
    419:424:com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    428:436:com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    440:442:com.badlogic.gdx.scenes.scene2d.ui.Container padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    446:448:com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    452:454:com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    458:460:com.badlogic.gdx.scenes.scene2d.ui.Container padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    465:470:com.badlogic.gdx.scenes.scene2d.ui.Container pad(float) -> pad
    474:478:com.badlogic.gdx.scenes.scene2d.ui.Container pad(float,float,float,float) -> pad
    482:483:com.badlogic.gdx.scenes.scene2d.ui.Container padTop(float) -> padTop
    487:488:com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(float) -> padLeft
    492:493:com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(float) -> padBottom
    497:498:com.badlogic.gdx.scenes.scene2d.ui.Container padRight(float) -> padRight
    503:505:com.badlogic.gdx.scenes.scene2d.ui.Container fill() -> fill
    510:511:com.badlogic.gdx.scenes.scene2d.ui.Container fillX() -> fillX
    516:517:com.badlogic.gdx.scenes.scene2d.ui.Container fillY() -> fillY
    521:523:com.badlogic.gdx.scenes.scene2d.ui.Container fill(float,float) -> fill
    528:530:com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean,boolean) -> fill
    535:537:com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean) -> fill
    543:544:com.badlogic.gdx.scenes.scene2d.ui.Container align(int) -> align
    549:550:com.badlogic.gdx.scenes.scene2d.ui.Container center() -> center
    555:557:com.badlogic.gdx.scenes.scene2d.ui.Container top() -> top
    562:564:com.badlogic.gdx.scenes.scene2d.ui.Container left() -> left
    569:571:com.badlogic.gdx.scenes.scene2d.ui.Container bottom() -> bottom
    576:578:com.badlogic.gdx.scenes.scene2d.ui.Container right() -> right
    582:582:float getMinWidth() -> getMinWidth
    586:586:com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    590:590:float getMinHeight() -> getMinHeight
    594:594:com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    598:600:float getPrefWidth() -> getPrefWidth
    604:604:com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    608:610:float getPrefHeight() -> getPrefHeight
    614:614:com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    618:620:float getMaxWidth() -> getMaxWidth
    624:624:com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    628:630:float getMaxHeight() -> getMaxHeight
    635:635:com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    639:639:float getPadTop() -> getPadTop
    644:644:com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    648:648:float getPadLeft() -> getPadLeft
    653:653:com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    657:657:float getPadBottom() -> getPadBottom
    662:662:com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    666:666:float getPadRight() -> getPadRight
    671:671:float getPadX() -> getPadX
    676:676:float getPadY() -> getPadY
    680:680:float getFillX() -> getFillX
    684:684:float getFillY() -> getFillY
    688:688:int getAlign() -> getAlign
    693:694:void setRound(boolean) -> setRound
    699:702:void setClip(boolean) -> setClip
    705:705:boolean getClip() -> getClip
    709:713:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    717:734:void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener focusListener -> focusListener
    com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown -> ignoreTouchDown
    76:117:void initialize() -> initialize
    120:125:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    128:128:com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    132:132:com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    137:139:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    144:144:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    149:150:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    156:156:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    162:164:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    170:170:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    175:175:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    181:183:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    188:205:com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.Action) -> show
    210:212:com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    217:233:void hide(com.badlogic.gdx.scenes.scene2d.Action) -> hide
    238:239:void hide() -> hide
    242:243:void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    248:258:com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    264:264:void result(java.lang.Object) -> result
    267:268:void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    51:52:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    88:94:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    99:100:void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    103:104:void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    107:115:void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$4:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    250:255:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup -> com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    49:51:void invalidate() -> invalidate
    54:75:void computeSize() -> computeSize
    78:117:void layout() -> layout
    120:121:float getPrefWidth() -> getPrefWidth
    125:126:float getPrefHeight() -> getPrefHeight
    131:132:void setRound(boolean) -> setRound
    136:137:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse() -> reverse
    142:143:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse(boolean) -> reverse
    147:147:boolean getReverse() -> getReverse
    152:153:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup space(float) -> space
    157:157:float getSpace() -> getSpace
    162:166:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float) -> pad
    170:174:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float,float,float,float) -> pad
    178:179:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padTop(float) -> padTop
    183:184:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padLeft(float) -> padLeft
    188:189:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padBottom(float) -> padBottom
    193:194:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padRight(float) -> padRight
    198:198:float getPadTop() -> getPadTop
    202:202:float getPadLeft() -> getPadLeft
    206:206:float getPadBottom() -> getPadBottom
    210:210:float getPadRight() -> getPadRight
    216:217:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup align(int) -> align
    222:223:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup center() -> center
    228:230:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup top() -> top
    235:237:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup bottom() -> bottom
    241:241:int getAlign() -> getAlign
    245:246:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill() -> fill
    251:252:com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill(float) -> fill
    256:256:float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    89:113:void layout() -> layout
    116:135:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    138:139:void setDrawable(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> setDrawable
    142:148:void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    151:151:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    155:157:void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    160:161:void setAlign(int) -> setAlign
    164:164:float getMinWidth() -> getMinWidth
    168:168:float getMinHeight() -> getMinHeight
    172:173:float getPrefWidth() -> getPrefWidth
    177:178:float getPrefHeight() -> getPrefHeight
    182:182:float getImageX() -> getImageX
    186:186:float getImageY() -> getImageY
    190:190:float getImageWidth() -> getImageWidth
    194:194:float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    62:66:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    69:69:com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    73:85:void updateImage() -> updateImage
    88:90:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    93:93:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    97:97:com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    28:28:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    69:80:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    83:83:com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    87:99:void updateImage() -> updateImage
    102:116:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    119:119:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    123:123:com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    127:127:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    131:131:com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    135:136:void setText(java.lang.CharSequence) -> setText
    139:139:java.lang.CharSequence getText() -> getText
    33:33:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.g2d.GlyphLayout prefSizeLayout -> prefSizeLayout
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.GlyphLayout layout -> layout
    com.badlogic.gdx.math.Vector2 prefSize -> prefSize
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    int lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean prefSizeInvalid -> prefSizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    java.lang.String ellipsis -> ellipsis
    77:82:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    92:103:void setText(java.lang.CharSequence) -> setText
    106:111:boolean textEquals(java.lang.CharSequence) -> textEquals
    115:115:com.badlogic.gdx.utils.StringBuilder getText() -> getText
    119:121:void invalidate() -> invalidate
    124:132:void scaleAndComputePrefSize() -> scaleAndComputePrefSize
    135:144:void computePrefSize() -> computePrefSize
    147:205:void layout() -> layout
    208:219:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    222:227:float getPrefWidth() -> getPrefWidth
    231:235:float getPrefHeight() -> getPrefHeight
    239:239:com.badlogic.gdx.graphics.g2d.GlyphLayout getGlyphLayout() -> getGlyphLayout
    251:253:void setWrap(boolean) -> setWrap
    256:256:int getLabelAlign() -> getLabelAlign
    260:260:int getLineAlign() -> getLineAlign
    266:267:void setAlignment(int) -> setAlignment
    273:283:void setAlignment(int,int) -> setAlignment
    286:289:void setFontScale(float) -> setFontScale
    292:295:void setFontScale(float,float) -> setFontScale
    298:298:float getFontScaleX() -> getFontScaleX
    302:304:void setFontScaleX(float) -> setFontScaleX
    307:307:float getFontScaleY() -> getFontScaleY
    311:313:void setFontScaleY(float) -> setFontScaleY
    318:319:void setEllipsis(java.lang.String) -> setEllipsis
    324:325:void setEllipsis(boolean) -> setEllipsis
    329:329:com.badlogic.gdx.graphics.g2d.BitmapFontCache getBitmapFontCache() -> getBitmapFontCache
    333:333:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    77:87:void touchDown(float) -> touchDown
    90:93:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    97:97:com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    101:126:void layout() -> layout
    130:171:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    174:174:com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    179:179:java.lang.Object getSelected() -> getSelected
    184:190:void setSelected(java.lang.Object) -> setSelected
    194:195:int getSelectedIndex() -> getSelectedIndex
    200:207:void setSelectedIndex(int) -> setSelectedIndex
    210:219:void setItems(java.lang.Object[]) -> setItems
    224:233:void setItems(com.badlogic.gdx.utils.Array) -> setItems
    236:240:void clearItems() -> clearItems
    244:244:com.badlogic.gdx.utils.Array getItems() -> getItems
    248:248:float getItemHeight() -> getItemHeight
    252:253:float getPrefWidth() -> getPrefWidth
    257:258:float getPrefHeight() -> getPrefHeight
    262:263:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    68:71:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar:
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float position -> position
    boolean vertical -> vertical
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    float[] snapValues -> snapValues
    float threshold -> threshold
    boolean disabled -> disabled
    boolean shiftIgnoresSnap -> shiftIgnoresSnap
    com.badlogic.gdx.math.Interpolation visualInterpolation -> visualInterpolation
    89:92:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle) -> setStyle
    97:97:com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
    102:108:void act(float) -> act
    112:201:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    204:204:float getValue() -> getValue
    209:210:float getVisualValue() -> getVisualValue
    214:214:float getPercent() -> getPercent
    218:218:float getVisualPercent() -> getVisualPercent
    223:223:float getKnobPosition() -> getKnobPosition
    230:246:boolean setValue(float) -> setValue
    252:252:float clamp(float) -> clamp
    257:263:void setRange(float,float) -> setRange
    266:268:void setStepSize(float) -> setStepSize
    271:276:float getPrefWidth() -> getPrefWidth
    280:285:float getPrefHeight() -> getPrefHeight
    290:290:float getMinValue() -> getMinValue
    294:294:float getMaxValue() -> getMaxValue
    298:298:float getStepSize() -> getStepSize
    303:304:void setAnimateDuration(float) -> setAnimateDuration
    308:310:void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
    314:315:void setVisualInterpolation(com.badlogic.gdx.math.Interpolation) -> setVisualInterpolation
    319:321:void setSnapToValues(float[],float) -> setSnapToValues
    325:329:float snap(float) -> snap
    333:334:void setDisabled(boolean) -> setDisabled
    337:337:boolean isDisabled() -> isDisabled
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnob -> disabledKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobBefore -> disabledKnobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobAfter -> disabledKnobAfter
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    boolean vScrollOnRight -> vScrollOnRight
    boolean hScrollOnBottom -> hScrollOnBottom
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceScrollX -> forceScrollX
    boolean forceScrollY -> forceScrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    boolean variableSizeKnobs -> variableSizeKnobs
    int draggingPointer -> draggingPointer
    230:232:void resetFade() -> resetFade
    235:238:void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    242:246:void cancel() -> cancel
    249:254:void clamp() -> clamp
    257:260:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    265:265:com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    269:366:void act(float) -> act
    369:526:void layout() -> layout
    530:618:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    625:628:void fling(float,float,float) -> fling
    631:642:float getPrefWidth() -> getPrefWidth
    646:657:float getPrefHeight() -> getPrefHeight
    661:661:float getMinWidth() -> getMinWidth
    665:665:float getMinHeight() -> getMinHeight
    671:675:void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    679:679:com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    685:685:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    691:691:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    697:697:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    703:703:void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    707:709:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    713:716:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    721:722:void scrollX(float) -> scrollX
    726:727:void scrollY(float) -> scrollY
    731:732:void visualScrollX(float) -> visualScrollX
    736:737:void visualScrollY(float) -> visualScrollY
    741:741:float getMouseWheelX() -> getMouseWheelX
    746:746:float getMouseWheelY() -> getMouseWheelY
    750:751:void setScrollX(float) -> setScrollX
    755:755:float getScrollX() -> getScrollX
    759:760:void setScrollY(float) -> setScrollY
    764:764:float getScrollY() -> getScrollY
    769:771:void updateVisualScroll() -> updateVisualScroll
    774:774:float getVisualScrollX() -> getVisualScrollX
    778:778:float getVisualScrollY() -> getVisualScrollY
    782:782:float getVisualScrollPercentX() -> getVisualScrollPercentX
    786:786:float getVisualScrollPercentY() -> getVisualScrollPercentY
    790:790:float getScrollPercentX() -> getScrollPercentX
    794:795:void setScrollPercentX(float) -> setScrollPercentX
    798:798:float getScrollPercentY() -> getScrollPercentY
    802:803:void setScrollPercentY(float) -> setScrollPercentY
    806:813:void setFlickScroll(boolean) -> setFlickScroll
    816:817:void setFlickScrollTapSquareSize(float) -> setFlickScrollTapSquareSize
    822:823:void scrollTo(float,float,float,float) -> scrollTo
    828:845:void scrollTo(float,float,float,float,boolean,boolean) -> scrollTo
    849:849:float getMaxX() -> getMaxX
    854:854:float getMaxY() -> getMaxY
    858:862:float getScrollBarHeight() -> getScrollBarHeight
    866:870:float getScrollBarWidth() -> getScrollBarWidth
    875:875:float getScrollWidth() -> getScrollWidth
    880:880:float getScrollHeight() -> getScrollHeight
    885:885:boolean isScrollX() -> isScrollX
    890:890:boolean isScrollY() -> isScrollY
    895:897:void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    900:900:boolean isLeftEdge() -> isLeftEdge
    904:904:boolean isRightEdge() -> isRightEdge
    908:908:boolean isTopEdge() -> isTopEdge
    912:912:boolean isBottomEdge() -> isBottomEdge
    916:916:boolean isDragging() -> isDragging
    920:920:boolean isPanning() -> isPanning
    924:924:boolean isFlinging() -> isFlinging
    928:929:void setVelocityX(float) -> setVelocityX
    933:936:float getVelocityX() -> getVelocityX
    940:941:void setVelocityY(float) -> setVelocityY
    945:945:float getVelocityY() -> getVelocityY
    951:953:void setOverscroll(boolean,boolean) -> setOverscroll
    958:961:void setupOverscroll(float,float,float) -> setupOverscroll
    966:968:void setForceScroll(boolean,boolean) -> setForceScroll
    971:971:boolean isForceScrollX() -> isForceScrollX
    975:975:boolean isForceScrollY() -> isForceScrollY
    980:981:void setFlingTime(float) -> setFlingTime
    985:986:void setClamp(boolean) -> setClamp
    990:992:void setScrollBarPositions(boolean,boolean) -> setScrollBarPositions
    996:1000:void setFadeScrollBars(boolean) -> setFadeScrollBars
    1003:1005:void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    1008:1009:void setSmoothScrolling(boolean) -> setSmoothScrolling
    1015:1017:void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    1020:1020:boolean getVariableSizeKnobs() -> getVariableSizeKnobs
    1026:1027:void setVariableSizeKnobs(boolean) -> setVariableSizeKnobs
    1032:1033:void setCancelTouchFocus(boolean) -> setCancelTouchFocus
    1036:1043:void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    112:146:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    150:152:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    155:175:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    178:179:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    185:190:void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    193:203:void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    206:210:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    217:224:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList selectBoxList -> selectBoxList
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    boolean disabled -> disabled
    com.badlogic.gdx.graphics.g2d.GlyphLayout layout -> layout
    103:104:void setMaxListCount(int) -> setMaxListCount
    108:108:int getMaxListCount() -> getMaxListCount
    112:114:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    117:120:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    125:125:com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    130:140:void setItems(java.lang.Object[]) -> setItems
    144:154:void setItems(com.badlogic.gdx.utils.Array) -> setItems
    157:161:void clearItems() -> clearItems
    165:165:com.badlogic.gdx.utils.Array getItems() -> getItems
    170:202:void layout() -> layout
    206:246:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    251:251:com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    256:256:java.lang.Object getSelected() -> getSelected
    261:267:void setSelected(java.lang.Object) -> setSelected
    271:272:int getSelectedIndex() -> getSelectedIndex
    277:278:void setSelectedIndex(int) -> setSelectedIndex
    281:283:void setDisabled(boolean) -> setDisabled
    286:286:boolean isDisabled() -> isDisabled
    290:291:float getPrefWidth() -> getPrefWidth
    295:296:float getPrefHeight() -> getPrefHeight
    300:302:void showList() -> showList
    305:306:void hideList() -> hideList
    310:310:com.badlogic.gdx.scenes.scene2d.ui.List getList() -> getList
    315:315:com.badlogic.gdx.scenes.scene2d.ui.ScrollPane getScrollPane() -> getScrollPane
    319:321:void onShow(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> onShow
    324:326:void onHide(com.badlogic.gdx.scenes.scene2d.Actor) -> onHide
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    89:95:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox selectBox -> selectBox
    int maxListCount -> maxListCount
    com.badlogic.gdx.math.Vector2 screenPosition -> screenPosition
    com.badlogic.gdx.scenes.scene2d.ui.List list -> list
    com.badlogic.gdx.scenes.scene2d.InputListener hideListener -> hideListener
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    384:440:void show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    443:456:void hide() -> hide
    459:462:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    465:467:void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    351:353:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    356:357:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$2 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$2:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    363:364:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$3 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$3:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    369:373:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    377:378:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle scrollStyle -> scrollStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle listStyle -> listStyle
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundDisabled -> backgroundDisabled
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    95:99:void load(com.badlogic.gdx.files.FileHandle) -> load
    103:108:void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    111:112:void add(java.lang.String,java.lang.Object) -> add
    115:123:void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    126:129:void remove(java.lang.String,java.lang.Class) -> remove
    132:132:java.lang.Object get(java.lang.Class) -> get
    136:148:java.lang.Object get(java.lang.String,java.lang.Class) -> get
    152:156:java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    160:162:boolean has(java.lang.String,java.lang.Class) -> has
    167:167:com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    171:171:com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    175:175:com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    181:188:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    194:200:com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    207:224:com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    232:246:com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    253:291:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    297:300:java.lang.String find(java.lang.Object) -> find
    305:305:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    310:310:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    315:315:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    320:323:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    328:328:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    334:351:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    360:380:void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    384:384:com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    389:394:void dispose() -> dispose
    397:498:com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    502:507:com.badlogic.gdx.utils.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    402:404:java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    412:419:com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    423:434:void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readNamedObjects
    410:410:java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    439:467:com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    437:437:java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    474:481:com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    472:472:java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    487:494:java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.math.Interpolation visualInterpolationInverse -> visualInterpolationInverse
    89:92:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    97:97:com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    101:130:boolean calculatePositionAndValue(float,float) -> calculatePositionAndValue
    135:135:boolean isDragging() -> isDragging
    141:142:void setVisualInterpolationInverse(com.badlogic.gdx.math.Interpolation) -> setVisualInterpolationInverse
    37:37:com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    64:68:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    72:80:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    83:84:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    81:130:void initialize() -> initialize
    133:135:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    140:140:com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    145:162:void layout() -> layout
    166:171:float getPrefWidth() -> getPrefWidth
    176:181:float getPrefHeight() -> getPrefHeight
    185:185:float getMinWidth() -> getMinWidth
    189:189:float getMinHeight() -> getMinHeight
    193:194:void setVertical(boolean) -> setVertical
    197:209:void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    212:225:void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    229:255:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    259:261:void setSplitAmount(float) -> setSplitAmount
    264:264:float getSplit() -> getSplit
    268:271:void setMinSplitAmount(float) -> setMinSplitAmount
    274:277:void setMaxSplitAmount(float) -> setMaxSplitAmount
    281:285:void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    289:293:void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    296:296:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    300:300:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    304:304:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    308:308:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    85:93:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    97:98:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    101:128:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    53:55:void invalidate() -> invalidate
    58:88:void computeSize() -> computeSize
    91:92:void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    95:103:void layout() -> layout
    106:107:float getPrefWidth() -> getPrefWidth
    111:112:float getPrefHeight() -> getPrefHeight
    116:117:float getMinWidth() -> getMinWidth
    121:122:float getMinHeight() -> getMinHeight
    126:127:float getMaxWidth() -> getMaxWidth
    131:132:float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.graphics.Color debugTableColor -> debugTableColor
    com.badlogic.gdx.graphics.Color debugCellColor -> debugCellColor
    com.badlogic.gdx.graphics.Color debugActorColor -> debugActorColor
    com.badlogic.gdx.utils.Pool cellPool -> cellPool
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    int columns -> columns
    int rows -> rows
    com.badlogic.gdx.utils.Array cells -> cells
    com.badlogic.gdx.scenes.scene2d.ui.Cell cellDefaults -> cellDefaults
    com.badlogic.gdx.utils.Array columnDefaults -> columnDefaults
    com.badlogic.gdx.scenes.scene2d.ui.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    int align -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debug -> debug
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    boolean round -> round
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundTop -> backgroundTop
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundLeft -> backgroundLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundBottom -> backgroundBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundRight -> backgroundRight
    93:95:com.badlogic.gdx.scenes.scene2d.ui.Cell obtainCell() -> obtainCell
    99:119:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    124:128:void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    134:136:void setBackground(java.lang.String) -> setBackground
    140:148:void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    152:153:com.badlogic.gdx.scenes.scene2d.ui.Table background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    158:159:com.badlogic.gdx.scenes.scene2d.ui.Table background(java.lang.String) -> background
    163:163:com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    167:171:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    177:180:void setClip(boolean) -> setClip
    183:183:boolean getClip() -> getClip
    187:189:void invalidate() -> invalidate
    193:236:com.badlogic.gdx.scenes.scene2d.ui.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    240:242:void add(com.badlogic.gdx.scenes.scene2d.Actor[]) -> add
    246:247:com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String) -> add
    252:253:com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String) -> add
    258:259:com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    264:265:com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    270:270:com.badlogic.gdx.scenes.scene2d.ui.Cell add() -> add
    276:281:com.badlogic.gdx.scenes.scene2d.ui.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    285:285:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    289:292:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> removeActor
    297:311:void clearChildren() -> clearChildren
    316:329:void reset() -> reset
    334:341:com.badlogic.gdx.scenes.scene2d.ui.Cell row() -> row
    345:355:void endRow() -> endRow
    360:371:com.badlogic.gdx.scenes.scene2d.ui.Cell columnDefaults(int) -> columnDefaults
    376:381:com.badlogic.gdx.scenes.scene2d.ui.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    386:386:com.badlogic.gdx.utils.Array getCells() -> getCells
    390:393:float getPrefWidth() -> getPrefWidth
    397:400:float getPrefHeight() -> getPrefHeight
    404:405:float getMinWidth() -> getMinWidth
    409:410:float getMinHeight() -> getMinHeight
    415:415:com.badlogic.gdx.scenes.scene2d.ui.Cell defaults() -> defaults
    420:426:com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    430:439:com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    444:447:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    452:455:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    460:463:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    468:471:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    476:477:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    481:486:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    491:493:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    498:500:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    505:507:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    512:514:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    520:521:com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    526:527:com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    532:534:com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    539:541:com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    546:548:com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    553:555:com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    559:560:void setDebug(boolean) -> setDebug
    563:564:com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    568:569:com.badlogic.gdx.scenes.scene2d.ui.Table debugAll() -> debugAll
    574:579:com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    584:589:com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    594:599:com.badlogic.gdx.scenes.scene2d.ui.Table debugActor() -> debugActor
    604:612:com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug) -> debug
    616:616:com.badlogic.gdx.scenes.scene2d.ui.Table$Debug getTableDebug() -> getTableDebug
    620:620:com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    624:624:float getPadTop() -> getPadTop
    628:628:com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    632:632:float getPadLeft() -> getPadLeft
    636:636:com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    640:640:float getPadBottom() -> getPadBottom
    644:644:com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    648:648:float getPadRight() -> getPadRight
    653:653:float getPadX() -> getPadX
    658:658:float getPadY() -> getPadY
    662:662:int getAlign() -> getAlign
    668:679:int getRow(float) -> getRow
    683:684:void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    688:689:void setRound(boolean) -> setRound
    692:692:int getRows() -> getRows
    696:696:int getColumns() -> getColumns
    700:703:float[] ensureSize(float[],int) -> ensureSize
    707:740:void layout() -> layout
    743:907:void computeSize() -> computeSize
    912:1143:void layout(float,float,float,float) -> layout
    1146:1149:void clearDebugRects() -> clearDebugRects
    1152:1157:void addDebugRect(float,float,float,float,com.badlogic.gdx.graphics.Color) -> addDebugRect
    1160:1183:void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    1186:1186:void drawDebugBounds(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugBounds
    1189:1202:void drawDebugRects(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugRects
    1206:1206:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> getSkin
    40:40:com.badlogic.gdx.scenes.scene2d.Group debugAll() -> debugAll
    40:40:com.badlogic.gdx.scenes.scene2d.Actor debug() -> debug
com.badlogic.gdx.scenes.scene2d.ui.Table$1 -> com.badlogic.gdx.scenes.scene2d.ui.Table$1:
    47:47:com.badlogic.gdx.scenes.scene2d.ui.Cell newObject() -> newObject
    45:45:java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.ui.Table$2 -> com.badlogic.gdx.scenes.scene2d.ui.Table$2:
    1224:1225:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$3 -> com.badlogic.gdx.scenes.scene2d.ui.Table$3:
    1233:1234:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$4 -> com.badlogic.gdx.scenes.scene2d.ui.Table$4:
    1242:1243:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$5 -> com.badlogic.gdx.scenes.scene2d.ui.Table$5:
    1251:1252:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug -> com.badlogic.gdx.scenes.scene2d.ui.Table$Debug:
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug none -> none
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug all -> all
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug table -> table
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug cell -> cell
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] $VALUES -> $VALUES
    1216:1216:com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] values() -> values
    1216:1216:com.badlogic.gdx.scenes.scene2d.ui.Table$Debug valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect:
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.TextArea -> com.badlogic.gdx.scenes.scene2d.ui.TextArea:
    com.badlogic.gdx.utils.IntArray linesBreak -> linesBreak
    java.lang.String lastText -> lastText
    int cursorLine -> cursorLine
    int firstLineShowing -> firstLineShowing
    int linesShowing -> linesShowing
    float moveOffset -> moveOffset
    float prefRows -> prefRows
    70:77:void initialize() -> initialize
    80:98:int letterUnderCursor(float) -> letterUnderCursor
    104:105:void setPrefRows(float) -> setPrefRows
    109:117:float getPrefHeight() -> getPrefHeight
    123:123:int getLines() -> getLines
    128:129:boolean newLineAtEnd() -> newLineAtEnd
    134:158:void moveCursorLine(int) -> moveCursorLine
    162:173:void updateCurrentLine() -> updateCurrentLine
    177:184:void showCursor() -> showCursor
    188:192:int calculateCurrentLineIndex(int) -> calculateCurrentLineIndex
    199:206:void sizeChanged() -> sizeChanged
    210:214:float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    219:244:void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    248:253:void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    257:261:void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    265:305:void calculateOffsets() -> calculateOffsets
    309:309:com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    314:316:void setSelection(int,int) -> setSelection
    320:333:void moveCursor(boolean,boolean) -> moveCursor
    337:338:boolean continueCursor(int,int) -> continueCursor
    343:343:int getCursorLine() -> getCursorLine
    347:347:int getFirstLineShowing() -> getFirstLineShowing
    351:351:int getLinesShowing() -> getLinesShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener -> com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextArea this$0 -> this$0
    359:380:void setCursorPosition(float,float) -> setCursorPosition
    384:422:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    427:429:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
    434:439:void goHome(boolean) -> goHome
    443:448:void goEnd(boolean) -> goEnd
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    53:66:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    69:69:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    74:86:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    89:89:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    93:93:com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    97:98:void setText(java.lang.String) -> setText
    101:101:java.lang.CharSequence getText() -> getText
    28:28:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    java.lang.String text -> text
    int cursor -> cursor
    int selectionStart -> selectionStart
    boolean hasSelection -> hasSelection
    boolean writeEnters -> writeEnters
    com.badlogic.gdx.graphics.g2d.GlyphLayout layout -> layout
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean onlyFontChars -> onlyFontChars
    boolean disabled -> disabled
    int textHAlign -> textHAlign
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    char passwordCharacter -> passwordCharacter
    float fontOffset -> fontOffset
    float textHeight -> textHeight
    float textOffset -> textOffset
    float renderOffset -> renderOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    int maxLength -> maxLength
    float blinkTime -> blinkTime
    boolean cursorOn -> cursorOn
    long lastBlink -> lastBlink
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    boolean programmaticChangeEvents -> programmaticChangeEvents
    132:133:void initialize() -> initialize
    136:136:com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    140:149:int letterUnderCursor(float) -> letterUnderCursor
    153:153:boolean isWordCharacter(char) -> isWordCharacter
    157:171:int[] wordUnderCursor(int) -> wordUnderCursor
    175:175:int[] wordUnderCursor(float) -> wordUnderCursor
    179:179:boolean withinMaxLength(int) -> withinMaxLength
    183:184:void setMaxLength(int) -> setMaxLength
    187:187:int getMaxLength() -> getMaxLength
    194:195:void setOnlyFontChars(boolean) -> setOnlyFontChars
    198:202:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    207:207:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    211:264:void calculateOffsets() -> calculateOffsets
    268:323:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    326:335:float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    340:342:void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    345:346:void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    349:351:void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    354:394:void updateDisplayText() -> updateDisplayText
    397:406:void blink() -> blink
    410:413:void copy() -> copy
    418:419:void cut() -> cut
    422:427:void cut(boolean) -> cut
    430:452:void paste(java.lang.String,boolean) -> paste
    455:456:java.lang.String insert(int,java.lang.CharSequence,java.lang.String) -> insert
    460:471:int delete(boolean) -> delete
    477:492:void next(boolean) -> next
    495:512:com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    516:516:com.badlogic.gdx.scenes.scene2d.InputListener getDefaultInputListener() -> getDefaultInputListener
    521:522:void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    526:527:void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    530:530:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
    535:536:void setFocusTraversal(boolean) -> setFocusTraversal
    540:540:java.lang.String getMessageText() -> getMessageText
    546:547:void setMessageText(java.lang.String) -> setMessageText
    551:556:void appendText(java.lang.String) -> appendText
    560:569:void setText(java.lang.String) -> setText
    573:573:java.lang.String getText() -> getText
    579:585:boolean changeText(java.lang.String,java.lang.String) -> changeText
    591:592:void setProgrammaticChangeEvents(boolean) -> setProgrammaticChangeEvents
    595:595:int getSelectionStart() -> getSelectionStart
    599:599:java.lang.String getSelection() -> getSelection
    604:621:void setSelection(int,int) -> setSelection
    624:625:void selectAll() -> selectAll
    628:629:void clearSelection() -> clearSelection
    633:636:void setCursorPosition(int) -> setCursorPosition
    639:639:int getCursorPosition() -> getCursorPosition
    644:644:com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    648:649:void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    652:653:void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    656:656:float getPrefWidth() -> getPrefWidth
    660:665:float getPrefHeight() -> getPrefHeight
    671:672:void setAlignment(int) -> setAlignment
    677:679:void setPasswordMode(boolean) -> setPasswordMode
    682:682:boolean isPasswordMode() -> isPasswordMode
    688:690:void setPasswordCharacter(char) -> setPasswordCharacter
    693:694:void setBlinkTime(float) -> setBlinkTime
    697:698:void setDisabled(boolean) -> setDisabled
    701:701:boolean isDisabled() -> isDisabled
    705:710:void moveCursor(boolean,boolean) -> moveCursor
    713:714:boolean continueCursor(int,int) -> continueCursor
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    757:758:void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    721:722:void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    764:771:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    774:783:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    787:789:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    792:794:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    797:800:void setCursorPosition(float,float) -> setCursorPosition
    803:804:void goHome(boolean) -> goHome
    807:808:void goEnd(boolean) -> goEnd
    811:901:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    905:910:void scheduleKeyRepeatTask(int) -> scheduleKeyRepeatTask
    913:915:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    919:969:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    739:739:boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color focusedFontColor -> focusedFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground -> focusedBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Tooltip -> com.badlogic.gdx.scenes.scene2d.ui.Tooltip:
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.scenes.scene2d.ui.TooltipManager manager -> manager
    com.badlogic.gdx.scenes.scene2d.ui.Tooltip$TooltipStyle style -> style
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> table
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    boolean instant -> instant
    boolean always -> always
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    88:96:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tooltip$TooltipStyle) -> setStyle
    99:99:com.badlogic.gdx.scenes.scene2d.ui.TooltipManager getManager() -> getManager
    103:103:com.badlogic.gdx.scenes.scene2d.ui.Table getTable() -> getTable
    107:107:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    112:113:void setInstant(boolean) -> setInstant
    117:118:void setAlways(boolean) -> setAlways
    121:126:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    130:132:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    136:150:void setTablePosition(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> setTablePosition
    153:160:void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    163:165:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    168:169:void hide() -> hide
com.badlogic.gdx.scenes.scene2d.ui.Tooltip$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tooltip$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tooltip this$0 -> this$0
    70:72:void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.Tooltip$2 -> com.badlogic.gdx.scenes.scene2d.ui.Tooltip$2:
    com.badlogic.gdx.scenes.scene2d.ui.TooltipManager val$manager -> val$manager
    com.badlogic.gdx.scenes.scene2d.ui.Tooltip this$0 -> this$0
    80:80:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Tooltip$TooltipStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tooltip$TooltipStyle:
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle label -> label
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager -> com.badlogic.gdx.scenes.scene2d.ui.TooltipManager:
    com.badlogic.gdx.scenes.scene2d.ui.TooltipManager instance -> instance
    com.badlogic.gdx.Application app -> app
    float initialTime -> initialTime
    float subsequentTime -> subsequentTime
    float resetTime -> resetTime
    boolean enabled -> enabled
    boolean animations -> animations
    com.badlogic.gdx.utils.Array shown -> shown
    float maxWidth -> maxWidth
    float time -> time
    com.badlogic.gdx.utils.Timer$Task resetTask -> resetTask
    com.badlogic.gdx.scenes.scene2d.ui.Tooltip showTooltip -> showTooltip
    com.badlogic.gdx.utils.Timer$Task showTask -> showTask
    79:86:void touchDown(com.badlogic.gdx.scenes.scene2d.ui.Tooltip) -> touchDown
    89:97:void enter(com.badlogic.gdx.scenes.scene2d.ui.Tooltip) -> enter
    100:108:void hide(com.badlogic.gdx.scenes.scene2d.ui.Tooltip) -> hide
    112:116:void showAction(com.badlogic.gdx.scenes.scene2d.ui.Tooltip) -> showAction
    121:123:void hideAction(com.badlogic.gdx.scenes.scene2d.ui.Tooltip) -> hideAction
    126:129:void hideAll() -> hideAll
    133:136:void instant() -> instant
    140:141:void setMaxWidth(float) -> setMaxWidth
    144:148:com.badlogic.gdx.scenes.scene2d.ui.TooltipManager getInstance() -> getInstance
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$1 -> com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$1:
    com.badlogic.gdx.scenes.scene2d.ui.TooltipManager this$0 -> this$0
    53:54:void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$2 -> com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$2:
    com.badlogic.gdx.scenes.scene2d.ui.TooltipManager this$0 -> this$0
    60:75:void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    boolean resetOnTouchUp -> resetOnTouchUp
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    92:120:void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    123:126:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    131:131:com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    136:136:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    142:152:void layout() -> layout
    156:175:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    179:179:float getPrefWidth() -> getPrefWidth
    184:184:float getPrefHeight() -> getPrefHeight
    188:188:boolean isTouched() -> isTouched
    192:192:boolean getResetOnTouchUp() -> getResetOnTouchUp
    197:198:void setResetOnTouchUp(boolean) -> setResetOnTouchUp
    202:205:void setDeadzone(float) -> setDeadzone
    209:209:float getKnobX() -> getKnobX
    214:214:float getKnobY() -> getKnobY
    220:220:float getKnobPercentX() -> getKnobPercentX
    226:226:float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    72:75:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    80:81:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    85:87:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    float ySpacing -> ySpacing
    float iconSpacingLeft -> iconSpacingLeft
    float iconSpacingRight -> iconSpacingRight
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    66:106:void initialize() -> initialize
    109:111:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    114:115:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    118:123:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    126:133:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    137:141:void clearChildren() -> clearChildren
    144:144:com.badlogic.gdx.utils.Array getNodes() -> getNodes
    148:150:void invalidate() -> invalidate
    153:162:void computeSize() -> computeSize
    165:188:void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    191:193:void layout() -> layout
    196:207:float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    211:216:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    220:247:void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.utils.Array,float) -> draw
    251:253:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    257:269:float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    273:280:void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    283:283:com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    287:287:com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    291:291:com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    295:295:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    299:300:void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    304:305:void setPadding(float) -> setPadding
    309:309:float getIndentSpacing() -> getIndentSpacing
    314:315:void setYSpacing(float) -> setYSpacing
    319:321:void setIconSpacing(float,float) -> setIconSpacing
    324:325:float getPrefWidth() -> getPrefWidth
    329:330:float getPrefHeight() -> getPrefHeight
    334:335:void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    338:345:void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
    348:353:boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> findExpandedObjects
    358:359:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    363:372:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    376:377:void collapseAll() -> collapseAll
    380:385:void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    388:389:void expandAll() -> expandAll
    392:394:void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    398:398:com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    68:94:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    97:98:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    102:104:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    417:430:void setExpanded(boolean) -> setExpanded
    434:438:void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    442:446:void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    449:450:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    453:455:void addAll(com.badlogic.gdx.utils.Array) -> addAll
    458:461:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    464:469:void remove() -> remove
    472:478:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    481:487:void removeAll() -> removeAll
    491:493:com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    497:497:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    501:501:boolean isExpanded() -> isExpanded
    506:506:com.badlogic.gdx.utils.Array getChildren() -> getChildren
    510:515:void updateChildren() -> updateChildren
    519:519:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    524:525:void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    528:528:java.lang.Object getObject() -> getObject
    533:534:void setObject(java.lang.Object) -> setObject
    537:537:com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    541:547:int getLevel() -> getLevel
    552:554:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    559:561:void collapseAll() -> collapseAll
    565:567:void expandAll() -> expandAll
    571:576:void expandTo() -> expandTo
    579:579:boolean isSelectable() -> isSelectable
    583:584:void setSelectable(boolean) -> setSelectable
    587:588:void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    591:598:void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.Value -> com.badlogic.gdx.scenes.scene2d.ui.Value:
    com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed zero -> zero
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
    97:97:com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float) -> percentWidth
    106:106:com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float) -> percentHeight
    115:116:com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentWidth
    125:126:com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentHeight
com.badlogic.gdx.scenes.scene2d.ui.Value$1 -> com.badlogic.gdx.scenes.scene2d.ui.Value$1:
    49:50:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$10 -> com.badlogic.gdx.scenes.scene2d.ui.Value$10:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    128:128:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$2 -> com.badlogic.gdx.scenes.scene2d.ui.Value$2:
    57:58:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$3 -> com.badlogic.gdx.scenes.scene2d.ui.Value$3:
    65:66:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$4 -> com.badlogic.gdx.scenes.scene2d.ui.Value$4:
    74:75:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$5 -> com.badlogic.gdx.scenes.scene2d.ui.Value$5:
    82:83:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$6 -> com.badlogic.gdx.scenes.scene2d.ui.Value$6:
    90:91:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$7 -> com.badlogic.gdx.scenes.scene2d.ui.Value$7:
    float val$percent -> val$percent
    99:99:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$8 -> com.badlogic.gdx.scenes.scene2d.ui.Value$8:
    float val$percent -> val$percent
    108:108:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$9 -> com.badlogic.gdx.scenes.scene2d.ui.Value$9:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    118:118:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed -> com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed:
    float value -> value
    42:42:float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    45:47:void invalidate() -> invalidate
    50:71:void computeSize() -> computeSize
    74:113:void layout() -> layout
    116:117:float getPrefWidth() -> getPrefWidth
    121:122:float getPrefHeight() -> getPrefHeight
    127:128:void setRound(boolean) -> setRound
    132:133:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse() -> reverse
    138:139:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse(boolean) -> reverse
    143:143:boolean getReverse() -> getReverse
    148:149:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup space(float) -> space
    153:153:float getSpace() -> getSpace
    158:162:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float) -> pad
    166:170:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float,float,float,float) -> pad
    174:175:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padTop(float) -> padTop
    179:180:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padLeft(float) -> padLeft
    184:185:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padBottom(float) -> padBottom
    189:190:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padRight(float) -> padRight
    194:194:float getPadTop() -> getPadTop
    198:198:float getPadLeft() -> getPadLeft
    202:202:float getPadBottom() -> getPadBottom
    206:206:float getPadRight() -> getPadRight
    212:213:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup align(int) -> align
    218:219:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup center() -> center
    224:226:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup left() -> left
    231:233:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup right() -> right
    237:237:int getAlign() -> getAlign
    241:242:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill() -> fill
    247:248:com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill(float) -> fill
    252:252:float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    41:41:float getMinWidth() -> getMinWidth
    45:45:float getMinHeight() -> getMinHeight
    49:49:float getPrefWidth() -> getPrefWidth
    53:53:float getPrefHeight() -> getPrefHeight
    57:57:float getMaxWidth() -> getMaxWidth
    61:61:float getMaxHeight() -> getMaxHeight
    65:67:void setLayoutEnabled(boolean) -> setLayoutEnabled
    70:89:void validate() -> validate
    93:93:boolean needsLayout() -> needsLayout
    97:98:void invalidate() -> invalidate
    101:105:void invalidateHierarchy() -> invalidateHierarchy
    108:109:void sizeChanged() -> sizeChanged
    112:114:void pack() -> pack
    117:118:void setFillParent(boolean) -> setFillParent
    122:123:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    126:126:void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    43:43:float getMinWidth() -> getMinWidth
    47:47:float getMinHeight() -> getMinHeight
    51:51:float getPrefWidth() -> getPrefWidth
    55:55:float getPrefHeight() -> getPrefHeight
    59:59:float getMaxWidth() -> getMaxWidth
    63:63:float getMaxHeight() -> getMaxHeight
    67:70:void setLayoutEnabled(boolean) -> setLayoutEnabled
    73:81:void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    84:107:void validate() -> validate
    111:111:boolean needsLayout() -> needsLayout
    115:116:void invalidate() -> invalidate
    119:122:void invalidateHierarchy() -> invalidateHierarchy
    125:126:void childrenChanged() -> childrenChanged
    129:130:void sizeChanged() -> sizeChanged
    133:141:void pack() -> pack
    144:145:void setFillParent(boolean) -> setFillParent
    148:148:void layout() -> layout
    153:155:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.math.Vector2 tmpPosition -> tmpPosition
    com.badlogic.gdx.math.Vector2 tmpSize -> tmpSize
    int MOVE -> MOVE
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    boolean isResizable -> isResizable
    int resizeBorder -> resizeBorder
    boolean dragging -> dragging
    boolean keepWithinStage -> keepWithinStage
    com.badlogic.gdx.scenes.scene2d.ui.Label titleLabel -> titleLabel
    com.badlogic.gdx.scenes.scene2d.ui.Table titleTable -> titleTable
    boolean drawTitleTable -> drawTitleTable
    193:198:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    203:203:com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    207:230:void keepWithinStage() -> keepWithinStage
    233:246:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    249:252:void drawStageBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float) -> drawStageBackground
    255:265:void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    268:279:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    283:283:boolean isMovable() -> isMovable
    287:288:void setMovable(boolean) -> setMovable
    291:291:boolean isModal() -> isModal
    295:296:void setModal(boolean) -> setModal
    299:300:void setKeepWithinStage(boolean) -> setKeepWithinStage
    303:303:boolean isResizable() -> isResizable
    307:308:void setResizable(boolean) -> setResizable
    311:312:void setResizeBorder(int) -> setResizeBorder
    315:315:boolean isDragging() -> isDragging
    319:319:float getPrefWidth() -> getPrefWidth
    323:323:com.badlogic.gdx.scenes.scene2d.ui.Table getTitleTable() -> getTitleTable
    327:327:com.badlogic.gdx.scenes.scene2d.ui.Label getTitleLabel() -> getTitleLabel
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    73:74:void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    85:86:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$3 -> com.badlogic.gdx.scenes.scene2d.ui.Window$3:
    int edge -> edge
    float startX -> startX
    float startY -> startY
    float lastX -> lastX
    float lastY -> lastY
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    94:116:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    120:121:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    124:168:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    171:171:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    175:175:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    179:179:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    183:183:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    187:187:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.b.a:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.math.Vector2 tmpCoords2 -> tmpCoords2
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    98:123:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    127:127:void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    130:130:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    133:133:void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    138:138:boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    142:142:void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    146:146:void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    149:149:void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    152:152:void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    155:155:com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    159:159:com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.b.b:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> b
    com.badlogic.gdx.math.Vector2 initialPointer2 -> c
    com.badlogic.gdx.math.Vector2 pointer1 -> d
    com.badlogic.gdx.math.Vector2 pointer2 -> e
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> a
    50:52:boolean tap(float,float,int,int) -> b
    56:57:boolean longPress(float,float) -> a
    61:63:boolean fling(float,float,int) -> a
    67:72:boolean pan(float,float,float,float) -> a
    76:77:boolean zoom(float,float) -> b
    82:87:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    91:93:void stageToLocalAmount(com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.b.c:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection -> com.badlogic.gdx.scenes.scene2d.b.d:
    com.badlogic.gdx.utils.Array array -> f
    boolean rangeSelect -> g
    21:41:void choose(java.lang.Object) -> a
    54:64:void validate() -> a
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.b.e:
    java.lang.String name -> a
    float leftWidth -> b
    float rightWidth -> c
    float topHeight -> d
    float bottomHeight -> e
    float minWidth -> f
    float minHeight -> g
    43:43:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    46:46:float getLeftWidth() -> a
    50:51:void setLeftWidth(float) -> a
    54:54:float getRightWidth() -> b
    58:59:void setRightWidth(float) -> b
    62:62:float getTopHeight() -> c
    66:67:void setTopHeight(float) -> c
    70:70:float getBottomHeight() -> d
    74:75:void setBottomHeight(float) -> d
    78:78:float getMinWidth() -> e
    82:83:void setMinWidth(float) -> e
    86:86:float getMinHeight() -> f
    90:91:void setMinHeight(float) -> f
    94:94:java.lang.String getName() -> g
    98:99:void setName(java.lang.String) -> a
    102:103:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.b.f:
    27:29:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.b.g:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.b.h:
    float visualPressedDuration -> visualPressedDuration
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int pressedButton -> pressedButton
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    long visualPressedTime -> visualPressedTime
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    57:65:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    69:76:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    79:97:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    100:101:void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    104:105:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    109:112:void cancel() -> cancel
    115:115:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    119:121:boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    125:126:boolean inTapSquare(float,float) -> inTapSquare
    131:131:boolean inTapSquare() -> inTapSquare
    136:138:void invalidateTapSquare() -> invalidateTapSquare
    142:142:boolean isPressed() -> isPressed
    148:152:boolean isVisualPressed() -> isVisualPressed
    157:157:boolean isOver() -> isOver
    161:162:void setTapSquareSize(float) -> setTapSquareSize
    165:165:float getTapSquareSize() -> getTapSquareSize
    170:171:void setTapCountInterval(float) -> setTapCountInterval
    175:175:int getTapCount() -> getTapCount
    179:179:float getTouchDownX() -> getTouchDownX
    183:183:float getTouchDownY() -> getTouchDownY
    188:188:int getPressedButton() -> getPressedButton
    193:193:int getPressedPointer() -> getPressedPointer
    198:198:int getButton() -> getButton
    203:204:void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.b.i:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.b.j:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    float getLeftWidth() -> a
    float getRightWidth() -> b
    float getTopHeight() -> c
    float getBottomHeight() -> d
    float getMinWidth() -> e
    float getMinHeight() -> f
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.b.k:
    27:37:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    42:42:void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    46:46:void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.b.l:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.b.m:
    boolean focused -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> b
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> c
    56:58:void reset() -> reset
    61:61:boolean isFocused() -> k
    65:66:void setFocused(boolean) -> b
    69:69:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> l
    73:74:void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> a
    79:79:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> m
    84:85:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.b.n:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> b
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> c
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.b.o:
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.b.p:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> a
    49:50:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    53:60:void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> a
    63:63:com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> h
    68:70:com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable tint(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.b.q:
    com.badlogic.gdx.utils.Array scissors -> c
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Rectangle viewport -> b
    45:68:boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> a
    76:83:com.badlogic.gdx.math.Rectangle popScissors() -> a
    91:103:void fix(com.badlogic.gdx.math.Rectangle) -> b
    122:133:void calculateScissors(com.badlogic.gdx.graphics.Camera,float,float,float,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
com.badlogic.gdx.scenes.scene2d.utils.Selection -> com.badlogic.gdx.scenes.scene2d.b.r:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> f
    com.badlogic.gdx.utils.OrderedSet selected -> a
    com.badlogic.gdx.utils.OrderedSet old -> g
    boolean isDisabled -> b
    boolean toggle -> h
    boolean multiple -> c
    boolean required -> d
    boolean programmaticChangeEvents -> i
    java.lang.Object lastSelected -> e
    28:29:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    34:56:void choose(java.lang.Object) -> a
    59:59:boolean hasItems() -> b
    71:71:com.badlogic.gdx.utils.OrderedSet items() -> c
    76:76:java.lang.Object first() -> d
    80:82:void snapshot() -> e
    85:87:void revert() -> f
    90:91:void cleanup() -> g
    95:105:void set(java.lang.Object) -> b
    125:131:void add(java.lang.Object) -> c
    173:181:void clear() -> h
    187:192:boolean fireChangeEvent() -> i
    197:198:boolean contains(java.lang.Object) -> d
    203:203:java.lang.Object getLastSelected() -> j
    207:207:java.util.Iterator iterator() -> iterator
    224:224:boolean isDisabled() -> k
    237:237:boolean getMultiple() -> l
    242:243:void setMultiple(boolean) -> a
    246:246:boolean getRequired() -> m
    251:252:void setRequired(boolean) -> b
    260:260:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.b.s:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> a
    com.badlogic.gdx.graphics.Color tmpColor -> b
    43:44:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    49:57:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> a
    60:63:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    66:66:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> h
    71:79:com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable tint(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.b.t:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    45:46:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
    50:51:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> a
    54:57:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    60:60:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> h
    66:71:com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable tint(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.b.u:
    39:81:void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> a
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable -> com.badlogic.gdx.scenes.scene2d.b.v:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> a
com.badlogic.gdx.scenes.scene2d.utils.UIUtils -> com.badlogic.gdx.scenes.scene2d.b.w:
    boolean isMac -> a
    boolean isWindows -> b
    boolean isLinux -> c
    38:38:boolean shift() -> a
    46:49:boolean ctrl() -> b
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> d
    99:102:void add(java.lang.Object) -> a
    105:106:void addAll(com.badlogic.gdx.utils.Array) -> a
    109:112:void addAll(com.badlogic.gdx.utils.Array,int,int) -> a
    115:116:void addAll(java.lang.Object[]) -> a
    119:124:void addAll(java.lang.Object[],int,int) -> a
    127:128:java.lang.Object get(int) -> a
    132:134:void set(int,java.lang.Object) -> a
    137:146:void insert(int,java.lang.Object) -> b
    149:155:void swap(int,int) -> a
    161:170:boolean contains(java.lang.Object,boolean) -> a
    177:185:int indexOf(java.lang.Object,boolean) -> b
    208:224:boolean removeValue(java.lang.Object,boolean) -> c
    229:238:java.lang.Object removeIndex(int) -> b
    292:296:java.lang.Object pop() -> a
    301:302:java.lang.Object peek() -> b
    307:308:java.lang.Object first() -> c
    312:316:void clear() -> d
    330:332:java.lang.Object[] ensureCapacity(int) -> c
    337:341:java.lang.Object[] resize(int) -> d
    352:353:void sort(java.util.Comparator) -> a
    404:405:java.util.Iterator iterator() -> iterator
    422:426:void truncate(int) -> e
    441:443:java.lang.Object[] toArray(java.lang.Class) -> a
    447:455:int hashCode() -> hashCode
    459:473:boolean equals(java.lang.Object) -> equals
    477:487:java.lang.String toString() -> toString
    514:514:com.badlogic.gdx.utils.Array with(java.lang.Object[]) -> b
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array array -> a
    boolean allowRemove -> b
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> d
    585:600:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.c:
    com.badlogic.gdx.utils.Array array -> c
    boolean allowRemove -> d
    int index -> a
    boolean valid -> b
    535:539:boolean hasNext() -> hasNext
    543:548:java.lang.Object next() -> next
    552:555:void remove() -> remove
    562:562:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.d:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    int size -> c
    boolean ordered -> d
    com.badlogic.gdx.utils.ArrayMap$Entries entries1 -> e
    com.badlogic.gdx.utils.ArrayMap$Entries entries2 -> f
    87:94:int put(java.lang.Object,java.lang.Object) -> a
    128:137:java.lang.Object get(java.lang.Object) -> a
    202:211:boolean containsKey(java.lang.Object) -> b
    229:237:int indexOfKey(java.lang.Object) -> c
    296:308:void removeIndex(int) -> a
    331:338:void clear() -> a
    355:362:void resize(int) -> b
    402:411:int hashCode() -> hashCode
    415:434:boolean equals(java.lang.Object) -> equals
    438:453:java.lang.String toString() -> toString
    457:457:java.util.Iterator iterator() -> iterator
    463:476:com.badlogic.gdx.utils.ArrayMap$Entries entries() -> b
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.e:
    com.badlogic.gdx.utils.ArrayMap map -> d
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    int index -> b
    boolean valid -> c
    528:529:boolean hasNext() -> hasNext
    533:533:java.util.Iterator iterator() -> iterator
    538:542:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    546:548:void remove() -> remove
    517:517:java.lang.Object next() -> next
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.f:
    char[] map1 -> a
    byte[] map2 -> b
    63:63:java.lang.String encodeString(java.lang.String) -> a
    104:104:char[] encode(byte[]) -> a
    123:144:char[] encode(byte[],int,int) -> a
    153:153:java.lang.String decodeString(java.lang.String) -> b
    178:178:byte[] decode(java.lang.String) -> c
    187:187:byte[] decode(char[]) -> a
    198:226:byte[] decode(char[],int,int) -> a
com.badlogic.gdx.utils.BaseJsonReader -> com.badlogic.gdx.utils.g:
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    50:56:void copy(float[],java.nio.Buffer,int,int) -> a
    68:70:void copy(byte[],int,java.nio.Buffer,int) -> a
    226:229:void copy(java.nio.Buffer,java.nio.Buffer,int) -> a
    398:413:int positionInBytes(java.nio.Buffer) -> a
    417:432:int bytesToElements(java.nio.Buffer,int) -> a
    436:451:int elementsToBytes(java.nio.Buffer,int) -> b
    455:457:java.nio.FloatBuffer newFloatBuffer(int) -> a
    467:469:java.nio.ByteBuffer newByteBuffer(int) -> b
    485:487:java.nio.IntBuffer newIntBuffer(int) -> c
    504:511:void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    517:523:java.nio.ByteBuffer newUnsafeByteBuffer(int) -> d
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.h:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.i:
    int iterating -> d
    com.badlogic.gdx.utils.IntArray remove -> e
    65:66:void begin() -> e
    69:75:void end() -> f
    78:87:void remove(int) -> f
    90:96:boolean removeValue(java.lang.Object,boolean) -> c
    100:104:java.lang.Object removeIndex(int) -> b
    116:118:void set(int,java.lang.Object) -> a
    121:123:void insert(int,java.lang.Object) -> b
    126:128:void swap(int,int) -> a
    131:132:java.lang.Object pop() -> a
    136:138:void clear() -> d
    146:148:void sort(java.util.Comparator) -> a
    161:163:void truncate(int) -> e
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.j:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.k:
    float[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(float) -> a
    82:83:void addAll(com.badlogic.gdx.utils.FloatArray) -> a
    86:89:void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> a
    96:101:void addAll(float[],int,int) -> a
    104:105:float get(int) -> a
    109:111:void set(int,float) -> a
    232:232:float peek() -> a
    237:238:float first() -> b
    242:243:void clear() -> c
    263:267:float[] resize(int) -> b
    297:298:void truncate(int) -> c
    313:318:int hashCode() -> hashCode
    322:333:boolean equals(java.lang.Object) -> equals
    352:362:java.lang.String toString() -> toString
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.l:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    26:35:void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.m:
com.badlogic.gdx.utils.I18NBundle -> com.badlogic.gdx.utils.n:
    java.util.Locale ROOT_LOCALE -> a
    boolean simpleFormatter -> b
    boolean exceptionOnMissingKey -> c
    com.badlogic.gdx.utils.I18NBundle parent -> d
    java.util.Locale locale -> e
    com.badlogic.gdx.utils.ObjectMap properties -> f
    com.badlogic.gdx.utils.TextFormatter formatter -> g
    133:133:com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> a
    157:157:com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> a
    161:207:com.badlogic.gdx.utils.I18NBundle createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> b
    259:274:java.util.List getCandidateLocales(java.util.Locale) -> a
    291:292:java.util.Locale getFallbackLocale(java.util.Locale) -> b
    297:313:com.badlogic.gdx.utils.I18NBundle loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle) -> a
    318:340:com.badlogic.gdx.utils.I18NBundle loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale) -> a
    347:350:boolean checkFileExistence(com.badlogic.gdx.files.FileHandle) -> a
    361:363:void load(java.io.Reader) -> a
    383:403:com.badlogic.gdx.files.FileHandle toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> b
    411:411:java.util.Locale getLocale() -> a
    418:420:void setLocale(java.util.Locale) -> c
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.o:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(int) -> a
    92:93:void addAll(int[]) -> a
    96:101:void addAll(int[],int,int) -> a
    104:105:int get(int) -> b
    124:133:void insert(int,int) -> a
    179:187:int removeIndex(int) -> c
    227:227:int pop() -> a
    242:243:void clear() -> b
    257:259:int[] ensureCapacity(int) -> d
    263:267:int[] resize(int) -> e
    307:309:int[] toArray() -> c
    313:318:int hashCode() -> hashCode
    322:333:boolean equals(java.lang.Object) -> equals
    337:347:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.p:
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    com.badlogic.gdx.utils.IntMap$Entries entries1 -> n
    com.badlogic.gdx.utils.IntMap$Entries entries2 -> o
    com.badlogic.gdx.utils.IntMap$Values values1 -> p
    com.badlogic.gdx.utils.IntMap$Values values2 -> q
    98:167:java.lang.Object put(int,java.lang.Object) -> a
    177:212:void putResize(int,java.lang.Object) -> b
    215:282:void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    285:297:void putStash(int,java.lang.Object) -> c
    300:312:java.lang.Object get(int) -> a
    332:335:java.lang.Object getStash(int,java.lang.Object) -> d
    393:401:void removeStashIndex(int) -> b
    463:472:boolean containsKey(int) -> c
    476:479:boolean containsKeyStash(int) -> d
    513:537:void resize(int) -> e
    540:541:int hash2(int) -> f
    545:546:int hash3(int) -> g
    550:567:int hashCode() -> hashCode
    571:600:boolean equals(java.lang.Object) -> equals
    604:632:java.lang.String toString() -> toString
    636:636:java.util.Iterator iterator() -> iterator
    642:655:com.badlogic.gdx.utils.IntMap$Entries entries() -> a
    661:674:com.badlogic.gdx.utils.IntMap$Values values() -> b
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.q:
    com.badlogic.gdx.utils.IntMap$Entry entry -> f
    768:780:com.badlogic.gdx.utils.IntMap$Entry next() -> a
    784:785:boolean hasNext() -> hasNext
    789:789:java.util.Iterator iterator() -> iterator
    793:794:void remove() -> remove
    759:759:void reset() -> b
    759:759:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.r:
    int key -> a
    java.lang.Object value -> b
    701:701:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.s:
    boolean hasNext -> a
    com.badlogic.gdx.utils.IntMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    boolean valid -> e
    721:727:void reset() -> b
    730:738:void findNextIndex() -> c
    741:756:void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.t:
    803:804:boolean hasNext() -> hasNext
    808:817:java.lang.Object next() -> next
    821:821:java.util.Iterator iterator() -> iterator
    833:834:void remove() -> remove
    797:797:void reset() -> b
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.u:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    boolean quoteLongValues -> quoteLongValues
    boolean ignoreUnknownFields -> ignoreUnknownFields
    boolean enumNames -> enumNames
    com.badlogic.gdx.utils.Json$Serializer defaultSerializer -> defaultSerializer
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    java.lang.Object[] equals1 -> equals1
    java.lang.Object[] equals2 -> equals2
    75:76:void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    80:81:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    85:86:void setQuoteLongValues(boolean) -> setQuoteLongValues
    91:92:void setEnumNames(boolean) -> setEnumNames
    96:98:void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    102:102:java.lang.Class getClass(java.lang.String) -> getClass
    107:107:java.lang.String getTag(java.lang.Class) -> getTag
    114:115:void setTypeName(java.lang.String) -> setTypeName
    120:121:void setDefaultSerializer(com.badlogic.gdx.utils.Json$Serializer) -> setDefaultSerializer
    126:127:void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    130:130:com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    135:136:void setUsePrototypes(boolean) -> setUsePrototypes
    141:145:void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    148:180:com.badlogic.gdx.utils.OrderedMap getFields(java.lang.Class) -> getFields
    184:184:java.lang.String toJson(java.lang.Object) -> toJson
    188:188:java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    194:196:java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    200:201:void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    205:206:void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    211:220:void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    223:224:void toJson(java.lang.Object,java.io.Writer) -> toJson
    228:229:void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    234:241:void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    245:249:void setWriter(java.io.Writer) -> setWriter
    252:252:com.badlogic.gdx.utils.JsonWriter getWriter() -> getWriter
    257:294:void writeFields(java.lang.Object) -> writeFields
    297:327:java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    332:333:void writeField(java.lang.Object,java.lang.String) -> writeField
    338:339:void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    343:344:void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    349:369:void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    376:384:void writeValue(java.lang.String,java.lang.Object) -> writeValue
    393:398:void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    407:412:void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    417:421:void writeValue(java.lang.Object) -> writeValue
    427:428:void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    437:566:void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    570:575:void writeObjectStart(java.lang.String) -> writeObjectStart
    580:585:void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    589:593:void writeObjectStart() -> writeObjectStart
    599:604:void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    608:612:void writeObjectEnd() -> writeObjectEnd
    616:621:void writeArrayStart(java.lang.String) -> writeArrayStart
    625:629:void writeArrayStart() -> writeArrayStart
    633:637:void writeArrayEnd() -> writeArrayEnd
    640:649:void writeType(java.lang.Class) -> writeType
    654:654:java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    661:661:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    667:667:java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    674:674:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    681:683:java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    692:694:java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    701:701:java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    708:708:java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    714:714:java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    720:720:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    724:725:void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    728:729:void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    732:733:void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    737:744:void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    749:764:void readField(java.lang.Object,com.badlogic.gdx.utils.reflect.Field,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    767:792:void readFields(java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readFields
    797:797:java.lang.Object readValue(java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    803:805:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    812:812:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    819:820:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    827:828:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    834:834:java.lang.Object readValue(java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    841:986:java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    990:990:java.lang.String convertToString(java.lang.Enum) -> convertToString
    994:996:java.lang.String convertToString(java.lang.Object) -> convertToString
    1001:1023:java.lang.Object newInstance(java.lang.Class) -> newInstance
    1028:1028:java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    1032:1032:java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    1036:1036:java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    1040:1040:java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    1044:1044:java.lang.String prettyPrint(java.lang.Object,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    1048:1048:java.lang.String prettyPrint(java.lang.String,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.v:
    com.badlogic.gdx.utils.reflect.Field field -> a
    java.lang.Class elementType -> b
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.w:
    1071:1071:void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.x:
    void write(com.badlogic.gdx.utils.Json) -> a
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> a
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.y:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.z:
    byte[] _json_actions -> a
    short[] _json_key_offsets -> b
    char[] _json_trans_keys -> c
    byte[] _json_single_lengths -> d
    byte[] _json_range_lengths -> e
    short[] _json_index_offsets -> f
    byte[] _json_indicies -> g
    byte[] _json_trans_targs -> h
    byte[] _json_trans_actions -> i
    byte[] _json_eof_actions -> j
    com.badlogic.gdx.utils.Array elements -> k
    com.badlogic.gdx.utils.Array lastChild -> l
    com.badlogic.gdx.utils.JsonValue root -> m
    com.badlogic.gdx.utils.JsonValue current -> n
    37:38:com.badlogic.gdx.utils.JsonValue parse(java.lang.String) -> a
    43:59:com.badlogic.gdx.utils.JsonValue parse(java.io.Reader) -> a
    65:69:com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> a
    75:77:com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> a
    82:559:com.badlogic.gdx.utils.JsonValue parse(char[],int,int) -> a
    564:564:byte[] init__json_actions_0() -> b
    570:570:short[] init__json_key_offsets_0() -> c
    577:577:char[] init__json_trans_keys_0() -> d
    589:589:byte[] init__json_single_lengths_0() -> e
    596:596:byte[] init__json_range_lengths_0() -> f
    603:603:short[] init__json_index_offsets_0() -> g
    610:610:byte[] init__json_indicies_0() -> h
    622:622:byte[] init__json_trans_targs_0() -> i
    630:630:byte[] init__json_trans_actions_0() -> j
    638:638:byte[] init__json_eof_actions_0() -> k
    659:675:void addChild(java.lang.String,com.badlogic.gdx.utils.JsonValue) -> a
    678:682:void startObject(java.lang.String) -> b
    685:689:void startArray(java.lang.String) -> c
    692:695:void pop() -> a
    698:699:void string(java.lang.String,java.lang.String) -> a
    702:703:void number(java.lang.String,double,java.lang.String) -> a
    706:707:void number(java.lang.String,long,java.lang.String) -> a
    710:711:void bool(java.lang.String,boolean) -> a
    714:754:java.lang.String unescape(java.lang.String) -> d
com.badlogic.gdx.utils.JsonValue -> com.badlogic.gdx.utils.aa:
    com.badlogic.gdx.utils.JsonValue$ValueType type -> f
    java.lang.String stringValue -> g
    double doubleValue -> h
    long longValue -> i
    java.lang.String name -> a
    com.badlogic.gdx.utils.JsonValue child -> b
    com.badlogic.gdx.utils.JsonValue next -> c
    com.badlogic.gdx.utils.JsonValue prev -> d
    int size -> e
    81:86:com.badlogic.gdx.utils.JsonValue get(int) -> a
    92:95:com.badlogic.gdx.utils.JsonValue get(java.lang.String) -> a
    119:123:com.badlogic.gdx.utils.JsonValue require(java.lang.String) -> b
    146:156:com.badlogic.gdx.utils.JsonValue remove(java.lang.String) -> c
    169:181:java.lang.String asString() -> a
    187:197:float asFloat() -> b
    203:213:double asDouble() -> c
    219:229:long asLong() -> d
    235:245:int asInt() -> e
    251:261:boolean asBoolean() -> f
    267:277:byte asByte() -> g
    283:293:short asShort() -> h
    347:370:float[] asFloatArray() -> i
    521:544:short[] asShortArray() -> j
    591:592:java.lang.String getString(java.lang.String,java.lang.String) -> a
    597:598:float getFloat(java.lang.String,float) -> a
    646:648:java.lang.String getString(java.lang.String) -> d
    726:728:float getFloat(int) -> b
    774:776:short getShort(int) -> c
    797:797:boolean isArray() -> k
    801:801:boolean isObject() -> l
    805:805:boolean isString() -> m
    810:810:boolean isNumber() -> n
    814:814:boolean isDouble() -> o
    818:818:boolean isLong() -> p
    822:822:boolean isBoolean() -> q
    826:826:boolean isNull() -> r
    831:839:boolean isValue() -> s
    845:845:java.lang.String name() -> t
    849:850:void setName(java.lang.String) -> e
    880:882:void set(java.lang.String) -> f
    886:890:void set(double,java.lang.String) -> a
    894:898:void set(long,java.lang.String) -> a
    901:903:void set(boolean) -> a
    906:909:java.lang.String toString() -> toString
    913:916:java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonWriter$OutputType,int) -> a
    920:922:java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> a
    926:995:void prettyPrint(com.badlogic.gdx.utils.JsonValue,com.badlogic.gdx.utils.StringBuilder,int,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> a
    998:1000:boolean isFlat(com.badlogic.gdx.utils.JsonValue) -> a
    1004:1006:boolean isNumeric(com.badlogic.gdx.utils.JsonValue) -> b
    1010:1012:void indent(int,com.badlogic.gdx.utils.StringBuilder) -> a
    1019:1019:com.badlogic.gdx.utils.JsonValue$JsonIterator iterator() -> u
    36:36:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.JsonValue$1 -> com.badlogic.gdx.utils.ab:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType -> a
com.badlogic.gdx.utils.JsonValue$JsonIterator -> com.badlogic.gdx.utils.ac:
    com.badlogic.gdx.utils.JsonValue entry -> a
    com.badlogic.gdx.utils.JsonValue current -> b
    com.badlogic.gdx.utils.JsonValue this$0 -> c
    1027:1027:boolean hasNext() -> hasNext
    1031:1034:com.badlogic.gdx.utils.JsonValue next() -> a
    1038:1046:void remove() -> remove
    1049:1049:java.util.Iterator iterator() -> iterator
    1022:1022:java.lang.Object next() -> next
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings -> com.badlogic.gdx.utils.ad:
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> a
    int singleLineColumns -> b
    boolean wrapNumericArrays -> c
com.badlogic.gdx.utils.JsonValue$ValueType -> com.badlogic.gdx.utils.ae:
    com.badlogic.gdx.utils.JsonValue$ValueType object -> a
    com.badlogic.gdx.utils.JsonValue$ValueType array -> b
    com.badlogic.gdx.utils.JsonValue$ValueType stringValue -> c
    com.badlogic.gdx.utils.JsonValue$ValueType doubleValue -> d
    com.badlogic.gdx.utils.JsonValue$ValueType longValue -> e
    com.badlogic.gdx.utils.JsonValue$ValueType booleanValue -> f
    com.badlogic.gdx.utils.JsonValue$ValueType nullValue -> g
    com.badlogic.gdx.utils.JsonValue$ValueType[] $VALUES -> h
    1014:1014:com.badlogic.gdx.utils.JsonValue$ValueType[] values() -> values
    1014:1014:com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.af:
    java.io.Writer writer -> a
    com.badlogic.gdx.utils.Array stack -> b
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> c
    boolean named -> d
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> e
    boolean quoteLongValues -> f
    45:46:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> a
    51:52:void setQuoteLongValues(boolean) -> a
    55:63:com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> a
    67:69:com.badlogic.gdx.utils.JsonWriter object() -> a
    73:75:com.badlogic.gdx.utils.JsonWriter array() -> b
    79:89:com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> a
    100:110:void requireCommaOrName() -> d
    121:121:com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> a
    130:133:com.badlogic.gdx.utils.JsonWriter pop() -> c
    137:138:void write(char[],int,int) -> write
    141:142:void flush() -> flush
    145:148:void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.ag:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> a
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.ah:
    boolean array -> a
    boolean needsComma -> b
    com.badlogic.gdx.utils.JsonWriter this$0 -> c
    160:161:void close() -> a
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.ai:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> a
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> b
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> c
    java.util.regex.Pattern javascriptPattern -> d
    java.util.regex.Pattern minimalNamePattern -> e
    java.util.regex.Pattern minimalValuePattern -> f
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> g
    164:164:com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    164:164:com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    186:195:java.lang.String quoteValue(java.lang.Object) -> a
    199:206:java.lang.String quoteName(java.lang.String) -> a
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.aj:
    java.lang.String tag -> a
    int level -> b
    45:46:void debug(java.lang.String) -> a
    53:54:void info(java.lang.String) -> b
    65:66:void error(java.lang.String,java.lang.Throwable) -> a
    76:76:int getLevel() -> a
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.ak:
    int size -> a
    long[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    com.badlogic.gdx.utils.LongMap$Entries entries1 -> n
    com.badlogic.gdx.utils.LongMap$Entries entries2 -> o
    com.badlogic.gdx.utils.LongMap$Values values1 -> p
    com.badlogic.gdx.utils.LongMap$Values values2 -> q
    98:167:java.lang.Object put(long,java.lang.Object) -> a
    177:212:void putResize(long,java.lang.Object) -> b
    215:281:void push(long,java.lang.Object,int,long,int,long,int,long) -> a
    284:296:void putStash(long,java.lang.Object) -> c
    299:311:java.lang.Object get(long) -> a
    331:334:java.lang.Object getStash(long,java.lang.Object) -> d
    338:374:java.lang.Object remove(long) -> b
    378:387:java.lang.Object removeStash(long) -> c
    392:400:void removeStashIndex(int) -> a
    460:469:boolean containsKey(long) -> d
    473:476:boolean containsKeyStash(long) -> e
    510:534:void resize(int) -> b
    537:538:int hash2(long) -> f
    542:543:int hash3(long) -> g
    547:564:int hashCode() -> hashCode
    568:597:boolean equals(java.lang.Object) -> equals
    601:624:java.lang.String toString() -> toString
    628:628:java.util.Iterator iterator() -> iterator
    634:647:com.badlogic.gdx.utils.LongMap$Entries entries() -> a
    653:666:com.badlogic.gdx.utils.LongMap$Values values() -> b
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.al:
    com.badlogic.gdx.utils.LongMap$Entry entry -> f
    760:772:com.badlogic.gdx.utils.LongMap$Entry next() -> a
    776:777:boolean hasNext() -> hasNext
    781:781:java.util.Iterator iterator() -> iterator
    785:786:void remove() -> remove
    751:751:void reset() -> b
    751:751:java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.am:
    long key -> a
    java.lang.Object value -> b
    693:693:java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.an:
    boolean hasNext -> a
    com.badlogic.gdx.utils.LongMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    boolean valid -> e
    713:719:void reset() -> b
    722:730:void findNextIndex() -> c
    733:748:void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.ao:
    795:796:boolean hasNext() -> hasNext
    800:809:java.lang.Object next() -> next
    813:813:java.util.Iterator iterator() -> iterator
    825:826:void remove() -> remove
    789:789:void reset() -> b
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.ap:
    21:21:int floatToIntBits(float) -> a
    25:25:int floatToRawIntBits(float) -> b
    29:29:int floatToIntColor(float) -> c
    35:35:float intToFloatColor(int) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.aq:
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries1 -> l
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries2 -> m
    93:150:void put(java.lang.Object,int) -> a
    160:189:void putResize(java.lang.Object,int) -> c
    192:259:void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    262:274:void putStash(java.lang.Object,int) -> d
    278:287:int get(java.lang.Object,int) -> b
    291:294:int getStash(java.lang.Object,int) -> e
    370:376:void removeStashIndex(int) -> a
    399:405:void clear() -> a
    419:428:boolean containsKey(java.lang.Object) -> a
    432:435:boolean containsKeyStash(java.lang.Object) -> b
    456:480:void resize(int) -> b
    483:484:int hash2(int) -> c
    488:489:int hash3(int) -> d
    493:505:int hashCode() -> hashCode
    509:524:boolean equals(java.lang.Object) -> equals
    528:551:java.lang.String toString() -> toString
    555:555:com.badlogic.gdx.utils.ObjectIntMap$Entries iterator() -> b
    561:574:com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> c
    31:31:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ar:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> f
    676:683:com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> a
    687:688:boolean hasNext() -> hasNext
    692:692:com.badlogic.gdx.utils.ObjectIntMap$Entries iterator() -> b
    696:697:void remove() -> remove
    667:667:void reset() -> c
    667:667:java.util.Iterator iterator() -> iterator
    667:667:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.as:
    java.lang.Object key -> a
    int value -> b
    620:620:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.at:
    boolean hasNext -> a
    com.badlogic.gdx.utils.ObjectIntMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    boolean valid -> e
    637:640:void reset() -> c
    643:651:void findNextIndex() -> d
    654:664:void remove() -> remove
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.au:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> l
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> m
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> n
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> o
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> p
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> q
    94:95:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    99:159:java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    171:200:void putResize(java.lang.Object,java.lang.Object) -> c
    203:270:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    273:285:void putStash(java.lang.Object,java.lang.Object) -> d
    288:297:java.lang.Object get(java.lang.Object) -> a
    301:304:java.lang.Object getStash(java.lang.Object) -> e
    329:357:java.lang.Object remove(java.lang.Object) -> b
    361:370:java.lang.Object removeStash(java.lang.Object) -> c
    375:383:void removeStashIndex(int) -> a
    406:415:void clear() -> a
    438:447:boolean containsKey(java.lang.Object) -> d
    451:454:boolean containsKeyStash(java.lang.Object) -> f
    462:474:java.lang.Object findKey(java.lang.Object,boolean) -> a
    485:509:void resize(int) -> b
    512:513:int hash2(int) -> c
    517:518:int hash3(int) -> d
    522:536:int hashCode() -> hashCode
    540:561:boolean equals(java.lang.Object) -> equals
    569:569:java.lang.String toString() -> toString
    573:596:java.lang.String toString(java.lang.String,boolean) -> a
    600:600:com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> b
    606:619:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> c
    625:638:com.badlogic.gdx.utils.ObjectMap$Values values() -> d
    644:657:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> e
    31:31:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.av:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    722:729:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    733:734:boolean hasNext() -> hasNext
    738:738:com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> b
    713:713:void remove() -> remove
    713:713:void reset() -> c
    713:713:java.util.Iterator iterator() -> iterator
    713:713:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.aw:
    java.lang.Object key -> a
    java.lang.Object value -> b
    665:665:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ax:
    784:785:boolean hasNext() -> hasNext
    789:794:java.lang.Object next() -> next
    798:798:com.badlogic.gdx.utils.ObjectMap$Keys iterator() -> a
    803:803:com.badlogic.gdx.utils.Array toArray() -> b
    808:810:com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> a
    778:778:void remove() -> remove
    778:778:void reset() -> c
    778:778:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ay:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    boolean valid -> f
    682:685:void reset() -> c
    688:696:void findNextIndex() -> d
    699:710:void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.az:
    748:749:boolean hasNext() -> hasNext
    753:758:java.lang.Object next() -> next
    762:762:com.badlogic.gdx.utils.ObjectMap$Values iterator() -> a
    767:767:com.badlogic.gdx.utils.Array toArray() -> b
    772:774:com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> a
    742:742:void remove() -> remove
    742:742:void reset() -> c
    742:742:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet -> com.badlogic.gdx.utils.ba:
    int size -> a
    java.lang.Object[] keyTable -> b
    int capacity -> c
    int stashSize -> d
    float loadFactor -> e
    int hashShift -> f
    int mask -> g
    int threshold -> h
    int stashCapacity -> i
    int pushIterations -> j
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator1 -> k
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator2 -> l
    90:131:boolean add(java.lang.Object) -> a
    155:158:void addAll(com.badlogic.gdx.utils.ObjectSet) -> a
    163:189:void addResize(java.lang.Object) -> e
    192:247:void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    250:261:void addStash(java.lang.Object) -> f
    265:287:boolean remove(java.lang.Object) -> b
    291:299:boolean removeStash(java.lang.Object) -> c
    304:307:void removeStashIndex(int) -> a
    321:327:void clear(int) -> b
    330:336:void clear() -> a
    339:348:boolean contains(java.lang.Object) -> d
    352:355:boolean containsKeyStash(java.lang.Object) -> g
    359:362:java.lang.Object first() -> b
    368:370:void ensureCapacity(int) -> c
    373:395:void resize(int) -> d
    398:399:int hash2(int) -> e
    403:404:int hash3(int) -> f
    408:411:int hashCode() -> hashCode
    415:420:boolean equals(java.lang.Object) -> equals
    424:424:java.lang.String toString() -> toString
    428:444:java.lang.String toString(java.lang.String) -> a
    450:463:com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> c
    31:31:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator -> com.badlogic.gdx.utils.bb:
    boolean hasNext -> a
    com.badlogic.gdx.utils.ObjectSet set -> b
    int nextIndex -> c
    int currentIndex -> d
    boolean valid -> e
    485:488:void reset() -> a
    491:499:void findNextIndex() -> b
    502:512:void remove() -> remove
    515:516:boolean hasNext() -> hasNext
    520:525:java.lang.Object next() -> next
    529:529:com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> c
    472:472:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.bc:
    com.badlogic.gdx.utils.Array keys -> f
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> g
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> h
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> i
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> j
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> k
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> l
    55:56:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    60:61:java.lang.Object remove(java.lang.Object) -> b
    70:72:void clear() -> a
    79:79:com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> b
    85:98:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> c
    104:117:com.badlogic.gdx.utils.ObjectMap$Values values() -> d
    123:136:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> e
    140:152:java.lang.String toString() -> toString
    28:28:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedMap$OrderedMapEntries -> com.badlogic.gdx.utils.bd:
    com.badlogic.gdx.utils.Array keys -> g
    164:166:void reset() -> c
    169:175:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    179:181:void remove() -> remove
    155:155:java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$OrderedMapKeys -> com.badlogic.gdx.utils.be:
    com.badlogic.gdx.utils.Array keys -> a
    193:195:void reset() -> c
    198:203:java.lang.Object next() -> next
    207:209:void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$OrderedMapValues -> com.badlogic.gdx.utils.bf:
    com.badlogic.gdx.utils.Array keys -> a
    221:223:void reset() -> c
    226:231:java.lang.Object next() -> next
    235:237:void remove() -> remove
com.badlogic.gdx.utils.OrderedSet -> com.badlogic.gdx.utils.bg:
    com.badlogic.gdx.utils.Array items -> e
    com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator1 -> f
    com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator2 -> g
    50:51:boolean add(java.lang.Object) -> a
    55:56:boolean remove(java.lang.Object) -> b
    60:62:void clear(int) -> b
    65:67:void clear() -> a
    74:87:com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator() -> d
    91:101:java.lang.String toString() -> toString
    25:25:com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> c
    25:25:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator -> com.badlogic.gdx.utils.bh:
    com.badlogic.gdx.utils.Array items -> f
    113:115:void reset() -> a
    118:123:java.lang.Object next() -> next
    127:130:void remove() -> remove
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.bi:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    50:50:java.lang.Object obtain() -> obtain
    56:62:void free(java.lang.Object) -> free
    67:77:void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    81:82:void clear() -> clear
    86:86:int getFree() -> getFree
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.bj:
    void reset() -> reset
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.bk:
    com.badlogic.gdx.utils.ObjectMap typePools -> a
    27:32:com.badlogic.gdx.utils.Pool get(java.lang.Class,int) -> a
    38:38:com.badlogic.gdx.utils.Pool get(java.lang.Class) -> a
    48:48:java.lang.Object obtain(java.lang.Class) -> b
    53:57:void free(java.lang.Object) -> a
    68:80:void freeAll(com.badlogic.gdx.utils.Array,boolean) -> a
com.badlogic.gdx.utils.PropertiesUtils -> com.badlogic.gdx.utils.bl:
    54:212:void load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader) -> a
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.bm:
    com.badlogic.gdx.utils.reflect.Constructor constructor -> a
    46:53:com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class) -> a
    60:62:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.bn:
    com.badlogic.gdx.utils.Scaling fit -> a
    com.badlogic.gdx.utils.Scaling fill -> b
    com.badlogic.gdx.utils.Scaling fillX -> c
    com.badlogic.gdx.utils.Scaling fillY -> d
    com.badlogic.gdx.utils.Scaling stretch -> e
    com.badlogic.gdx.utils.Scaling stretchX -> f
    com.badlogic.gdx.utils.Scaling stretchY -> g
    com.badlogic.gdx.utils.Scaling none -> h
    com.badlogic.gdx.math.Vector2 temp -> i
    com.badlogic.gdx.utils.Scaling[] $VALUES -> j
    23:23:com.badlogic.gdx.utils.Scaling[] values() -> values
    23:23:com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    52:98:com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> a
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.bo:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> a
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.bp:
    java.lang.StringBuffer trace -> a
    53:59:java.lang.String getMessage() -> getMessage
    65:69:void addTrace(java.lang.String) -> a
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.bq:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isIos -> d
    boolean isAndroid -> e
    boolean isARM -> f
    boolean is64Bit -> g
    java.lang.String abi -> h
    java.util.HashSet loadedLibraries -> i
    java.lang.String nativesJar -> j
    79:91:java.lang.String crc(java.io.InputStream) -> a
    96:99:java.lang.String mapLibraryName(java.lang.String) -> a
    106:121:void load(java.lang.String) -> b
    124:137:java.io.InputStream readFile(java.lang.String) -> c
    228:255:java.io.File extractFile(java.lang.String,java.lang.String,java.io.File) -> a
    261:293:void loadFile(java.lang.String) -> d
    299:303:java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File) -> b
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.br:
    short[] items -> a
    int size -> b
    boolean ordered -> c
    83:86:void add(short) -> a
    186:194:short removeIndex(int) -> a
    249:250:void clear() -> a
    264:266:short[] ensureCapacity(int) -> b
    270:274:short[] resize(int) -> c
    314:316:short[] toArray() -> b
    320:325:int hashCode() -> hashCode
    329:340:boolean equals(java.lang.Object) -> equals
    344:354:java.lang.String toString() -> toString
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.bs:
    java.lang.Object[] snapshot -> d
    java.lang.Object[] recycled -> e
    int snapshots -> f
    77:80:java.lang.Object[] begin() -> e
    85:94:void end() -> f
    97:105:void modified() -> g
    108:110:void set(int,java.lang.Object) -> a
    113:115:void insert(int,java.lang.Object) -> b
    118:120:void swap(int,int) -> a
    123:124:boolean removeValue(java.lang.Object,boolean) -> c
    128:129:java.lang.Object removeIndex(int) -> b
    143:144:java.lang.Object pop() -> a
    148:150:void clear() -> d
    158:160:void sort(java.util.Comparator) -> a
    173:175:void truncate(int) -> e
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.bt:
    com.badlogic.gdx.utils.Sort instance -> a
    com.badlogic.gdx.utils.TimSort timSort -> b
    56:58:void sort(java.lang.Object[],java.util.Comparator,int,int) -> a
    62:63:com.badlogic.gdx.utils.Sort instance() -> a
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.bu:
    byte[] EMPTY_BYTES -> a
    36:37:void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    49:52:void copyStream(java.io.InputStream,java.io.OutputStream,byte[]) -> a
    57:58:void copyStream(java.io.InputStream,java.nio.ByteBuffer) -> a
    72:79:int copyStream(java.io.InputStream,java.nio.ByteBuffer,byte[]) -> a
    90:92:byte[] copyStreamToByteArray(java.io.InputStream,int) -> a
    122:128:void closeQuietly(java.io.Closeable) -> a
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream -> com.badlogic.gdx.utils.bv:
    138:139:byte[] toByteArray() -> toByteArray
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.bw:
    char[] chars -> a
    int length -> b
    char[] digits -> c
    37:40:int numChars(int,int) -> a
    45:48:int numChars(long,int) -> a
    104:108:void enlargeBuffer(int) -> c
    111:119:void appendNull() -> a
    122:128:void append0(char[]) -> a
    132:145:void append0(char[],int,int) -> a
    148:152:void append0(char) -> a
    155:166:void append0(java.lang.String) -> a
    169:177:void append0(java.lang.CharSequence,int,int) -> a
    194:197:char charAt(int) -> charAt
    325:325:int length() -> length
    448:459:void setLength(int) -> a
    486:494:java.lang.String substring(int,int) -> b
    502:503:java.lang.String toString() -> toString
    515:515:java.lang.CharSequence subSequence(int,int) -> subSequence
    526:526:int indexOf(java.lang.String) -> b
    538:569:int indexOf(java.lang.String,int) -> a
    709:710:com.badlogic.gdx.utils.StringBuilder append(boolean) -> a
    720:721:com.badlogic.gdx.utils.StringBuilder append(char) -> b
    731:731:com.badlogic.gdx.utils.StringBuilder append(int) -> b
    742:742:com.badlogic.gdx.utils.StringBuilder append(int,int) -> c
    754:778:com.badlogic.gdx.utils.StringBuilder append(int,int,char) -> a
    787:787:com.badlogic.gdx.utils.StringBuilder append(long) -> a
    797:797:com.badlogic.gdx.utils.StringBuilder append(long,int) -> b
    808:841:com.badlogic.gdx.utils.StringBuilder append(long,int,char) -> a
    850:851:com.badlogic.gdx.utils.StringBuilder append(float) -> a
    861:862:com.badlogic.gdx.utils.StringBuilder append(double) -> a
    872:877:com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    885:886:com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> c
    896:897:com.badlogic.gdx.utils.StringBuilder append(char[]) -> b
    910:911:com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> b
    920:928:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> a
    932:936:com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> a
    949:950:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> b
    1181:1185:int hashCode() -> hashCode
    1189:1201:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Appendable append(char) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TextFormatter -> com.badlogic.gdx.utils.bx:
    java.text.MessageFormat messageFormat -> a
    com.badlogic.gdx.utils.StringBuilder buffer -> b
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.by:
    java.lang.Object[] a -> a
    java.util.Comparator c -> b
    int minGallop -> c
    java.lang.Object[] tmp -> d
    int tmpCount -> e
    int stackSize -> f
    int[] runBase -> g
    int[] runLen -> h
    97:146:void doSort(java.lang.Object[],java.util.Comparator,int,int) -> a
    243:281:void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> a
    304:317:int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> a
    326:332:void reverseRange(java.lang.Object[],int,int) -> a
    349:354:int minRunLength(int) -> a
    362:365:void pushRun(int,int) -> a
    380:389:void mergeCollapse() -> a
    393:398:void mergeForceCollapse() -> b
    409:450:void mergeAt(int) -> b
    467:515:int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> a
    532:580:int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> b
    598:689:void mergeLo(int,int,int,int) -> a
    702:797:void mergeHi(int,int,int,int) -> b
    805:824:java.lang.Object[] ensureCapacity(int) -> c
    835:838:void rangeCheck(int,int,int) -> a
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.bz:
    24:24:long nanoTime() -> a
    29:29:long millis() -> b
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.ca:
    com.badlogic.gdx.utils.Array instances -> a
    com.badlogic.gdx.utils.Timer$TimerThread thread -> b
    com.badlogic.gdx.utils.Timer instance -> c
    com.badlogic.gdx.utils.Array tasks -> d
    35:38:com.badlogic.gdx.utils.Timer instance() -> a
    54:54:com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> a
    59:59:com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> a
    64:73:com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> a
    85:91:void start() -> b
    103:128:long update(long,long) -> a
    133:139:void delay(long) -> a
    142:145:void wake() -> c
    156:156:com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float) -> b
    162:162:com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> b
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.cb:
    long executeTimeMillis -> executeTimeMillis
    long intervalMillis -> intervalMillis
    int repeatCount -> repeatCount
    void run() -> run
    184:186:void cancel() -> cancel
    190:190:boolean isScheduled() -> isScheduled
    195:195:long getExecuteTimeMillis() -> getExecuteTimeMillis
com.badlogic.gdx.utils.Timer$TimerThread -> com.badlogic.gdx.utils.cc:
    com.badlogic.gdx.Application app -> a
    long pauseMillis -> b
    212:231:void run() -> run
    236:247:void resume() -> resume
    250:256:void pause() -> pause
    259:263:void dispose() -> dispose
com.badlogic.gdx.utils.UBJsonReader -> com.badlogic.gdx.utils.cd:
    boolean oldFormat -> a
    40:47:com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> a
    54:56:com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> a
    62:64:com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream) -> a
    69:100:com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream,byte) -> a
    104:134:com.badlogic.gdx.utils.JsonValue parseArray(java.io.DataInputStream) -> b
    138:170:com.badlogic.gdx.utils.JsonValue parseObject(java.io.DataInputStream) -> c
    176:191:com.badlogic.gdx.utils.JsonValue parseData(java.io.DataInputStream,byte) -> b
    195:195:java.lang.String parseString(java.io.DataInputStream,byte) -> c
    199:206:java.lang.String parseString(java.io.DataInputStream,boolean,byte) -> a
    210:210:long parseSize(java.io.DataInputStream,boolean,long) -> a
    215:226:long parseSize(java.io.DataInputStream,byte,boolean,long) -> a
    230:230:short readUChar(java.io.DataInputStream) -> d
    234:234:int readUShort(java.io.DataInputStream) -> e
    238:238:long readUInt(java.io.DataInputStream) -> f
    242:244:java.lang.String readString(java.io.DataInputStream,long) -> a
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.ce:
    com.badlogic.gdx.utils.Array elements -> a
    com.badlogic.gdx.utils.XmlReader$Element root -> b
    com.badlogic.gdx.utils.XmlReader$Element current -> c
    com.badlogic.gdx.utils.StringBuilder textBuffer -> d
    byte[] _xml_actions -> e
    byte[] _xml_key_offsets -> f
    char[] _xml_trans_keys -> g
    byte[] _xml_single_lengths -> h
    byte[] _xml_range_lengths -> i
    short[] _xml_index_offsets -> j
    byte[] _xml_indicies -> k
    byte[] _xml_trans_targs -> l
    byte[] _xml_trans_actions -> m
    49:65:com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> a
    81:83:com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> a
    88:338:com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> a
    343:343:byte[] init__xml_actions_0() -> b
    349:349:byte[] init__xml_key_offsets_0() -> c
    356:356:char[] init__xml_trans_keys_0() -> d
    365:365:byte[] init__xml_single_lengths_0() -> e
    372:372:byte[] init__xml_range_lengths_0() -> f
    379:379:short[] init__xml_index_offsets_0() -> g
    386:386:byte[] init__xml_indicies_0() -> h
    396:396:byte[] init__xml_trans_targs_0() -> i
    404:404:byte[] init__xml_trans_actions_0() -> j
    420:425:void open(java.lang.String) -> a
    428:429:void attribute(java.lang.String,java.lang.String) -> a
    432:438:java.lang.String entity(java.lang.String) -> b
    442:444:void text(java.lang.String) -> c
    447:449:void close() -> a
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.cf:
    java.lang.String name -> a
    com.badlogic.gdx.utils.ObjectMap attributes -> b
    com.badlogic.gdx.utils.Array children -> c
    java.lang.String text -> d
    com.badlogic.gdx.utils.XmlReader$Element parent -> e
    464:464:java.lang.String getName() -> a
    473:476:java.lang.String getAttribute(java.lang.String) -> a
    480:483:java.lang.String getAttribute(java.lang.String,java.lang.String) -> a
    487:489:void setAttribute(java.lang.String,java.lang.String) -> b
    492:493:int getChildCount() -> b
    498:499:com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> a
    503:505:void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> a
    508:508:java.lang.String getText() -> c
    512:513:void setText(java.lang.String) -> b
    520:521:void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> b
    528:528:com.badlogic.gdx.utils.XmlReader$Element getParent() -> d
    532:532:java.lang.String toString() -> toString
    536:570:java.lang.String toString(java.lang.String) -> c
    576:581:com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> d
    600:606:com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> e
    632:634:float getFloatAttribute(java.lang.String,float) -> a
    639:639:int getIntAttribute(java.lang.String) -> f
    643:645:int getIntAttribute(java.lang.String,int) -> a
    670:678:java.lang.String get(java.lang.String,java.lang.String) -> c
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.a.a:
    java.util.concurrent.ExecutorService executor -> a
    52:55:com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> a
    67:73:void dispose() -> dispose
com.badlogic.gdx.utils.async.AsyncExecutor$1 -> com.badlogic.gdx.utils.a.b:
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> a
    41:43:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.a.c:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> a
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> b
    58:58:java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.a.d:
    java.util.concurrent.Future future -> a
    35:35:boolean isDone() -> a
    42:46:java.lang.Object get() -> b
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.a.e:
    java.lang.Object call() -> d
com.badlogic.gdx.utils.async.ThreadUtils -> com.badlogic.gdx.utils.a.f:
    23:24:void yield() -> a
com.badlogic.gdx.utils.reflect.ArrayReflection -> com.badlogic.gdx.utils.b.a:
    25:25:java.lang.Object newInstance(java.lang.Class,int) -> a
    30:30:int getLength(java.lang.Object) -> a
    35:35:java.lang.Object get(java.lang.Object,int) -> a
    40:41:void set(java.lang.Object,int,java.lang.Object) -> a
com.badlogic.gdx.utils.reflect.ClassReflection -> com.badlogic.gdx.utils.b.b:
    28:30:java.lang.Class forName(java.lang.String) -> a
    36:36:java.lang.String getSimpleName(java.lang.Class) -> a
    41:41:boolean isInstance(java.lang.Class,java.lang.Object) -> a
    47:47:boolean isAssignableFrom(java.lang.Class,java.lang.Class) -> a
    52:52:boolean isMemberClass(java.lang.Class) -> b
    57:57:boolean isStaticClass(java.lang.Class) -> c
    68:72:java.lang.Object newInstance(java.lang.Class) -> d
    90:95:com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> a
    103:107:com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[]) -> b
    113:118:com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class) -> e
    177:182:com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class) -> f
com.badlogic.gdx.utils.reflect.Constructor -> com.badlogic.gdx.utils.b.c:
    java.lang.reflect.Constructor constructor -> a
    38:38:java.lang.Class getDeclaringClass() -> a
    46:47:void setAccessible(boolean) -> a
    53:62:java.lang.Object newInstance(java.lang.Object[]) -> a
com.badlogic.gdx.utils.reflect.Field -> com.badlogic.gdx.utils.b.d:
    java.lang.reflect.Field field -> a
    36:36:java.lang.String getName() -> a
    41:41:java.lang.Class getType() -> b
    46:46:java.lang.Class getDeclaringClass() -> c
    50:50:boolean isAccessible() -> d
    54:55:void setAccessible(boolean) -> a
    84:84:boolean isStatic() -> e
    89:89:boolean isTransient() -> f
    99:99:boolean isSynthetic() -> g
    105:120:java.lang.Class getElementType(int) -> a
    158:162:java.lang.Object get(java.lang.Object) -> a
    169:175:void set(java.lang.Object,java.lang.Object) -> a
com.badlogic.gdx.utils.reflect.Method -> com.badlogic.gdx.utils.b.e:
    java.lang.reflect.Method method -> a
    34:34:java.lang.String getName() -> a
    108:114:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> a
com.badlogic.gdx.utils.reflect.ReflectionException -> com.badlogic.gdx.utils.b.f:
com.badlogic.gdx.utils.viewport.ScalingViewport -> com.badlogic.gdx.utils.c.a:
    com.badlogic.gdx.utils.Scaling scaling -> a
    55:63:void update(int,int,boolean) -> a
com.badlogic.gdx.utils.viewport.StretchViewport -> com.badlogic.gdx.utils.c.b:
com.badlogic.gdx.utils.viewport.Viewport -> com.badlogic.gdx.utils.c.c:
    com.badlogic.gdx.graphics.Camera camera -> a
    float worldWidth -> b
    float worldHeight -> c
    int screenX -> d
    int screenY -> e
    int screenWidth -> f
    int screenHeight -> g
    com.badlogic.gdx.math.Vector3 tmp -> h
    48:53:void apply(boolean) -> a
    65:66:void update(int,int,boolean) -> a
    72:75:com.badlogic.gdx.math.Vector2 unproject(com.badlogic.gdx.math.Vector2) -> a
    111:112:void calculateScissors(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    127:127:com.badlogic.gdx.graphics.Camera getCamera() -> a
    131:132:void setCamera(com.badlogic.gdx.graphics.Camera) -> a
    135:135:float getWorldWidth() -> b
    144:144:float getWorldHeight() -> c
    153:155:void setWorldSize(float,float) -> a
    158:158:int getScreenX() -> d
    167:167:int getScreenY() -> e
    176:176:int getScreenWidth() -> f
    185:185:int getScreenHeight() -> g
    207:211:void setScreenBounds(int,int,int,int) -> a
com.softnuke.biosleep.ActionListener -> com.softnuke.biosleep.a:
    void handleEvent(int,java.lang.Object) -> a
com.softnuke.biosleep.MyGame -> com.softnuke.biosleep.b:
    com.softnuke.biosleep.PlatformSpecific platform -> b
    int HEIGHT -> c
    int WIDTH -> d
    int bHEIGHT -> e
    int bWIDTH -> f
    float ASPECT_RATIO -> g
    float PTP -> h
    utils.AssetLord Assets -> i
    37:49:void create() -> a
    56:57:void setPlatformSpecific(com.softnuke.biosleep.PlatformSpecific) -> a
    61:62:void render() -> b
    66:67:void pause() -> c
    71:77:void resume() -> d
    81:85:void dispose() -> e
    89:104:void resize(int,int) -> a
    108:109:void sop(java.lang.String) -> a
    112:113:void sop(float) -> a
com.softnuke.biosleep.PlatformSpecific -> com.softnuke.biosleep.c:
    void signIn() -> a
    void rateGame() -> b
    void shareScore(int) -> a
    boolean isSignedIn() -> c
    void getAchievementsGPGS() -> d
    void loadAd() -> e
    void appInvite() -> f
    void setTrackerScreen(java.lang.String) -> a
    void removeAds() -> g
    boolean isAdsRemoved() -> h
    void showToast(java.lang.String,boolean) -> a
    void exitApp() -> i
    void registerActionListener(com.softnuke.biosleep.ActionListener) -> a
    void unRegisterActionListener(com.softnuke.biosleep.ActionListener) -> b
    void openTwitter() -> j
    void isOnline() -> k
com.softnuke.biosleep.android.AndroidLauncher -> com.softnuke.biosleep.android.AndroidLauncher:
    android.app.AlertDialog$Builder alertBuilder -> a
    com.badlogic.gdx.utils.Array listeners -> b
    32:76:void onCreate(android.os.Bundle) -> onCreate
    92:92:void signIn() -> a
    106:117:void rateGame() -> b
    123:139:void shareScore(int) -> a
    156:156:boolean isSignedIn() -> c
    163:163:void getAchievementsGPGS() -> d
    175:175:void loadAd() -> e
    187:187:void appInvite() -> f
    193:193:void setTrackerScreen(java.lang.String) -> a
    199:199:void removeAds() -> g
    204:204:boolean isAdsRemoved() -> h
    209:219:void showToast(java.lang.String,boolean) -> a
    222:223:void sendEvent(int) -> b
    226:229:void sendEvent(int,java.lang.Object) -> a
    233:236:void registerActionListener(com.softnuke.biosleep.ActionListener) -> a
    240:241:void unRegisterActionListener(com.softnuke.biosleep.ActionListener) -> b
    245:253:void exitApp() -> i
    260:263:void openTwitter() -> j
    281:281:void isOnline() -> k
com.softnuke.biosleep.android.AndroidLauncher$1 -> com.softnuke.biosleep.android.a:
    com.softnuke.biosleep.android.AndroidLauncher this$0 -> a
    67:68:void onClick(android.content.DialogInterface,int) -> onClick
com.softnuke.biosleep.android.AndroidLauncher$2 -> com.softnuke.biosleep.android.b:
    com.softnuke.biosleep.android.AndroidLauncher this$0 -> a
    73:74:void onClick(android.content.DialogInterface,int) -> onClick
com.softnuke.biosleep.android.AndroidLauncher$3 -> com.softnuke.biosleep.android.c:
    com.softnuke.biosleep.android.AndroidLauncher this$0 -> a
    java.lang.String val$message -> b
    int val$duration -> c
    216:217:void run() -> run
com.softnuke.biosleep.android.AndroidLauncher$4 -> com.softnuke.biosleep.android.d:
    com.softnuke.biosleep.android.AndroidLauncher this$0 -> a
    248:250:void run() -> run
objects.Background -> b.a:
    int TOTAL_SPRITES -> a
    float x -> n
    float y -> o
    float vx -> p
    float bWIDTH -> q
    float bHEIGHT -> r
    float WIDTH -> s
    float HEIGHT -> t
    objects.Background$ParallaxCamera paxCamera -> b
    com.badlogic.gdx.graphics.OrthographicCamera mainCam -> c
    com.badlogic.gdx.graphics.OrthographicCamera camLayer1 -> d
    com.badlogic.gdx.graphics.OrthographicCamera camLayer2 -> e
    com.badlogic.gdx.graphics.g2d.Sprite backSprite -> f
    com.badlogic.gdx.graphics.g2d.Sprite buildLightSprite -> g
    com.badlogic.gdx.graphics.g2d.Sprite cbuildLightSprite -> h
    com.badlogic.gdx.graphics.g2d.Sprite buildDarkSprite -> i
    com.badlogic.gdx.graphics.g2d.Sprite cbuildDarkSprite -> j
    com.badlogic.gdx.utils.Array paxLayer1 -> k
    com.badlogic.gdx.utils.Array paxLayer2 -> l
    com.badlogic.gdx.math.Vector3 temp -> m
    73:140:void init() -> a
    146:202:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    247:257:void update(float) -> a
objects.Background$ParallaxCamera -> b.b:
    com.badlogic.gdx.math.Matrix4 parallaxView -> n
    com.badlogic.gdx.math.Matrix4 parallaxCombined -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    com.badlogic.gdx.math.Vector3 tmp2 -> q
    objects.Background this$0 -> r
    281:290:com.badlogic.gdx.math.Matrix4 calculateParallaxMatrix(float,float) -> a
objects.BeamSpot -> b.c:
    float width -> a
    float height -> b
    com.badlogic.gdx.math.Vector2 position -> y
    com.badlogic.gdx.physics.box2d.Body body -> c
    com.badlogic.gdx.physics.box2d.World world -> d
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> e
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> f
    com.badlogic.gdx.physics.box2d.Fixture fireFixture -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion texE -> h
    com.badlogic.gdx.graphics.g2d.TextureRegion texD -> i
    com.badlogic.gdx.graphics.g2d.Sprite bodySprite -> j
    com.badlogic.gdx.math.Vector2 Center -> k
    float bHEIGHT -> l
    float bWIDTH -> m
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> n
    objects.Light light -> o
    boolean visible -> p
    boolean STATE_ENABLED -> q
    com.badlogic.gdx.graphics.Color color -> r
    com.badlogic.gdx.graphics.Color rayColor -> s
    float delay -> t
    float totalTime -> u
    float fireTime -> v
    boolean CAN_KILL -> w
    boolean PLAYER_INSIDE -> x
    72:107:void init(com.badlogic.gdx.physics.box2d.World) -> a
    110:140:void create() -> c
    145:159:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    162:163:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    166:192:void update(float,float) -> a
    231:231:com.badlogic.gdx.physics.box2d.Fixture getFireSensor() -> a
    261:266:void dispose() -> b
objects.Bullet -> b.d:
    objects.Bullet _bullet -> s
    float Speed -> a
    int DAMAGE -> b
    boolean BULLET_POWER -> c
    float width -> d
    float height -> e
    com.badlogic.gdx.math.Vector2 position -> t
    boolean LEFT_DIRECTION -> f
    com.badlogic.gdx.graphics.Color color -> u
    com.badlogic.gdx.physics.box2d.Body body -> g
    com.badlogic.gdx.physics.box2d.World world -> h
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> i
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> j
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> k
    com.badlogic.gdx.physics.box2d.FixtureDef fixtureDef -> l
    com.badlogic.gdx.graphics.g2d.Sprite bulletSprite -> m
    com.badlogic.gdx.graphics.g2d.Sprite bulletPowerSprite -> n
    com.badlogic.gdx.math.Vector2 Center -> o
    float bHEIGHT -> p
    float bWIDTH -> q
    boolean visible -> r
    76:105:void init(com.badlogic.gdx.physics.box2d.World,float) -> a
    108:140:void create() -> g
    143:174:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    177:199:void update(float,float) -> a
    212:229:void reset() -> a
    232:233:float generateY() -> h
    239:249:void setOffScreen() -> b
    264:264:com.badlogic.gdx.physics.box2d.Fixture getBodyFixture() -> c
    268:273:void dispose() -> d
    277:280:int getDamage() -> e
    285:286:void makeDead() -> f
objects.Coin -> b.e:
    float width -> a
    float height -> b
    float Speed -> c
    com.badlogic.gdx.math.Vector2 position -> d
    float flyDistance -> e
    com.badlogic.gdx.math.Vector2 fixed -> A
    com.badlogic.gdx.physics.box2d.Body body -> f
    com.badlogic.gdx.physics.box2d.World world -> g
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> h
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> i
    com.badlogic.gdx.physics.box2d.FixtureDef fixtureDef -> j
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion texRegion -> l
    com.badlogic.gdx.math.Vector2 Center -> m
    float bHEIGHT -> n
    float bWIDTH -> o
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> p
    objects.Light light -> q
    com.badlogic.gdx.graphics.g2d.Animation coinAnime -> r
    com.badlogic.gdx.graphics.g2d.Sprite coinSprite -> s
    float time -> t
    boolean visible -> u
    boolean consumed -> v
    int NORMAL -> w
    int MEGA -> x
    int HIDDEN -> y
    int COIN_TYPE -> z
    79:118:void init(com.badlogic.gdx.physics.box2d.World) -> a
    121:146:void create() -> e
    152:165:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    168:170:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    173:190:void update(float,float) -> a
    194:197:void reset() -> a
    201:216:int consume() -> b
    220:220:com.badlogic.gdx.physics.box2d.Fixture getFixture() -> c
    266:271:void dispose() -> d
objects.Enemy -> b.f:
    objects.Enemy _enemy -> a
    boolean IMMORTAL -> C
    float height -> D
    float width -> E
    int health -> F
    com.badlogic.gdx.math.Vector2 position -> G
    com.badlogic.gdx.math.Vector2 startPos -> b
    float Speed -> H
    float Jump -> I
    int HEALTH -> J
    float gravityScale -> K
    com.badlogic.gdx.math.Vector2 CENTER_VECTOR -> c
    float flightTime -> L
    boolean DEAD -> d
    boolean visible -> M
    boolean Revived -> e
    boolean LEFT_DIRECTION -> f
    boolean RUNNING -> g
    screens.GameScreen gameScreen -> h
    com.badlogic.gdx.physics.box2d.Body body -> i
    com.badlogic.gdx.physics.box2d.World world -> j
    com.badlogic.gdx.physics.box2d.Shape shape -> k
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> l
    com.badlogic.gdx.physics.box2d.FixtureDef fixtureDef -> m
    com.badlogic.gdx.physics.box2d.Fixture sensorFixture -> n
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> o
    com.badlogic.gdx.physics.box2d.Fixture headFixture -> p
    com.badlogic.gdx.physics.box2d.Fixture legFixture -> q
    com.badlogic.gdx.graphics.g2d.Sprite playerSprite -> r
    com.badlogic.gdx.graphics.g2d.ParticleEffect killParticle -> s
    com.badlogic.gdx.math.Vector2 WorldGravityNegative -> N
    boolean ASIDE -> t
    float bHEIGHT -> u
    float bWIDTH -> v
    float time -> w
    float lastJumpTime -> x
    com.badlogic.gdx.graphics.g2d.Animation idleAnime -> y
    com.badlogic.gdx.graphics.g2d.Animation moveAnime -> z
    java.util.HashMap pKeys -> A
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> B
    116:188:void init() -> a
    191:213:void getSkinTexture() -> o
    225:245:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    248:252:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    255:281:void update(float,float) -> a
    288:295:boolean checkDeath() -> b
    299:300:void flipBodyAngle() -> c
    303:304:void fixBodyAngle() -> d
    307:313:void setDeath() -> e
    316:324:void setOffScreen() -> f
    331:331:com.badlogic.gdx.physics.box2d.Fixture getSensorFixture() -> g
    335:335:com.badlogic.gdx.physics.box2d.Fixture getLegFixture() -> h
    339:339:com.badlogic.gdx.physics.box2d.Fixture getHeadFixture() -> i
    343:343:com.badlogic.gdx.physics.box2d.Fixture getBodyFixture() -> j
    351:354:void moveLeft() -> k
    357:361:void moveRight() -> l
    369:374:void dispose() -> m
    377:390:void reset() -> n
    393:405:void hitBullet(int) -> a
objects.GravityReverser -> b.g:
    float width -> a
    float height -> b
    com.badlogic.gdx.math.Vector2 position -> s
    com.badlogic.gdx.physics.box2d.Body body -> c
    com.badlogic.gdx.physics.box2d.World world -> d
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> e
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> f
    com.badlogic.gdx.graphics.g2d.Sprite fixSprite -> g
    com.badlogic.gdx.graphics.g2d.Sprite flipSprite -> h
    com.badlogic.gdx.math.Vector2 Center -> i
    float bHEIGHT -> j
    float bWIDTH -> k
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> l
    objects.Light lightE -> m
    objects.Light lightD -> n
    com.badlogic.gdx.graphics.g2d.Animation reverserAnime -> o
    float time -> p
    boolean visible -> q
    int TYPE -> r
    70:85:void init(com.badlogic.gdx.physics.box2d.World) -> a
    89:133:void getTextures() -> c
    136:165:void create() -> d
    169:197:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    200:205:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    208:220:void update(float,float) -> a
    237:237:com.badlogic.gdx.physics.box2d.Fixture getFixture() -> a
    281:286:void dispose() -> b
objects.Light -> b.h:
    float size -> a
    com.badlogic.gdx.graphics.Color color -> b
    com.badlogic.gdx.math.Vector2 position -> c
    boolean visible -> d
    boolean enabled -> e
    boolean oscillate -> f
    float OSCILLATION_FORCE -> g
    float time -> p
    com.badlogic.gdx.graphics.g2d.Sprite light -> h
    int WHITE_COLOR -> i
    int BLACK_COLOR -> j
    int RED_COLOR -> k
    int YELLOW_COLOR -> l
    int GREEN_COLOR -> m
    int BLUE_COLOR -> n
    int GREY_COLOR -> o
    76:80:void init() -> e
    83:89:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    92:105:void update(float,float) -> a
    116:117:void enable() -> a
    120:121:void disable() -> b
    125:126:void enableOscillate() -> c
    142:142:void dispose() -> d
objects.Movers -> b.i:
    float width -> a
    float height -> b
    float Speed -> c
    com.badlogic.gdx.math.Vector2 position -> d
    float distance -> e
    com.badlogic.gdx.math.Vector2 fixed -> u
    com.badlogic.gdx.physics.box2d.Body body -> f
    com.badlogic.gdx.physics.box2d.World world -> g
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> h
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> i
    com.badlogic.gdx.physics.box2d.FixtureDef fixtureDef -> j
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion texRegion -> l
    com.badlogic.gdx.math.Vector2 Center -> m
    float bHEIGHT -> n
    float bWIDTH -> o
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> p
    boolean visible -> q
    int HOR -> r
    int VER -> s
    int MOVER_TYPE -> t
    71:99:void init(com.badlogic.gdx.physics.box2d.World) -> a
    102:134:void create() -> b
    139:152:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    162:189:void update(float,float) -> a
    253:258:void dispose() -> a
objects.Player -> b.j:
    objects.Player _player -> a
    boolean IMMORTAL -> R
    boolean PLAYER_DRAW -> S
    float height -> T
    float width -> U
    com.badlogic.gdx.math.Vector2 position -> V
    com.badlogic.gdx.math.Vector2 startPos -> b
    float Speed -> W
    float Jump -> X
    float gravityScale -> Y
    boolean GLOWING -> Z
    boolean FLYING -> aa
    float flightTime -> ab
    boolean visible -> ac
    boolean Revived -> c
    int JUMP_DAMAGE -> d
    boolean DEAD -> ad
    boolean CONTROLS -> e
    boolean GOT_HIT -> f
    boolean TELEPORTING_OUT -> g
    boolean TELEPORTING_IN -> h
    boolean CAN_JUMP -> i
    boolean CAN_FIRE -> j
    boolean LEFT_DIRECTION -> k
    int PLAYER_EVOLUTION -> l
    screens.GameScreen gameScreen -> m
    com.badlogic.gdx.physics.box2d.Body body -> n
    com.badlogic.gdx.physics.box2d.World world -> o
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> p
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> q
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> r
    com.badlogic.gdx.physics.box2d.Fixture sensorFixture -> s
    com.badlogic.gdx.graphics.g2d.Sprite playerSprite -> t
    com.badlogic.gdx.graphics.g2d.Sprite hitSprite -> u
    com.badlogic.gdx.graphics.g2d.ParticleEffect jumpParticle -> v
    com.badlogic.gdx.math.Vector2 WorldGravityNegative -> ae
    boolean ASIDE -> w
    float bHEIGHT -> x
    float bWIDTH -> y
    float time -> z
    float lastJumpTime -> A
    float deathClock -> B
    float winClock -> C
    com.badlogic.gdx.graphics.g2d.Animation idleAnime -> D
    com.badlogic.gdx.graphics.g2d.Animation moveAnime -> E
    com.badlogic.gdx.graphics.g2d.Animation jumpAnime -> F
    com.badlogic.gdx.graphics.g2d.Animation fireAnime -> G
    com.badlogic.gdx.graphics.g2d.Animation fireIdleAnime -> H
    com.badlogic.gdx.graphics.g2d.Animation fireMoveAnime -> I
    com.badlogic.gdx.graphics.g2d.Animation megaIdleAnime -> J
    com.badlogic.gdx.graphics.g2d.Animation megaMoveAnime -> K
    com.badlogic.gdx.graphics.g2d.Animation hitAnime -> L
    com.badlogic.gdx.graphics.g2d.Animation teleportOut -> M
    com.badlogic.gdx.graphics.g2d.Animation teleportIn -> N
    utils.AssetLord Assets -> O
    com.badlogic.gdx.graphics.g2d.TextureAtlas gameAtlas -> P
    java.util.HashMap pKeys -> Q
    114:204:void init() -> a
    208:211:void setStartingPoint(float,float) -> a
    215:359:void getSkinTexture() -> v
    370:469:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    473:476:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    479:518:void update(float) -> a
    521:538:void reset() -> b
    541:542:void flipBodyAngle() -> c
    545:546:void fixBodyAngle() -> d
    549:556:boolean checkDeath() -> e
    560:572:void evolvePlayer() -> f
    575:575:int getEvolution() -> g
    579:579:objects.Player getInstance() -> h
    584:605:void setDeath() -> i
    612:612:com.badlogic.gdx.physics.box2d.Fixture getBodyFixture() -> j
    616:616:com.badlogic.gdx.physics.box2d.Fixture getSensorFixture() -> k
    621:623:void startJumpEffect() -> l
    627:636:void makeJump() -> m
    639:646:void makeMiniJump() -> n
    649:652:void moveLeft() -> o
    655:659:void moveRight() -> p
    664:666:void stopMove() -> q
    669:687:void updateMove(java.util.HashMap) -> a
    691:700:void applyFireImpulse() -> r
    703:703:com.badlogic.gdx.math.Vector2 getPosition() -> s
    711:711:boolean isDead() -> t
    716:716:void dispose() -> u
objects.Portal -> b.k:
    float width -> a
    float height -> b
    com.badlogic.gdx.math.Vector2 previous -> q
    com.badlogic.gdx.math.Vector2 position -> r
    com.badlogic.gdx.physics.box2d.Body body -> c
    com.badlogic.gdx.physics.box2d.World world -> d
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> e
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> f
    com.badlogic.gdx.physics.box2d.Fixture sensorFixture -> g
    com.badlogic.gdx.math.Vector2 Center -> h
    float bHEIGHT -> i
    float bWIDTH -> j
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> k
    boolean visible -> l
    boolean ENABLED -> m
    int ENTRY -> n
    int EXIT -> o
    int PORTAL_TYPE -> p
    94:119:void init(com.badlogic.gdx.physics.box2d.World) -> a
    122:157:void create() -> c
    161:171:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    174:177:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    180:190:void update(float,float) -> a
    209:209:com.badlogic.gdx.physics.box2d.Fixture getSensorFixture() -> a
    256:261:void dispose() -> b
objects.PowerUp -> b.l:
    float width -> a
    float height -> b
    float posx -> c
    float posy -> d
    com.badlogic.gdx.math.Vector2 fixed -> y
    com.badlogic.gdx.physics.box2d.Body body -> e
    com.badlogic.gdx.physics.box2d.World world -> f
    com.badlogic.gdx.physics.box2d.Shape shape -> g
    com.badlogic.gdx.physics.box2d.BodyDef bodyDef -> h
    com.badlogic.gdx.physics.box2d.FixtureDef fixtureDef -> i
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion texRegion -> k
    com.badlogic.gdx.graphics.g2d.Sprite powerSprite -> l
    com.badlogic.gdx.math.Vector2 Center -> m
    float bHEIGHT -> n
    float bWIDTH -> o
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> p
    objects.Light light -> q
    boolean visible -> r
    boolean consumed -> s
    int LEVEL_ZERO -> t
    int LEVEL_ONE -> u
    int LEVEL_TWO -> v
    int POWER_TYPE -> w
    float flyLevel -> x
    boolean up -> z
    75:117:void init(com.badlogic.gdx.physics.box2d.World,float,float) -> a
    120:157:void create() -> e
    163:174:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    177:179:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    183:205:void update(float,float) -> a
    209:213:void reset() -> a
    243:255:int consume() -> b
    259:259:com.badlogic.gdx.physics.box2d.Fixture getFixture() -> c
    315:320:void dispose() -> d
objects.Switch -> b.m:
    float width -> a
    float height -> b
    com.badlogic.gdx.math.Vector2 position -> q
    com.badlogic.gdx.physics.box2d.Body body -> c
    com.badlogic.gdx.physics.box2d.World world -> d
    com.badlogic.gdx.physics.box2d.PolygonShape shape -> e
    com.badlogic.gdx.physics.box2d.Fixture bodyFixture -> f
    com.badlogic.gdx.graphics.g2d.Sprite onSprite -> g
    com.badlogic.gdx.graphics.g2d.Sprite offSprite -> h
    com.badlogic.gdx.math.Vector2 Center -> i
    float bHEIGHT -> j
    float bWIDTH -> k
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> l
    objects.Light lightE -> m
    objects.Light lightD -> n
    boolean visible -> o
    boolean STATE_ENABLED -> p
    62:103:void init(com.badlogic.gdx.physics.box2d.World) -> a
    106:130:void create() -> e
    135:147:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    157:167:void update(float,float) -> a
    171:178:void reset() -> a
    184:184:com.badlogic.gdx.physics.box2d.Fixture getFixture() -> b
    201:211:void toggle() -> c
    240:245:void dispose() -> d
screens.GameScreen -> c.a:
    boolean DEBUG -> a
    boolean SOFT_DEBUG -> b
    boolean DISABLE_ADS -> c
    boolean RENDER_LIGHTS -> d
    boolean BACKGROUND_SHADER -> e
    boolean BACKGROUND_PARALLAX -> f
    boolean BACKGROUND_MUSIC -> g
    boolean BACKGROUND_PARTICLES -> h
    boolean PLAYER_PARTICLES -> i
    com.softnuke.biosleep.MyGame game -> j
    utils.AssetLord Assets -> k
    screens.GameScreen _gameScreen -> l
    int WIDTH -> m
    int HEIGHT -> n
    int bWIDTH -> o
    int bHEIGHT -> p
    float PTP -> q
    com.badlogic.gdx.graphics.OrthographicCamera camera -> r
    com.badlogic.gdx.graphics.OrthographicCamera cameraui -> s
    com.badlogic.gdx.utils.viewport.Viewport viewport -> t
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> u
    com.badlogic.gdx.graphics.glutils.ShapeRenderer canvas -> v
    com.badlogic.gdx.physics.box2d.World world -> w
    com.badlogic.gdx.physics.box2d.Box2DDebugRenderer debugRenderer -> x
    com.badlogic.gdx.scenes.scene2d.Stage stage -> ak
    com.badlogic.gdx.scenes.scene2d.Group pauseScreen -> y
    com.badlogic.gdx.scenes.scene2d.Group levelClearScreen -> z
    com.badlogic.gdx.scenes.scene2d.ui.TextButton coinsCollectedCount -> A
    com.badlogic.gdx.scenes.scene2d.ui.TextButton enemyKilledCount -> B
    com.badlogic.gdx.scenes.scene2d.ui.Label scoreLabel -> C
    com.badlogic.gdx.scenes.scene2d.Group controls -> D
    com.badlogic.gdx.scenes.scene2d.ui.Image fireImage -> E
    com.badlogic.gdx.scenes.scene2d.ui.Image pauseBack -> F
    com.badlogic.gdx.scenes.scene2d.ui.Image coinStarImage -> G
    com.badlogic.gdx.scenes.scene2d.ui.Image enemyStarImage -> H
    float tutorialTime -> I
    com.badlogic.gdx.graphics.g2d.TextureAtlas gameAtlas -> al
    com.badlogic.gdx.graphics.g2d.BitmapFont fontSmall -> J
    com.badlogic.gdx.graphics.g2d.BitmapFont fontMedium -> K
    com.badlogic.gdx.graphics.g2d.BitmapFont fontLarge -> L
    objects.Player player -> M
    int lastScore -> N
    int levelScore -> O
    utils.GameState CURRENT_STATE -> P
    float CAMERA_ANGLE -> Q
    com.badlogic.gdx.math.Vector2 WorldGravity -> R
    com.badlogic.gdx.math.Vector2 WorldGravityFlipped -> S
    box2dLight.PointLight pLight -> T
    box2dLight.ConeLight cLight -> U
    utils.CameraShake cameraShake -> V
    com.badlogic.gdx.graphics.glutils.FrameBuffer lightBuffer -> W
    com.badlogic.gdx.graphics.g2d.TextureRegion lightBufferRegion -> X
    com.badlogic.gdx.Preferences prefs -> Y
    com.badlogic.gdx.graphics.FPSLogger fpsLogger -> Z
    boolean StageVisible -> aa
    boolean UpdateOnceGameOver -> ab
    boolean SLOW_MOTION -> ac
    double stepAccumulator -> am
    double stepCurrentTime -> an
    float TIME_STEP -> ao
    boolean ScreenFinished -> ad
    float Fade -> ae
    utils.LevelGenerate level -> af
    utils.MyInputProcessor inputProcessor -> ag
    utils.ScoreManager scoreManager -> ah
    objects.Background background -> ai
    utils.Cinema cinema -> aj
    274:296:void createObjects() -> t
    301:404:void createUI() -> u
    409:495:void createLevelClearScreen() -> v
    500:516:void showLevelClear() -> e
    520:528:void startloadingNextLevel() -> f
    532:588:void createPauseScreen() -> g
    591:595:void showPauseScreen() -> h
    598:601:void hidePauseScreen() -> i
    604:607:void resumeGame() -> j
    613:616:void show() -> a
    620:688:void render(float) -> a
    691:732:void renderLights() -> w
    735:753:void doPhysics(float) -> b
    759:843:void update(float) -> c
    848:869:void reset(boolean) -> a
    872:899:void updateCameraMovement(float) -> d
    902:903:void hideControls() -> k
    906:907:void showControls() -> l
    910:911:void shakeThatAss() -> m
    914:919:void increaseScore(int) -> a
    932:932:void focusScore(boolean) -> b
    937:937:void resize(int,int) -> a
    942:942:void pause() -> b
    947:949:void resume() -> c
    954:957:void hide() -> d
    961:971:void dispose() -> n
    974:974:screens.GameScreen getInstance() -> o
    978:981:void returnToMainMenu() -> p
    984:984:utils.ScoreManager getScoreManager() -> q
    988:988:com.badlogic.gdx.graphics.OrthographicCamera getCamera() -> r
    992:992:utils.AssetLord getAssetLord() -> s
screens.GameScreen$1 -> c.b:
    screens.GameScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$moveLeftImage -> b
    308:310:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    314:316:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.GameScreen$2 -> c.c:
    screens.GameScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$moveRightImage -> b
    325:327:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    331:334:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.GameScreen$3 -> c.d:
    screens.GameScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$jumpImage -> b
    343:345:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    349:351:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.GameScreen$4 -> c.e:
    screens.GameScreen this$0 -> a
    366:370:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    375:378:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.GameScreen$5 -> c.f:
    screens.GameScreen this$0 -> a
    428:430:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.GameScreen$6 -> c.g:
    screens.GameScreen this$0 -> a
    444:446:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.GameScreen$7 -> c.h:
    screens.GameScreen this$0 -> a
    561:563:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.GameScreen$8 -> c.i:
    screens.GameScreen this$0 -> a
    577:579:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen -> c.j:
    com.softnuke.biosleep.MyGame game -> a
    utils.AssetLord Assets -> b
    boolean BACKGROUND_SOUND -> c
    boolean DEBUG -> W
    int CURRENT_VIEW -> X
    int LAST_VIEW -> Y
    int TOTAL_SCORE -> Z
    int Easter_Count -> aa
    screens.MainMenuScreen _menuScreen -> d
    int WIDTH -> e
    int HEIGHT -> f
    int bWIDTH -> g
    int bHEIGHT -> h
    float PTP -> i
    com.badlogic.gdx.graphics.OrthographicCamera camera -> j
    com.badlogic.gdx.scenes.scene2d.Stage stage -> ab
    float time -> k
    int levelNo -> l
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> m
    com.badlogic.gdx.graphics.g2d.BitmapFont fontSmall -> n
    com.badlogic.gdx.graphics.g2d.BitmapFont fontLarge -> o
    com.badlogic.gdx.graphics.g2d.BitmapFont fontMedium -> p
    com.badlogic.gdx.scenes.scene2d.ui.Label totalScoreLabel -> q
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle tscoreStyle -> r
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle tscoreTextStyle -> s
    com.badlogic.gdx.graphics.g2d.ParticleEffect introSmokeEffect -> t
    com.badlogic.gdx.graphics.g2d.Sprite introBack -> u
    com.badlogic.gdx.graphics.g2d.Sprite introPlayerSleep -> v
    com.badlogic.gdx.graphics.g2d.NinePatch ninep -> w
    com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable ninePatchDrawable -> x
    com.badlogic.gdx.graphics.g2d.TextureRegion topBack -> y
    com.badlogic.gdx.scenes.scene2d.ui.Image logobackI -> z
    com.badlogic.gdx.scenes.scene2d.ui.TextButton visualButt -> A
    com.badlogic.gdx.scenes.scene2d.ui.TextButton tutorialButt -> B
    com.badlogic.gdx.scenes.scene2d.ui.TextButton musicButt -> C
    com.badlogic.gdx.scenes.scene2d.ui.TextButton creditsButt -> D
    com.badlogic.gdx.scenes.scene2d.ui.TextButton coinsButton -> E
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> F
    com.badlogic.gdx.scenes.scene2d.ui.Table optionsTable -> G
    com.badlogic.gdx.scenes.scene2d.ui.Table store -> H
    com.badlogic.gdx.scenes.scene2d.ui.Table credits -> I
    com.badlogic.gdx.scenes.scene2d.ui.Table levelTable -> J
    com.badlogic.gdx.scenes.scene2d.Group menu -> K
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> L
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> M
    com.badlogic.gdx.graphics.g2d.ParticleEffect squareFloor -> N
    com.badlogic.gdx.scenes.scene2d.ui.Dialog dialog -> O
    com.badlogic.gdx.Preferences prefs -> P
    com.badlogic.gdx.audio.Music menuMusic -> Q
    com.badlogic.gdx.graphics.Color color -> R
    utils.ScoreManager scoreManager -> S
    boolean ScreenFinished -> T
    float Fade -> U
    com.badlogic.gdx.graphics.g2d.Sprite blackFade -> V
    142:291:void init() -> j
    295:350:void show() -> a
    354:354:float getImageRatio(com.badlogic.gdx.scenes.scene2d.ui.Image) -> a
    358:579:void createMenu() -> k
    584:708:void createLevelSelect() -> l
    717:922:void createOptions() -> m
    927:1053:void createStore() -> n
    1057:1151:void createCredits() -> o
    1155:1170:void createExitDialog() -> p
    1177:1180:void updateTotalScoreText() -> q
    1184:1256:void render(float) -> a
    1260:1284:void update(float) -> b
    1288:1317:void checkForScreenChange() -> r
    1321:1324:boolean isHome() -> e
    1330:1342:void setHome() -> f
    1361:1361:void resize(int,int) -> a
    1367:1369:void pause() -> b
    1392:1395:void resume() -> c
    1400:1404:void hide() -> d
    1408:1417:void dispose() -> g
    1420:1420:screens.MainMenuScreen getInstance() -> h
    1424:1424:com.badlogic.gdx.graphics.OrthographicCamera getCamera() -> i
    1430:1444:void handleEvent(int,java.lang.Object) -> a
    70:70:int access$0(screens.MainMenuScreen) -> a
    70:70:void access$1(screens.MainMenuScreen,int) -> a
    66:66:void access$2(screens.MainMenuScreen,int) -> b
    65:65:boolean access$3(screens.MainMenuScreen) -> b
screens.MainMenuScreen$1 -> c.k:
    screens.MainMenuScreen this$0 -> a
    226:228:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    231:252:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$10 -> c.l:
    screens.MainMenuScreen this$0 -> a
    679:694:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    697:698:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$11 -> c.m:
    screens.MainMenuScreen this$0 -> a
    746:769:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    772:773:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$12 -> c.n:
    screens.MainMenuScreen this$0 -> a
    789:802:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    805:806:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$13 -> c.o:
    screens.MainMenuScreen this$0 -> a
    822:845:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    848:849:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$14 -> c.p:
    screens.MainMenuScreen this$0 -> a
    862:880:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    884:885:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$15 -> c.q:
    screens.MainMenuScreen this$0 -> a
    893:910:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    913:914:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$16 -> c.r:
    screens.MainMenuScreen this$0 -> a
    982:991:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
screens.MainMenuScreen$17 -> c.s:
    screens.MainMenuScreen this$0 -> a
    1025:1041:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    1044:1045:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$18 -> c.t:
    screens.MainMenuScreen this$0 -> a
    1086:1088:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen$19 -> c.u:
    screens.MainMenuScreen this$0 -> a
    1126:1140:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    1143:1144:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$2 -> c.v:
    screens.MainMenuScreen this$0 -> a
    404:420:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    423:424:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$20 -> c.w:
    screens.MainMenuScreen this$0 -> a
    1157:1161:void result(java.lang.Object) -> result
screens.MainMenuScreen$3 -> c.x:
    screens.MainMenuScreen this$0 -> a
    441:456:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    459:460:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$4 -> c.y:
    screens.MainMenuScreen this$0 -> a
    477:492:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    495:496:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$5 -> c.z:
    screens.MainMenuScreen this$0 -> a
    512:514:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    517:518:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
screens.MainMenuScreen$6 -> c.aa:
    screens.MainMenuScreen this$0 -> a
    534:537:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen$7 -> c.ab:
    screens.MainMenuScreen this$0 -> a
    551:553:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen$8 -> c.ac:
    screens.MainMenuScreen this$0 -> a
    569:571:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen$9 -> c.ad:
    screens.MainMenuScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$b -> b
    648:652:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
screens.MainMenuScreen$MenuInputProcessor -> c.ae:
    com.badlogic.gdx.math.Vector3 tempTouchVec -> b
    screens.MainMenuScreen this$0 -> a
    1453:1475:boolean keyDown(int) -> a
    1481:1497:boolean keyUp(int) -> b
    1502:1502:boolean keyTyped(char) -> a
    1509:1509:boolean touchDown(int,int,int,int) -> a
    1516:1516:boolean touchUp(int,int,int,int) -> b
    1521:1521:boolean touchDragged(int,int,int) -> a
    1526:1526:boolean mouseMoved(int,int) -> a
    1531:1531:boolean scrolled(int) -> c
screens.SplashScreen -> c.af:
    com.softnuke.biosleep.MyGame game -> a
    screens.SplashScreen _splashScreen -> b
    int WIDTH -> c
    int HEIGHT -> d
    int bWIDTH -> e
    int bHEIGHT -> f
    float PTP -> g
    com.badlogic.gdx.graphics.OrthographicCamera camera -> h
    com.badlogic.gdx.scenes.scene2d.ui.Image githubImage -> k
    com.badlogic.gdx.scenes.scene2d.Stage stage -> l
    com.badlogic.gdx.graphics.Texture githubTex -> i
    utils.AssetLord Assets -> j
    57:118:void show() -> a
    122:130:void render(float) -> a
    135:135:void resize(int,int) -> a
    140:140:void pause() -> b
    145:145:void resume() -> c
    149:150:void hide() -> d
    154:156:void dispose() -> e
screens.SplashScreen$1 -> c.ag:
    screens.SplashScreen this$0 -> a
    91:110:void run() -> run
utils.AssetLord -> d.a:
    com.badlogic.gdx.assets.AssetManager manager -> a
    boolean resized -> b
    102:204:void load() -> a
    207:234:void finishLoading() -> b
    237:239:void dispose() -> c
utils.CameraShake -> d.b:
    com.badlogic.gdx.graphics.OrthographicCamera camera -> a
    float shakedTime -> b
    float shakeDuration -> c
    boolean Shake -> d
    float shakePower -> e
    float originalX -> f
    float originalY -> g
    37:42:void shakeThatAss(boolean) -> a
    47:68:void update(float) -> a
utils.Cinema -> d.c:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.graphics.OrthographicCamera camera -> b
    float bWIDTH -> c
    float bHEIGHT -> d
    float WIDTH -> e
    float HEIGHT -> f
    float time -> g
    float anime_time -> h
    float anime_delay -> i
    int MOV_STAGE -> j
    boolean CAN_EXECUTE -> k
    int CINEMA_TYPE -> l
    com.badlogic.gdx.scenes.scene2d.ui.Image intro1 -> m
    com.badlogic.gdx.scenes.scene2d.ui.Image introAlien -> n
    com.badlogic.gdx.scenes.scene2d.ui.Image introPlayerSleep -> o
    com.badlogic.gdx.scenes.scene2d.ui.Image introPlayerFly -> p
    com.badlogic.gdx.scenes.scene2d.ui.Image introStar -> q
    com.badlogic.gdx.scenes.scene2d.ui.Image introAlienRays -> r
    com.badlogic.gdx.graphics.g2d.Sprite introLevelPods -> s
    com.badlogic.gdx.graphics.g2d.Sprite introScientist -> t
    com.badlogic.gdx.graphics.g2d.ParticleEffect introSmokeEffect -> u
    com.badlogic.gdx.graphics.g2d.BitmapFont fontMedium -> v
    com.badlogic.gdx.scenes.scene2d.ui.TextButton introText1 -> w
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> x
    80:85:void init() -> b
    88:155:void loadIntroMovie() -> c
    162:202:void loadIntroLevel() -> d
    205:281:void start(int) -> a
    284:292:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    295:302:void renderUI(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    305:600:void update(float) -> a
    604:642:void handleIntroLevel() -> e
    645:700:void handleMovIntro() -> f
    711:713:void clearCinema() -> a
    717:763:void levelUpdate(int) -> b
utils.Cinema$1 -> d.d:
    utils.Cinema this$0 -> a
    99:103:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
utils.Cinema$2 -> d.e:
    utils.Cinema this$0 -> a
    188:192:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
utils.GameState -> d.f:
    utils.GameState READY -> a
    utils.GameState RUNNING -> b
    utils.GameState PAUSED -> c
    utils.GameState STOPPED -> d
    utils.GameState EVOLVING -> e
    utils.GameState[] ENUM$VALUES -> f
    1:1:utils.GameState[] values() -> values
    1:1:utils.GameState valueOf(java.lang.String) -> valueOf
utils.LevelGenerate -> d.g:
    utils.LevelGenerate _level -> a
    int WIDTH -> b
    int HEIGHT -> c
    int bWIDTH -> d
    int bHEIGHT -> e
    float PTP -> f
    boolean MACHINE_GUN -> g
    boolean WORLD_FLIPPED -> h
    com.badlogic.gdx.maps.tiled.TiledMap tileMap -> i
    com.badlogic.gdx.maps.tiled.TmxMapLoader tileLoader -> j
    com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer tmRenderer -> k
    com.badlogic.gdx.graphics.OrthographicCamera camera -> l
    com.badlogic.gdx.physics.box2d.World world -> m
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> n
    com.badlogic.gdx.utils.viewport.Viewport viewport -> o
    screens.GameScreen gameScreen -> p
    short CATEGORY_NONE -> q
    short CATEGORY_PLAYER -> r
    short CATEGORY_BADBOY -> s
    short CATEGORY_WALL -> t
    short CATEGORY_POWERUP -> u
    short CATEGORY_BULLET -> v
    com.badlogic.gdx.utils.Array enemyPool -> w
    com.badlogic.gdx.utils.Array bulletPool -> x
    com.badlogic.gdx.utils.Array activeBulletPool -> y
    com.badlogic.gdx.utils.Array powersPool -> z
    com.badlogic.gdx.utils.Array lightPool -> A
    com.badlogic.gdx.utils.Array portalPool -> B
    com.badlogic.gdx.utils.Array platformPool -> C
    com.badlogic.gdx.utils.Array spikesPool -> D
    com.badlogic.gdx.utils.Array moverPool -> E
    com.badlogic.gdx.utils.Array coinsPool -> F
    com.badlogic.gdx.utils.Array gravityPool -> G
    com.badlogic.gdx.utils.Array beamPool -> H
    objects.Switch levelSwitch -> I
    float gametime -> Z
    float last_bullet -> aa
    java.util.HashMap pKeys -> J
    utils.LevelGenerate$TaskQueue taskQueue -> K
    boolean CURRENT_LEVEL_CLEARED -> L
    int CURRENT_LEVEL -> M
    boolean LEVEL_LOADED -> N
    int MAP_RIGHT_BOUND -> O
    utils.AssetLord Assets -> P
    com.badlogic.gdx.audio.Sound coinSound -> Q
    com.badlogic.gdx.audio.Sound fireSound -> R
    com.badlogic.gdx.audio.Sound playerHurtSound -> S
    com.badlogic.gdx.audio.Sound enemyHurtSound -> T
    com.badlogic.gdx.audio.Sound levelUpSound -> U
    com.badlogic.gdx.audio.Sound portalSound -> V
    com.badlogic.gdx.audio.Music gameMusic -> W
    com.badlogic.gdx.audio.Music menuMusic -> X
    com.badlogic.gdx.utils.Array tileImageLayers -> Y
    158:181:void loadSounds() -> x
    186:192:void prepareBullets() -> a
    195:262:void levelTiled() -> b
    265:289:void loadNextLevel() -> c
    294:298:void clearOldLevel() -> y
    302:766:void buildShapes(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.physics.box2d.World) -> a
    776:839:void render(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> a
    842:859:void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    867:871:void renderOverlayed(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> b
    875:882:void renderLights(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> c
    885:945:void update(float) -> a
    949:950:void pushLight(objects.Light) -> a
    954:971:void cleanUpLevel() -> d
    974:1007:void reset() -> e
    1010:1014:void pauseMusic() -> f
    1017:1019:void pauseEverything() -> g
    1022:1031:void resumeEverything() -> h
    1035:1035:void dimMusic() -> i
    1038:1042:void playMenuMusic() -> j
    1046:1056:void flipGravity() -> k
    1060:1070:void fixGravity() -> l
    1074:1089:void enemyWallBounce(com.badlogic.gdx.physics.box2d.Fixture) -> a
    1094:1127:void fireBullet() -> m
    1130:1139:void test() -> n
    1143:1149:int getCoinCollected() -> o
    1154:1159:int getEnemyKilled() -> p
    1165:1174:void coinPlayerCollide(com.badlogic.gdx.physics.box2d.Fixture) -> b
    1178:1187:void enemyFlying(com.badlogic.gdx.physics.box2d.Fixture) -> c
    1192:1218:void enemyPlayerCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> a
    1222:1241:void enemyBulletCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> b
    1245:1255:void beamPlayerCollide(com.badlogic.gdx.physics.box2d.Fixture,boolean) -> a
    1259:1267:void bulletPlatformCollide(com.badlogic.gdx.physics.box2d.Fixture) -> d
    1271:1283:void updateMove(java.util.HashMap) -> a
    1287:1297:void powerUpPlayer(com.badlogic.gdx.physics.box2d.Fixture) -> e
    1301:1317:void levelClearPortal(com.badlogic.gdx.physics.box2d.Fixture) -> f
    1324:1336:void levelClear() -> z
    1340:1358:void switchPlayerCollide(com.badlogic.gdx.physics.box2d.Fixture) -> g
    1362:1372:void gravityPlayerCollide(com.badlogic.gdx.physics.box2d.Fixture) -> h
    1375:1380:void playCoinSound() -> q
    1383:1387:void playFireSound() -> r
    1397:1401:void playEnemyHitSound() -> s
    1404:1408:void playLevelUpSound() -> t
    1418:1418:objects.Switch getLevelSwitch() -> u
    1422:1424:void dispose() -> v
    1427:1502:void dispose(boolean) -> a
    1507:1516:com.badlogic.gdx.physics.box2d.PolygonShape getRectangle(com.badlogic.gdx.maps.objects.RectangleMapObject) -> a
    1520:1524:com.badlogic.gdx.physics.box2d.CircleShape getCircle(com.badlogic.gdx.maps.objects.CircleMapObject) -> a
    1528:1539:com.badlogic.gdx.physics.box2d.PolygonShape getPolygon(com.badlogic.gdx.maps.objects.PolygonMapObject) -> a
    1543:1554:com.badlogic.gdx.physics.box2d.ChainShape getPolyline(com.badlogic.gdx.maps.objects.PolylineMapObject) -> a
    1558:1558:utils.LevelGenerate getInstance() -> w
utils.LevelGenerate$TaskQueue -> d.h:
    com.badlogic.gdx.utils.Array tasks -> a
    utils.LevelGenerate this$0 -> b
    1576:1595:void execute() -> a
    1598:1599:void push(int) -> a
    1602:1603:void clear() -> b
utils.MyContactListener -> d.i:
    21:146:void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> a
    151:180:void endContact(com.badlogic.gdx.physics.box2d.Contact) -> b
    184:191:void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> a
    197:197:void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> a
utils.MyInputProcessor -> d.j:
    com.badlogic.gdx.math.Vector3 tempTouchVec -> b
    java.util.HashMap PLAYER_KEYS -> a
    39:43:void resetKeys() -> a
    47:96:boolean keyDown(int) -> a
    101:158:boolean keyUp(int) -> b
    163:163:boolean keyTyped(char) -> a
    168:182:boolean touchDown(int,int,int,int) -> a
    189:189:boolean touchUp(int,int,int,int) -> b
    194:194:boolean touchDragged(int,int,int) -> a
    199:199:boolean mouseMoved(int,int) -> a
    204:204:boolean scrolled(int) -> c
    209:215:void makeActionLeft() -> b
    218:225:void makeActionRight() -> c
    228:233:void makeActionUp() -> d
    236:244:void leaveActionLeft() -> e
    247:255:void leaveActionRight() -> f
    258:263:void leaveActionUp() -> g
    266:276:void makeActionFire() -> h
    279:288:void leaveActionFire() -> i
utils.MyInputProcessor$CONTROL -> d.k:
    utils.MyInputProcessor$CONTROL LEFT -> a
    utils.MyInputProcessor$CONTROL RIGHT -> b
    utils.MyInputProcessor$CONTROL UP -> c
    utils.MyInputProcessor$CONTROL FIRE -> d
    utils.MyInputProcessor$CONTROL[] ENUM$VALUES -> e
    1:1:utils.MyInputProcessor$CONTROL[] values() -> values
    1:1:utils.MyInputProcessor$CONTROL valueOf(java.lang.String) -> valueOf
utils.ScoreManager -> d.l:
    com.badlogic.gdx.Preferences prefs -> n
    char[] SEKRIT -> o
    java.lang.StringBuilder sb -> a
    int USER_SCORE -> b
    int USER_HIGH_SCORE -> c
    int USER_TOTAL_SCORE -> d
    int USER_TOTAL_DEATHS -> e
    int MAX_LEVELS_UNLOCKED -> f
    int TIMES_JUMPED -> g
    int TUTORIAL_LEVEL -> h
    boolean FPS_CHECK -> i
    int jumpedLastTime -> j
    int slomodLastTime -> k
    int shieldLastTime -> l
    int deathLastTime -> m
    95:120:void save(int) -> a
    124:128:java.lang.String xor(java.lang.String) -> a
    133:156:int getInteger(java.lang.String,int) -> a
    187:196:java.lang.String encInt(int) -> e
    214:218:void increaseScore(int) -> b
    221:222:void increaseDeath() -> a
    225:232:boolean updateHighScore() -> b
    236:239:void updateTotalScore() -> c
    256:257:void reset() -> d
    378:381:void tutorialSeen(int) -> c
    384:387:void applyPremium() -> e
    390:396:void unlockLevel(int) -> d
