box2dLight.BlendFunc
box2dLight.ChainLight
box2dLight.ConeLight:
    float coneDegree
    42:44:public ConeLight(box2dLight.RayHandler,int,com.badlogic.gdx.graphics.Color,float,float,float,float,float)
    48:56:public void update()
    63:65:public void setDirection(float)
    71:71:public float getConeDegree()
    82:84:public void setConeDegree(float)
    93:96:public void setDistance(float)
    100:108:protected void setEndPoints()
box2dLight.DirectionalLight
box2dLight.Light:
    static final int MIN_RAYS
    protected final com.badlogic.gdx.graphics.Color color
    protected final com.badlogic.gdx.math.Vector2 tmpPosition
    protected box2dLight.RayHandler rayHandler
    protected boolean active
    protected boolean soft
    protected boolean xray
    protected boolean staticLight
    protected boolean culled
    protected boolean dirty
    protected boolean ignoreBody
    protected int rayNum
    protected int vertexNum
    protected float distance
    protected float direction
    protected float colorF
    protected float softShadowLength
    protected float[] segments
    protected float[] mx
    protected float[] my
    protected float[] f
    protected int m_index
    private com.badlogic.gdx.physics.box2d.Filter filterA
    final com.badlogic.gdx.physics.box2d.RayCastCallback ray
    74:81:public Light(box2dLight.RayHandler,int,com.badlogic.gdx.graphics.Color,float,float)
    abstract void update()
    abstract void render()
    public abstract void setDistance(float)
    public abstract void setDirection(float)
    public abstract void attachToBody(com.badlogic.gdx.physics.box2d.Body)
    public abstract com.badlogic.gdx.physics.box2d.Body getBody()
    public abstract void setPosition(float,float)
    public abstract void setPosition(com.badlogic.gdx.math.Vector2)
    public abstract float getX()
    public abstract float getY()
    151:151:public com.badlogic.gdx.math.Vector2 getPosition()
    165:172:public void setColor(com.badlogic.gdx.graphics.Color)
    191:194:public void setColor(float,float,float,float)
    200:206:public void add(box2dLight.RayHandler)
    212:213:public void remove()
    219:226:public void remove(boolean)
    240:240:public boolean isActive()
    247:261:public void setActive(boolean)
    267:267:public boolean isXray()
    279:281:public void setXray(boolean)
    291:291:public boolean isStaticLight()
    304:306:public void setStaticLight(boolean)
    312:312:public boolean isSoft()
    319:321:public void setSoft(boolean)
    328:328:public float getSoftShadowLength()
    337:339:public void setSoftnessLength(float)
    345:345:public com.badlogic.gdx.graphics.Color getColor()
    352:352:public float getDistance()
    362:362:public boolean contains(float,float)
    373:374:public void setIgnoreAttachedBody(boolean)
    380:380:public boolean getIgnoreAttachedBody()
    387:397:void setRayNum(int)
    404:404:public int getRayNum()
    437:443:boolean contactFilter(com.badlogic.gdx.physics.box2d.Fixture)
    451:452:public void setContactFilter(com.badlogic.gdx.physics.box2d.Filter)
    463:467:public void setContactFilter(short,short,short)
    470:476:boolean globalContactFilter(com.badlogic.gdx.physics.box2d.Fixture)
    484:485:public static void setGlobalContactFilter(com.badlogic.gdx.physics.box2d.Filter)
    496:500:public static void setGlobalContactFilter(short,short,short)
    21:21:static synthetic com.badlogic.gdx.physics.box2d.Filter access$000()
    21:21:static synthetic com.badlogic.gdx.physics.box2d.Filter access$100(box2dLight.Light)
box2dLight.Light$1
box2dLight.LightMap
box2dLight.PointLight:
    26:27:public PointLight(box2dLight.RayHandler,int)
    48:49:public PointLight(box2dLight.RayHandler,int,com.badlogic.gdx.graphics.Color,float,float,float)
    53:61:public void update()
    71:74:public void setDistance(float)
    78:86:void setEndPoints()
    92:92:public void setDirection(float)
box2dLight.PositionalLight:
    protected final com.badlogic.gdx.math.Vector2 tmpEnd
    protected final com.badlogic.gdx.math.Vector2 start
    protected com.badlogic.gdx.physics.box2d.Body body
    protected float bodyOffsetX
    protected float bodyOffsetY
    protected float bodyAngleOffset
    protected float[] sin
    protected float[] cos
    protected float[] endX
    protected float[] endY
    58:69:public PositionalLight(box2dLight.RayHandler,int,com.badlogic.gdx.graphics.Color,float,float,float,float)
    73:80:void update()
    84:97:void render()
    101:102:public void attachToBody(com.badlogic.gdx.physics.box2d.Body)
    118:119:public void attachToBody(com.badlogic.gdx.physics.box2d.Body,float,float)
    136:141:public void attachToBody(com.badlogic.gdx.physics.box2d.Body,float,float,float)
    145:147:public com.badlogic.gdx.math.Vector2 getPosition()
    151:151:public com.badlogic.gdx.physics.box2d.Body getBody()
    157:157:public float getX()
    163:163:public float getY()
    168:171:public void setPosition(float,float)
    175:178:public void setPosition(com.badlogic.gdx.math.Vector2)
    183:200:public boolean contains(float,float)
    205:211:protected void setRayNum(int)
    214:216:protected boolean cull()
    220:231:protected void updateBody()
    234:246:protected void updateMesh()
    250:281:protected void setMesh()
box2dLight.RayHandler
box2dLight.Spinor
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getLogLevel()
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Game:
    68:68:public com.badlogic.gdx.Screen getScreen()
com.badlogic.gdx.Gdx:
    28:28:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL30Available()
    public abstract com.badlogic.gdx.graphics.GL20 getGL20()
    public abstract com.badlogic.gdx.graphics.GL30 getGL30()
    public abstract long getFrameId()
    public abstract float getRawDeltaTime()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isFullscreen()
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean justTouched()
    public abstract boolean isKeyJustPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract boolean isCatchBackKey()
    public abstract void setCatchMenuKey(boolean)
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
    public abstract void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.InputMultiplexer:
    30:33:public varargs InputMultiplexer(com.badlogic.gdx.InputProcessor[])
    36:38:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    41:42:public void removeProcessor(int)
    50:51:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    55:55:public int size()
    59:60:public void clear()
    63:64:public void setProcessors(com.badlogic.gdx.utils.Array)
    67:67:public com.badlogic.gdx.utils.Array getProcessors()
com.badlogic.gdx.InputProcessorQueue
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract boolean openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest:
    155:157:public Net$HttpRequest()
    162:164:public Net$HttpRequest(java.lang.String)
    169:170:public void setUrl(java.lang.String)
    176:177:public void setHeader(java.lang.String,java.lang.String)
    184:185:public void setContent(java.lang.String)
    190:192:public void setContent(java.io.InputStream,long)
    198:199:public void setTimeOut(int)
    206:211:public void setFollowRedirects(boolean)
    215:216:public void setMethod(java.lang.String)
    246:246:public long getContentLength()
com.badlogic.gdx.Net$HttpResponse:
    public abstract byte[] getResult()
    public abstract java.lang.String getResultAsString()
    public abstract java.io.InputStream getResultAsStream()
    public abstract com.badlogic.gdx.net.HttpStatus getStatus()
    public abstract java.lang.String getHeader(java.lang.String)
    public abstract java.util.Map getHeaders()
com.badlogic.gdx.Preferences:
    public abstract com.badlogic.gdx.Preferences putLong(java.lang.String,long)
    public abstract com.badlogic.gdx.Preferences putFloat(java.lang.String,float)
    public abstract com.badlogic.gdx.Preferences put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract java.lang.String getString(java.lang.String)
    public abstract long getLong(java.lang.String,long)
    public abstract float getFloat(java.lang.String,float)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
    public abstract void remove(java.lang.String)
com.badlogic.gdx.Screen:
    public abstract void dispose()
com.badlogic.gdx.ScreenAdapter
com.badlogic.gdx.Version
com.badlogic.gdx.assets.AssetManager:
    136:142:public synchronized com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array)
    148:148:public synchronized java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor)
    217:223:public synchronized boolean containsAsset(java.lang.Object)
    249:253:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    260:260:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    339:340:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    366:371:public boolean update(int)
    385:391:public void finishLoadingAsset(java.lang.String)
    578:578:public synchronized int getLoadedAssets()
    583:583:public synchronized int getQueuedAssets()
    588:589:public synchronized float getProgress()
    595:596:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    650:650:public com.badlogic.gdx.utils.Logger getLogger()
    654:655:public void setLogger(com.badlogic.gdx.utils.Logger)
    675:699:public synchronized java.lang.String getDiagnostics()
    704:704:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    714:714:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.CubemapLoader:
    52:53:public CubemapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo:
    43:43:public CubemapLoader$CubemapLoaderInfo()
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter:
    93:94:public I18NBundleLoader$I18NBundleParameter(java.util.Locale)
com.badlogic.gdx.assets.loaders.ModelLoader:
    48:48:public com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle)
    53:54:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
    59:59:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
    64:64:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
    69:69:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    88:89:public SkinLoader$SkinParameter(com.badlogic.gdx.utils.ObjectMap)
    92:93:public SkinLoader$SkinParameter(java.lang.String)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    80:82:public TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ClasspathFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice:
    public abstract boolean isMono()
    public abstract void writeSamples(short[],int,int)
    public abstract void writeSamples(float[],int,int)
    public abstract int getLatency()
    public abstract void dispose()
    public abstract void setVolume(float)
com.badlogic.gdx.audio.AudioRecorder:
    public abstract void read(short[],int,int)
    public abstract void dispose()
com.badlogic.gdx.audio.Music:
    public abstract boolean isPlaying()
    public abstract boolean isLooping()
    public abstract float getVolume()
    public abstract void setPan(float,float)
    public abstract void setPosition(float)
    public abstract float getPosition()
    public abstract void dispose()
    public abstract void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Sound:
    public abstract long play(float)
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void pause()
    public abstract void resume()
    public abstract void stop(long)
    public abstract void pause(long)
    public abstract void resume(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.graphics.Camera:
    public abstract void update(boolean)
    77:90:public void lookAt(float,float,float)
    95:96:public void lookAt(com.badlogic.gdx.math.Vector3)
    101:103:public void normalizeUp()
    113:115:public void rotate(float,float,float,float)
    123:125:public void rotate(com.badlogic.gdx.math.Vector3,float)
    132:134:public void rotate(com.badlogic.gdx.math.Matrix4)
    141:143:public void rotate(com.badlogic.gdx.math.Quaternion)
    152:158:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    164:166:public void transform(com.badlogic.gdx.math.Matrix4)
    173:174:public void translate(float,float,float)
    179:180:public void translate(com.badlogic.gdx.math.Vector3)
    221:222:public com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3)
    253:256:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    264:264:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    54:56:public Color(int)
    107:111:public com.badlogic.gdx.graphics.Color mul(float)
    119:123:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    131:135:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    180:181:public com.badlogic.gdx.graphics.Color set(int)
    193:197:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    209:213:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    225:229:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    238:242:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    254:258:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    263:266:public com.badlogic.gdx.graphics.Color premultiplyAlpha()
    329:331:public static float toFloatBits(int,int,int,int)
    350:350:public static int toIntBits(int,int,int,int)
    354:354:public static int alpha(float)
    358:358:public static int luminanceAlpha(float,float)
    362:362:public static int rgb565(float,float,float)
    366:366:public static int rgba4444(float,float,float,float)
    370:370:public static int rgb888(float,float,float)
    378:378:public static int argb8888(float,float,float,float)
    382:382:public static int rgb565(com.badlogic.gdx.graphics.Color)
    386:386:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    390:390:public static int rgb888(com.badlogic.gdx.graphics.Color)
    398:398:public static int argb8888(com.badlogic.gdx.graphics.Color)
    407:410:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    418:422:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    430:433:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    453:457:public static void argb8888ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.Colors:
    34:34:public static com.badlogic.gdx.utils.ObjectMap getColors()
    53:53:public static com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color)
    80:81:private Colors()
com.badlogic.gdx.graphics.Cubemap:
    103:104:public Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    109:112:public Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    116:117:public Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap)
    122:127:public Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,boolean)
    131:135:public Cubemap(int,int,int,com.badlogic.gdx.graphics.Pixmap$Format)
    140:147:public Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)
    187:187:public int getDepth()
    203:207:private static void addManagedCubemap(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Cubemap)
    278:279:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    294:294:public static int getNumManagedCubemaps()
com.badlogic.gdx.graphics.Cubemap$CubemapSide
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDeleteTextures(int,java.nio.IntBuffer)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract void glGenTextures(int,java.nio.IntBuffer)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDeleteBuffers(int,java.nio.IntBuffer)
    public abstract void glDeleteFramebuffers(int,java.nio.IntBuffer)
    public abstract void glDeleteRenderbuffers(int,java.nio.IntBuffer)
    public abstract void glDetachShader(int,int)
    public abstract void glGenBuffers(int,java.nio.IntBuffer)
    public abstract void glGenFramebuffers(int,java.nio.IntBuffer)
    public abstract void glGenRenderbuffers(int,java.nio.IntBuffer)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1fv(int,int,float[],int)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1iv(int,int,int[],int)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2fv(int,int,float[],int)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2iv(int,int,int[],int)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3fv(int,int,float[],int)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3iv(int,int,int[],int)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4fv(int,int,float[],int)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4iv(int,int,int[],int)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,float[],int)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,float[],int)
    public abstract void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30:
    public static final int GL_READ_BUFFER
    public static final int GL_UNPACK_ROW_LENGTH
    public static final int GL_UNPACK_SKIP_ROWS
    public static final int GL_UNPACK_SKIP_PIXELS
    public static final int GL_PACK_ROW_LENGTH
    public static final int GL_PACK_SKIP_ROWS
    public static final int GL_PACK_SKIP_PIXELS
    public static final int GL_COLOR
    public static final int GL_DEPTH
    public static final int GL_STENCIL
    public static final int GL_RED
    public static final int GL_RGB8
    public static final int GL_RGBA8
    public static final int GL_RGB10_A2
    public static final int GL_TEXTURE_BINDING_3D
    public static final int GL_UNPACK_SKIP_IMAGES
    public static final int GL_UNPACK_IMAGE_HEIGHT
    public static final int GL_TEXTURE_3D
    public static final int GL_TEXTURE_WRAP_R
    public static final int GL_MAX_3D_TEXTURE_SIZE
    public static final int GL_UNSIGNED_INT_2_10_10_10_REV
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_TEXTURE_MIN_LOD
    public static final int GL_TEXTURE_MAX_LOD
    public static final int GL_TEXTURE_BASE_LEVEL
    public static final int GL_TEXTURE_MAX_LEVEL
    public static final int GL_MIN
    public static final int GL_MAX
    public static final int GL_DEPTH_COMPONENT24
    public static final int GL_MAX_TEXTURE_LOD_BIAS
    public static final int GL_TEXTURE_COMPARE_MODE
    public static final int GL_TEXTURE_COMPARE_FUNC
    public static final int GL_CURRENT_QUERY
    public static final int GL_QUERY_RESULT
    public static final int GL_QUERY_RESULT_AVAILABLE
    public static final int GL_BUFFER_MAPPED
    public static final int GL_BUFFER_MAP_POINTER
    public static final int GL_STREAM_READ
    public static final int GL_STREAM_COPY
    public static final int GL_STATIC_READ
    public static final int GL_STATIC_COPY
    public static final int GL_DYNAMIC_READ
    public static final int GL_DYNAMIC_COPY
    public static final int GL_MAX_DRAW_BUFFERS
    public static final int GL_DRAW_BUFFER0
    public static final int GL_DRAW_BUFFER1
    public static final int GL_DRAW_BUFFER2
    public static final int GL_DRAW_BUFFER3
    public static final int GL_DRAW_BUFFER4
    public static final int GL_DRAW_BUFFER5
    public static final int GL_DRAW_BUFFER6
    public static final int GL_DRAW_BUFFER7
    public static final int GL_DRAW_BUFFER8
    public static final int GL_DRAW_BUFFER9
    public static final int GL_DRAW_BUFFER10
    public static final int GL_DRAW_BUFFER11
    public static final int GL_DRAW_BUFFER12
    public static final int GL_DRAW_BUFFER13
    public static final int GL_DRAW_BUFFER14
    public static final int GL_DRAW_BUFFER15
    public static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
    public static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS
    public static final int GL_SAMPLER_3D
    public static final int GL_SAMPLER_2D_SHADOW
    public static final int GL_FRAGMENT_SHADER_DERIVATIVE_HINT
    public static final int GL_PIXEL_PACK_BUFFER
    public static final int GL_PIXEL_UNPACK_BUFFER
    public static final int GL_PIXEL_PACK_BUFFER_BINDING
    public static final int GL_PIXEL_UNPACK_BUFFER_BINDING
    public static final int GL_FLOAT_MAT2x3
    public static final int GL_FLOAT_MAT2x4
    public static final int GL_FLOAT_MAT3x2
    public static final int GL_FLOAT_MAT3x4
    public static final int GL_FLOAT_MAT4x2
    public static final int GL_FLOAT_MAT4x3
    public static final int GL_SRGB
    public static final int GL_SRGB8
    public static final int GL_SRGB8_ALPHA8
    public static final int GL_COMPARE_REF_TO_TEXTURE
    public static final int GL_MAJOR_VERSION
    public static final int GL_MINOR_VERSION
    public static final int GL_NUM_EXTENSIONS
    public static final int GL_RGBA32F
    public static final int GL_RGB32F
    public static final int GL_RGBA16F
    public static final int GL_RGB16F
    public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER
    public static final int GL_MAX_ARRAY_TEXTURE_LAYERS
    public static final int GL_MIN_PROGRAM_TEXEL_OFFSET
    public static final int GL_MAX_PROGRAM_TEXEL_OFFSET
    public static final int GL_MAX_VARYING_COMPONENTS
    public static final int GL_TEXTURE_2D_ARRAY
    public static final int GL_TEXTURE_BINDING_2D_ARRAY
    public static final int GL_R11F_G11F_B10F
    public static final int GL_UNSIGNED_INT_10F_11F_11F_REV
    public static final int GL_RGB9_E5
    public static final int GL_UNSIGNED_INT_5_9_9_9_REV
    public static final int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_MODE
    public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    public static final int GL_TRANSFORM_FEEDBACK_VARYINGS
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_START
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
    public static final int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    public static final int GL_RASTERIZER_DISCARD
    public static final int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    public static final int GL_INTERLEAVED_ATTRIBS
    public static final int GL_SEPARATE_ATTRIBS
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
    public static final int GL_RGBA32UI
    public static final int GL_RGB32UI
    public static final int GL_RGBA16UI
    public static final int GL_RGB16UI
    public static final int GL_RGBA8UI
    public static final int GL_RGB8UI
    public static final int GL_RGBA32I
    public static final int GL_RGB32I
    public static final int GL_RGBA16I
    public static final int GL_RGB16I
    public static final int GL_RGBA8I
    public static final int GL_RGB8I
    public static final int GL_RED_INTEGER
    public static final int GL_RGB_INTEGER
    public static final int GL_RGBA_INTEGER
    public static final int GL_SAMPLER_2D_ARRAY
    public static final int GL_SAMPLER_2D_ARRAY_SHADOW
    public static final int GL_SAMPLER_CUBE_SHADOW
    public static final int GL_UNSIGNED_INT_VEC2
    public static final int GL_UNSIGNED_INT_VEC3
    public static final int GL_UNSIGNED_INT_VEC4
    public static final int GL_INT_SAMPLER_2D
    public static final int GL_INT_SAMPLER_3D
    public static final int GL_INT_SAMPLER_CUBE
    public static final int GL_INT_SAMPLER_2D_ARRAY
    public static final int GL_UNSIGNED_INT_SAMPLER_2D
    public static final int GL_UNSIGNED_INT_SAMPLER_3D
    public static final int GL_UNSIGNED_INT_SAMPLER_CUBE
    public static final int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
    public static final int GL_BUFFER_ACCESS_FLAGS
    public static final int GL_BUFFER_MAP_LENGTH
    public static final int GL_BUFFER_MAP_OFFSET
    public static final int GL_DEPTH_COMPONENT32F
    public static final int GL_DEPTH32F_STENCIL8
    public static final int GL_FLOAT_32_UNSIGNED_INT_24_8_REV
    public static final int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    public static final int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_DEFAULT
    public static final int GL_FRAMEBUFFER_UNDEFINED
    public static final int GL_DEPTH_STENCIL_ATTACHMENT
    public static final int GL_DEPTH_STENCIL
    public static final int GL_UNSIGNED_INT_24_8
    public static final int GL_DEPTH24_STENCIL8
    public static final int GL_UNSIGNED_NORMALIZED
    public static final int GL_DRAW_FRAMEBUFFER_BINDING
    public static final int GL_READ_FRAMEBUFFER
    public static final int GL_DRAW_FRAMEBUFFER
    public static final int GL_READ_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_SAMPLES
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    public static final int GL_MAX_COLOR_ATTACHMENTS
    public static final int GL_COLOR_ATTACHMENT1
    public static final int GL_COLOR_ATTACHMENT2
    public static final int GL_COLOR_ATTACHMENT3
    public static final int GL_COLOR_ATTACHMENT4
    public static final int GL_COLOR_ATTACHMENT5
    public static final int GL_COLOR_ATTACHMENT6
    public static final int GL_COLOR_ATTACHMENT7
    public static final int GL_COLOR_ATTACHMENT8
    public static final int GL_COLOR_ATTACHMENT9
    public static final int GL_COLOR_ATTACHMENT10
    public static final int GL_COLOR_ATTACHMENT11
    public static final int GL_COLOR_ATTACHMENT12
    public static final int GL_COLOR_ATTACHMENT13
    public static final int GL_COLOR_ATTACHMENT14
    public static final int GL_COLOR_ATTACHMENT15
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    public static final int GL_MAX_SAMPLES
    public static final int GL_HALF_FLOAT
    public static final int GL_MAP_READ_BIT
    public static final int GL_MAP_WRITE_BIT
    public static final int GL_MAP_INVALIDATE_RANGE_BIT
    public static final int GL_MAP_INVALIDATE_BUFFER_BIT
    public static final int GL_MAP_FLUSH_EXPLICIT_BIT
    public static final int GL_MAP_UNSYNCHRONIZED_BIT
    public static final int GL_RG
    public static final int GL_RG_INTEGER
    public static final int GL_R8
    public static final int GL_RG8
    public static final int GL_R16F
    public static final int GL_R32F
    public static final int GL_RG16F
    public static final int GL_RG32F
    public static final int GL_R8I
    public static final int GL_R8UI
    public static final int GL_R16I
    public static final int GL_R16UI
    public static final int GL_R32I
    public static final int GL_R32UI
    public static final int GL_RG8I
    public static final int GL_RG8UI
    public static final int GL_RG16I
    public static final int GL_RG16UI
    public static final int GL_RG32I
    public static final int GL_RG32UI
    public static final int GL_VERTEX_ARRAY_BINDING
    public static final int GL_R8_SNORM
    public static final int GL_RG8_SNORM
    public static final int GL_RGB8_SNORM
    public static final int GL_RGBA8_SNORM
    public static final int GL_SIGNED_NORMALIZED
    public static final int GL_PRIMITIVE_RESTART_FIXED_INDEX
    public static final int GL_COPY_READ_BUFFER
    public static final int GL_COPY_WRITE_BUFFER
    public static final int GL_COPY_READ_BUFFER_BINDING
    public static final int GL_COPY_WRITE_BUFFER_BINDING
    public static final int GL_UNIFORM_BUFFER
    public static final int GL_UNIFORM_BUFFER_BINDING
    public static final int GL_UNIFORM_BUFFER_START
    public static final int GL_UNIFORM_BUFFER_SIZE
    public static final int GL_MAX_VERTEX_UNIFORM_BLOCKS
    public static final int GL_MAX_FRAGMENT_UNIFORM_BLOCKS
    public static final int GL_MAX_COMBINED_UNIFORM_BLOCKS
    public static final int GL_MAX_UNIFORM_BUFFER_BINDINGS
    public static final int GL_MAX_UNIFORM_BLOCK_SIZE
    public static final int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    public static final int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    public static final int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    public static final int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    public static final int GL_ACTIVE_UNIFORM_BLOCKS
    public static final int GL_UNIFORM_TYPE
    public static final int GL_UNIFORM_SIZE
    public static final int GL_UNIFORM_NAME_LENGTH
    public static final int GL_UNIFORM_BLOCK_INDEX
    public static final int GL_UNIFORM_OFFSET
    public static final int GL_UNIFORM_ARRAY_STRIDE
    public static final int GL_UNIFORM_MATRIX_STRIDE
    public static final int GL_UNIFORM_IS_ROW_MAJOR
    public static final int GL_UNIFORM_BLOCK_BINDING
    public static final int GL_UNIFORM_BLOCK_DATA_SIZE
    public static final int GL_UNIFORM_BLOCK_NAME_LENGTH
    public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    public static final int GL_INVALID_INDEX
    public static final int GL_MAX_VERTEX_OUTPUT_COMPONENTS
    public static final int GL_MAX_FRAGMENT_INPUT_COMPONENTS
    public static final int GL_MAX_SERVER_WAIT_TIMEOUT
    public static final int GL_OBJECT_TYPE
    public static final int GL_SYNC_CONDITION
    public static final int GL_SYNC_STATUS
    public static final int GL_SYNC_FLAGS
    public static final int GL_SYNC_FENCE
    public static final int GL_SYNC_GPU_COMMANDS_COMPLETE
    public static final int GL_UNSIGNALED
    public static final int GL_SIGNALED
    public static final int GL_ALREADY_SIGNALED
    public static final int GL_TIMEOUT_EXPIRED
    public static final int GL_CONDITION_SATISFIED
    public static final int GL_WAIT_FAILED
    public static final int GL_SYNC_FLUSH_COMMANDS_BIT
    public static final long GL_TIMEOUT_IGNORED
    public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR
    public static final int GL_ANY_SAMPLES_PASSED
    public static final int GL_ANY_SAMPLES_PASSED_CONSERVATIVE
    public static final int GL_SAMPLER_BINDING
    public static final int GL_RGB10_A2UI
    public static final int GL_TEXTURE_SWIZZLE_R
    public static final int GL_TEXTURE_SWIZZLE_G
    public static final int GL_TEXTURE_SWIZZLE_B
    public static final int GL_TEXTURE_SWIZZLE_A
    public static final int GL_GREEN
    public static final int GL_BLUE
    public static final int GL_INT_2_10_10_10_REV
    public static final int GL_TRANSFORM_FEEDBACK
    public static final int GL_TRANSFORM_FEEDBACK_PAUSED
    public static final int GL_TRANSFORM_FEEDBACK_ACTIVE
    public static final int GL_TRANSFORM_FEEDBACK_BINDING
    public static final int GL_PROGRAM_BINARY_RETRIEVABLE_HINT
    public static final int GL_PROGRAM_BINARY_LENGTH
    public static final int GL_NUM_PROGRAM_BINARY_FORMATS
    public static final int GL_PROGRAM_BINARY_FORMATS
    public static final int GL_COMPRESSED_R11_EAC
    public static final int GL_COMPRESSED_SIGNED_R11_EAC
    public static final int GL_COMPRESSED_RG11_EAC
    public static final int GL_COMPRESSED_SIGNED_RG11_EAC
    public static final int GL_COMPRESSED_RGB8_ETC2
    public static final int GL_COMPRESSED_SRGB8_ETC2
    public static final int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    public static final int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    public static final int GL_COMPRESSED_RGBA8_ETC2_EAC
    public static final int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    public static final int GL_TEXTURE_IMMUTABLE_FORMAT
    public static final int GL_MAX_ELEMENT_INDEX
    public static final int GL_NUM_SAMPLE_COUNTS
    public static final int GL_TEXTURE_IMMUTABLE_LEVELS
    public abstract void glReadBuffer(int)
    public abstract void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
    public abstract void glDrawRangeElements(int,int,int,int,int,int)
    public abstract void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
    public abstract void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
    public abstract void glGenQueries(int,int[],int)
    public abstract void glGenQueries(int,java.nio.IntBuffer)
    public abstract void glDeleteQueries(int,int[],int)
    public abstract void glDeleteQueries(int,java.nio.IntBuffer)
    public abstract boolean glIsQuery(int)
    public abstract void glBeginQuery(int,int)
    public abstract void glEndQuery(int)
    public abstract void glGetQueryiv(int,int,java.nio.IntBuffer)
    public abstract void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
    public abstract boolean glUnmapBuffer(int)
    public abstract java.nio.Buffer glGetBufferPointerv(int,int)
    public abstract void glDrawBuffers(int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
    public abstract void glRenderbufferStorageMultisample(int,int,int,int,int)
    public abstract void glFramebufferTextureLayer(int,int,int,int,int)
    public abstract void glFlushMappedBufferRange(int,int,int)
    public abstract void glDeleteVertexArrays(int,int[],int)
    public abstract void glGenVertexArrays(int,int[],int)
    public abstract void glBeginTransformFeedback(int)
    public abstract void glEndTransformFeedback()
    public abstract void glBindBufferRange(int,int,int,int,int)
    public abstract void glBindBufferBase(int,int,int)
    public abstract void glTransformFeedbackVaryings(int,java.lang.String[],int)
    public abstract void glVertexAttribIPointer(int,int,int,int,int)
    public abstract void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
    public abstract void glVertexAttribI4i(int,int,int,int,int)
    public abstract void glVertexAttribI4ui(int,int,int,int,int)
    public abstract void glGetUniformuiv(int,int,java.nio.IntBuffer)
    public abstract int glGetFragDataLocation(int,java.lang.String)
    public abstract void glUniform1uiv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3uiv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4uiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferuiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferfv(int,int,java.nio.FloatBuffer)
    public abstract void glClearBufferfi(int,int,float,int)
    public abstract java.lang.String glGetStringi(int,int)
    public abstract void glCopyBufferSubData(int,int,int,int,int)
    public abstract void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
    public abstract void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
    public abstract int glGetUniformBlockIndex(int,java.lang.String)
    public abstract void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
    public abstract java.lang.String glGetActiveUniformBlockName(int,int)
    public abstract void glUniformBlockBinding(int,int,int)
    public abstract void glDrawArraysInstanced(int,int,int,int)
    public abstract void glDrawElementsInstanced(int,int,int,int,int)
    public abstract void glGetInteger64v(int,java.nio.LongBuffer)
    public abstract void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
    public abstract void glGenSamplers(int,int[],int)
    public abstract void glGenSamplers(int,java.nio.IntBuffer)
    public abstract void glDeleteSamplers(int,int[],int)
    public abstract void glDeleteSamplers(int,java.nio.IntBuffer)
    public abstract boolean glIsSampler(int)
    public abstract void glBindSampler(int,int)
    public abstract void glSamplerParameteri(int,int,int)
    public abstract void glSamplerParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glSamplerParameterf(int,int,float)
    public abstract void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glVertexAttribDivisor(int,int)
    public abstract void glBindTransformFeedback(int,int)
    public abstract void glDeleteTransformFeedbacks(int,int[],int)
    public abstract void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
    public abstract void glGenTransformFeedbacks(int,int[],int)
    public abstract void glGenTransformFeedbacks(int,java.nio.IntBuffer)
    public abstract boolean glIsTransformFeedback(int)
    public abstract void glPauseTransformFeedback()
    public abstract void glResumeTransformFeedback()
    public abstract void glProgramParameteri(int,int,int)
    public abstract void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
    public abstract void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
com.badlogic.gdx.graphics.GLTexture:
    public abstract int getDepth()
    public abstract boolean isManaged()
    protected abstract void reload()
    72:74:public void bind(int)
    105:106:public void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
    138:139:public void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.graphics.Mesh:
    80:86:protected Mesh(com.badlogic.gdx.graphics.glutils.VertexData,com.badlogic.gdx.graphics.glutils.IndexData,boolean)
    128:134:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    185:187:public com.badlogic.gdx.graphics.Mesh setVertices(float[])
    206:206:public com.badlogic.gdx.graphics.Mesh updateVertices(int,float[])
    215:216:public com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int)
    222:222:public float[] getVertices(float[])
    230:230:public float[] getVertices(int,float[])
    238:238:public float[] getVertices(int,int,float[])
    249:263:public float[] getVertices(int,int,float[],int)
    283:285:public com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int)
    291:292:public void getIndices(short[])
    299:300:public void getIndices(short[],int)
    308:309:public void getIndices(int,short[],int)
    318:329:public void getIndices(int,int,short[],int)
    343:343:public int getMaxVertices()
    348:348:public int getMaxIndices()
    353:353:public int getVertexSize()
    363:364:public void setAutoBind(boolean)
    539:541:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    549:579:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    587:587:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    596:596:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    605:605:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    616:654:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    666:707:public float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
    719:719:public float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
    728:728:public float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4)
    739:739:public float calculateRadius(float,float,float,int,int)
    748:748:public float calculateRadius(com.badlogic.gdx.math.Vector3,int,int)
    757:757:public float calculateRadius(float,float,float)
    764:764:public float calculateRadius(com.badlogic.gdx.math.Vector3)
    814:849:public void scale(float,float,float)
    856:857:public void transform(com.badlogic.gdx.math.Matrix4)
    861:873:public void transform(com.badlogic.gdx.math.Matrix4,int,int)
    886:920:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    927:928:public void transformUV(com.badlogic.gdx.math.Matrix3)
    932:943:protected void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
    953:966:public static void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
    977:1057:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    1064:1064:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    73:74:public void setToOrtho(boolean)
    98:99:public void rotate(float)
    105:106:public void translate(float,float)
    111:112:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    283:284:public void fillTriangle(int,int,int,int,int,int)
    292:292:public int getPixel(int,int)
    317:318:public void drawPixel(int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    42:179:public PixmapIO()
    48:49:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    62:72:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    75:75:private PixmapIO$CIM()
    81:117:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.PixmapIO$PNG$ChunkBuffer
com.badlogic.gdx.graphics.Texture:
    104:105:public Texture(com.badlogic.gdx.graphics.Pixmap)
    108:109:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    112:113:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    156:161:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    175:175:public int getDepth()
    291:291:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.TextureData$Factory:
    87:87:public TextureData$Factory()
    90:90:public static com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.VertexAttributes:
    70:72:public int getOffset(int,int)
    78:78:public int getOffset(int)
    84:87:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator:
    220:221:public void reset()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation:
    52:61:public Animation(float,com.badlogic.gdx.utils.Array)
    68:78:public Animation(float,com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.Animation$PlayMode)
    174:174:public com.badlogic.gdx.graphics.g2d.TextureRegion[] getKeyFrames()
    179:179:public com.badlogic.gdx.graphics.g2d.Animation$PlayMode getPlayMode()
    200:202:public void setFrameDuration(float)
    206:206:public float getFrameDuration()
    211:211:public float getAnimationDuration()
com.badlogic.gdx.graphics.g2d.Batch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    public abstract void setColor(float)
    public abstract float getPackedColor()
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2)
    public abstract void disableBlending()
    public abstract void enableBlending()
    public abstract int getBlendSrcFunc()
    public abstract int getBlendDstFunc()
    public abstract com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    public abstract void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract com.badlogic.gdx.graphics.glutils.ShaderProgram getShader()
    public abstract boolean isBlendingEnabled()
    public abstract boolean isDrawing()
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    79:81:public BitmapFont(boolean)
    108:109:public BitmapFont(com.badlogic.gdx.files.FileHandle)
    238:239:public void setColor(com.badlogic.gdx.graphics.Color)
    258:258:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
    270:270:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int)
    280:280:public float getSpaceWidth()
    285:285:public float getXHeight()
    296:296:public float getAscent()
    321:334:public void setFixedWidthGlyphs(java.lang.CharSequence)
    351:351:public com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache()
    361:361:public boolean ownsTexture()
    420:423:static int indexOf(java.lang.CharSequence,char,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    727:729:public void setLineHeight(float)
    831:831:public com.badlogic.gdx.files.FileHandle getFontFile()
    870:871:public void scale(float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    59:60:public BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont)
    140:157:public void setAlphas(float)
    161:166:public void setColors(float)
    170:171:public void setColors(com.badlogic.gdx.graphics.Color)
    175:177:public void setColors(float,float,float,float)
    182:183:public void setColors(com.badlogic.gdx.graphics.Color,int,int)
    188:213:public void setColors(float,int,int)
    223:224:public void setColor(com.badlogic.gdx.graphics.Color)
    228:229:public void setColor(float,float,float,float)
    242:274:public void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int)
    277:288:public void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
    436:437:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float)
    443:444:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float,float,int,boolean)
    450:451:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float,int,int,float,int,boolean)
    494:494:public float getX()
    499:499:public float getY()
    514:514:public boolean usesIntegerPositions()
    518:518:public float[] getVertices()
    522:522:public float[] getVertices(int)
    526:526:public com.badlogic.gdx.utils.Array getLayouts()
com.badlogic.gdx.graphics.g2d.CpuSpriteBatch
com.badlogic.gdx.graphics.g2d.DistanceFieldFont
com.badlogic.gdx.graphics.g2d.DistanceFieldFont$DistanceFieldFontCache
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    69:90:public Gdx2DPixmap(java.io.InputStream,int)
    103:109:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    136:136:public int getPixel(int,int)
    140:141:public void drawLine(int,int,int,int,int)
    144:145:public void drawRect(int,int,int,int,int)
    148:149:public void drawCircle(int,int,int,int)
    152:153:public void fillRect(int,int,int,int,int)
    156:157:public void fillCircle(int,int,int,int)
    160:161:public void fillTriangle(int,int,int,int,int,int,int)
    174:176:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    182:184:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    242:256:public java.lang.String getFormatString()
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
    private static native void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.GlyphLayout:
    45:47:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence)
    50:52:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,com.badlogic.gdx.graphics.Color,float,int,boolean)
    56:58:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)
com.badlogic.gdx.graphics.g2d.NinePatch:
    public static final int TOP_LEFT
    public static final int TOP_CENTER
    public static final int TOP_RIGHT
    public static final int MIDDLE_LEFT
    public static final int MIDDLE_CENTER
    public static final int MIDDLE_RIGHT
    public static final int BOTTOM_LEFT
    public static final int BOTTOM_CENTER
    public static final int BOTTOM_RIGHT
    69:70:public NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    125:127:public NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
    131:132:public NinePatch(com.badlogic.gdx.graphics.Texture)
    136:138:public NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
    153:185:public varargs NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
    188:189:public NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
    374:374:public com.badlogic.gdx.graphics.Color getColor()
    383:384:public void setLeftWidth(float)
    392:393:public void setRightWidth(float)
    401:402:public void setTopHeight(float)
    410:411:public void setBottomHeight(float)
    414:414:public float getMiddleWidth()
    421:422:public void setMiddleWidth(float)
    425:425:public float getMiddleHeight()
    432:433:public void setMiddleHeight(float)
    460:461:public void setPadLeft(float)
    471:472:public void setPadRight(float)
    482:483:public void setPadTop(float)
    493:494:public void setPadBottom(float)
    498:506:public void scale(float,float)
    509:509:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.ParticleEffect:
    private com.badlogic.gdx.math.collision.BoundingBox bounds
    58:60:public void reset()
    83:87:public boolean isComplete()
    91:97:public void setDuration(int)
    105:107:public void setFlip(boolean,boolean)
    110:112:public void flipY()
    115:115:public com.badlogic.gdx.utils.Array getEmitters()
    120:124:public com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String)
    128:134:public void save(java.io.Writer)
    142:143:public void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas)
    170:171:public void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    220:226:public com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    private static final int UPDATE_SCALE
    private static final int UPDATE_ANGLE
    private static final int UPDATE_ROTATION
    private static final int UPDATE_VELOCITY
    private static final int UPDATE_WIND
    private static final int UPDATE_GRAVITY
    private static final int UPDATE_TINT
    private com.badlogic.gdx.math.collision.BoundingBox bounds
    331:338:public void reset()
    627:627:public java.lang.String getName()
    631:632:public void setName(java.lang.String)
    635:635:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife()
    643:643:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation()
    647:647:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint()
    663:663:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle()
    667:667:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission()
    671:671:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency()
    675:675:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration()
    679:679:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay()
    683:683:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset()
    703:703:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape()
    707:707:public boolean isAttached()
    711:712:public void setAttached(boolean)
    715:715:public boolean isContinuous()
    719:720:public void setContinuous(boolean)
    723:723:public boolean isAligned()
    727:728:public void setAligned(boolean)
    731:731:public boolean isAdditive()
    735:736:public void setAdditive(boolean)
    741:741:public boolean cleansUpBlendFunction()
    757:757:public boolean isBehind()
    761:762:public void setBehind(boolean)
    765:765:public boolean isPremultipliedAlpha()
    769:770:public void setPremultipliedAlpha(boolean)
    773:773:public int getMinParticleCount()
    781:781:public int getMaxParticleCount()
    785:786:public boolean isComplete()
    790:791:public float getPercentComplete()
    795:795:public float getX()
    799:799:public float getY()
    803:803:public int getActiveCount()
    815:822:public void setFlip(boolean,boolean)
    825:838:public void flipY()
    842:856:public com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
    860:909:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    1269:1269:public float[] getTimeline()
    1273:1274:public void setTimeline(float[])
    1278:1278:public float[] getColors()
    1283:1284:public void setColors(float[])
    1318:1326:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    1025:1025:public boolean isAlwaysActive()
    1029:1029:public boolean isActive()
    1033:1034:public void setActive(boolean)
    1037:1041:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    1093:1095:public void setLow(float)
    1107:1108:public void setLowMin(float)
    1115:1116:public void setLowMax(float)
    1119:1123:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    1150:1152:public void setHigh(float)
    1164:1165:public void setHighMin(float)
    1172:1173:public void setHighMax(float)
    1176:1176:public float[] getScaling()
    1180:1181:public void setScaling(float[])
    1184:1184:public float[] getTimeline()
    1188:1189:public void setTimeline(float[])
    1196:1197:public void setRelative(boolean)
    1219:1230:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    1354:1354:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape()
    1358:1359:public void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape)
    1362:1362:public boolean isEdges()
    1366:1367:public void setEdges(boolean)
    1370:1370:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide()
    1374:1375:public void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide)
    1378:1385:public void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.PixmapPacker:
    private static final boolean debug
    private static final java.lang.String ANONYMOUS
    262:266:public synchronized com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
    273:277:public synchronized int getPageIndex(java.lang.String)
    294:296:public synchronized com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    305:317:public synchronized void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    335:335:public int getPageWidth()
    339:339:public int getPageHeight()
    343:343:public int getPadding()
    347:347:public boolean getDuplicateBorder()
    351:351:public boolean getPackToTexture()
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    391:391:public com.badlogic.gdx.graphics.Pixmap getPixmap()
    395:395:public com.badlogic.gdx.utils.OrderedMap getRects()
    401:401:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.PixmapPackerIO
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$1
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters
com.badlogic.gdx.graphics.g2d.PolygonRegion:
    53:53:public float[] getVertices()
    57:57:public short[] getTriangles()
    61:61:public float[] getTextureCoords()
    65:65:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    64:65:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    93:98:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    195:196:public void setX(float)
    202:203:public void setY(float)
    207:208:public void setCenterX(float)
    212:213:public void setCenterY(float)
    217:219:public void setCenter(float,float)
    224:233:public void translateX(float)
    238:247:public void translateY(float)
    311:316:public void setColor(float)
    340:340:public float getRotation()
    346:349:public void rotate(float)
    403:406:public void scale(float)
    483:511:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    557:557:public float getScaleX()
    562:562:public float getScaleY()
    595:598:public void setU(float)
    601:604:public void setV(float)
    607:610:public void setU2(float)
    613:616:public void setV2(float)
    658:679:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    79:80:public SpriteBatch(int)
    206:207:public void setColor(float)
    222:222:public float getPackedColor()
    228:354:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    359:413:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    417:459:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    505:506:public void draw(com.badlogic.gdx.graphics.Texture,float,float)
    510:552:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    586:587:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    759:890:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    894:946:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2)
    1000:1000:public int getBlendSrcFunc()
    1005:1005:public int getBlendDstFunc()
    1016:1016:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1058:1073:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    1077:1080:public com.badlogic.gdx.graphics.glutils.ShaderProgram getShader()
    1089:1089:public boolean isDrawing()
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    211:212:public TextureAtlas(java.lang.String)
    222:223:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    277:284:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    289:289:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    311:317:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    323:328:public com.badlogic.gdx.utils.Array findRegions(java.lang.String)
    335:338:public com.badlogic.gdx.utils.Array createSprites()
    356:362:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    370:375:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    411:411:public com.badlogic.gdx.utils.ObjectSet getTextures()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    579:580:public void setX(float)
    584:585:public void setY(float)
    707:707:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    200:200:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    135:137:public void setU(float)
    144:146:public void setV(float)
    153:155:public void setU2(float)
    162:164:public void setV2(float)
    171:172:public void setRegionX(int)
    179:180:public void setRegionY(int)
    188:193:public void setRegionWidth(int)
    201:206:public void setRegionHeight(int)
    234:244:public void scroll(float,float)
    255:272:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    284:285:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    33:735:public FreeType()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    605:605:public com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format)
    649:649:public int getNumGray()
    private static native int getNumGray(long)
    657:657:public int getPixelMode()
    private static native int getPixelMode(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    143:143:public int getStyleFlags()
    private static native int getStyleFlags(long)
    159:159:public int getAscender()
    private static native int getAscender(long)
    167:167:public int getDescender()
    private static native int getDescender(long)
    175:175:public int getHeight()
    private static native int getHeight(long)
    191:191:public int getMaxAdvanceHeight()
    private static native int getMaxAdvanceHeight(long)
    199:199:public int getUnderlinePosition()
    private static native int getUnderlinePosition(long)
    207:207:public int getUnderlineThickness()
    private static native int getUnderlineThickness(long)
    215:215:public boolean selectSize(int)
    private static native boolean selectSize(long,int)
    223:223:public boolean setCharSize(int,int,int,int)
    private static native boolean setCharSize(long,int,int,int,int)
    239:239:public boolean loadGlyph(int,int)
    private static native boolean loadGlyph(long,int,int)
    271:271:public boolean hasKerning()
    private static native boolean hasKerning(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    671:671:public int getWidth()
    private static native int getWidth(long)
    687:687:public int getHoriBearingX()
    private static native int getHoriBearingX(long)
    695:695:public int getHoriBearingY()
    private static native int getHoriBearingY(long)
    711:711:public int getVertBearingX()
    private static native int getVertBearingX(long)
    719:719:public int getVertBearingY()
    private static native int getVertBearingY(long)
    727:727:public int getVertAdvance()
    private static native int getVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    397:397:public int getLinearHoriAdvance()
    private static native int getLinearHoriAdvance(long)
    405:405:public int getLinearVertAdvance()
    private static native int getLinearVertAdvance(long)
    413:413:public int getAdvanceX()
    private static native int getAdvanceX(long)
    421:421:public int getAdvanceY()
    private static native int getAdvanceY(long)
    437:437:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap()
    private static native long getBitmap(long)
    446:446:public int getBitmapLeft()
    private static native int getBitmapLeft(long)
    454:454:public int getBitmapTop()
    private static native int getBitmapTop(long)
    462:462:public boolean renderGlyph(int)
    private static native boolean renderGlyph(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    69:70:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace(com.badlogic.gdx.files.FileHandle,int)
    74:76:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(byte[],int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    319:319:public int getXppem()
    private static native int getXppem(long)
    327:327:public int getYppem()
    private static native int getYppem(long)
    335:335:public int getXScale()
    private static native int getXscale(long)
    343:343:public int getYscale()
    private static native int getYscale(long)
    375:375:public int getMaxAdvance()
    private static native int getMaxAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    public static final java.lang.String DEFAULT_CHARS
    public static final int NO_MAXIMUM
    141:144:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int,java.lang.String,boolean)
    152:152:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int)
    176:180:public int scaleForPixelHeight(int)
    188:195:public int scaleForPixelWidth(int,int)
    204:204:public int scaleToFitSquare(int,int,int)
    215:263:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean)
    269:269:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int)
    279:279:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean)
    290:295:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean,com.badlogic.gdx.graphics.g2d.PixmapPacker)
    299:299:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter)
    581:582:public static void setMaxTextureSize(int)
    587:587:public static int getMaxTextureSize()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild
com.badlogic.gdx.graphics.g3d.Attribute:
    public abstract com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.Attributes:
    40:40:public final long getMask()
    46:48:public final com.badlogic.gdx.graphics.g3d.Attribute get(long)
    54:54:public final com.badlogic.gdx.graphics.g3d.Attribute get(java.lang.Class,long)
    60:62:public final com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long)
    67:69:public void clear()
    73:73:public int size()
    81:82:private final void disable(long)
    98:100:public final void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
    104:107:public final void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
    112:116:public final void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
    121:123:public final varargs void set(com.badlogic.gdx.graphics.g3d.Attribute[])
    128:130:public final void set(java.lang.Iterable)
    135:143:public final void remove(long)
    177:177:public final boolean same(com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.Environment
com.badlogic.gdx.graphics.g3d.Material:
    38:40:public varargs Material(com.badlogic.gdx.graphics.g3d.Attribute[])
    44:46:public varargs Material(java.lang.String,com.badlogic.gdx.graphics.g3d.Attribute[])
    50:52:public Material(com.badlogic.gdx.utils.Array)
    56:58:public Material(java.lang.String,com.badlogic.gdx.utils.Array)
    62:63:public Material(com.badlogic.gdx.graphics.g3d.Material)
    67:70:public Material(java.lang.String,com.badlogic.gdx.graphics.g3d.Material)
    74:74:public final com.badlogic.gdx.graphics.g3d.Material copy()
com.badlogic.gdx.graphics.g3d.Model:
    95:96:public Model(com.badlogic.gdx.graphics.g3d.model.data.ModelData)
    339:340:public void manageDisposable(com.badlogic.gdx.utils.Disposable)
    375:376:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    384:387:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    393:393:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    400:409:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
    415:415:public com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String)
    422:431:public com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelBatch
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool
com.badlogic.gdx.graphics.g3d.ModelInstance
com.badlogic.gdx.graphics.g3d.Renderable
com.badlogic.gdx.graphics.g3d.RenderableProvider
com.badlogic.gdx.graphics.g3d.Shader
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute:
    public static final java.lang.String Alias
    29:29:public static final boolean is(long)
    60:61:public BlendingAttribute(int,int)
    64:65:public BlendingAttribute(boolean,float)
    68:69:public BlendingAttribute(float)
    78:78:public com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute copy()
    24:24:public bridge synthetic com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String AmbientAlias
    public static final java.lang.String EmissiveAlias
    public static final java.lang.String ReflectionAlias
    public static final java.lang.String AmbientLightAlias
    public static final java.lang.String FogAlias
    46:46:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(com.badlogic.gdx.graphics.Color)
    50:50:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(float,float,float,float)
    54:54:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color)
    58:58:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(float,float,float,float)
    62:62:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color)
    66:66:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(float,float,float,float)
    70:70:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(com.badlogic.gdx.graphics.Color)
    74:74:public static final com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(float,float,float,float)
    90:92:public ColorAttribute(long,float,float,float,float)
    95:96:public ColorAttribute(com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute)
    100:100:public com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute
com.badlogic.gdx.graphics.g3d.attributes.DirectionalLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute:
    public static final java.lang.String ShininessAlias
    public static final java.lang.String AlphaTestAlias
    28:28:public static com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createShininess(float)
    35:35:public static com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createAlphaTest(float)
    41:42:public FloatAttribute(long)
    51:51:public com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute
com.badlogic.gdx.graphics.g3d.attributes.PointLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.SpotLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String BumpAlias
    public static final java.lang.String NormalAlias
    public static final java.lang.String AmbientAlias
    public static final java.lang.String EmissiveAlias
    public static final java.lang.String ReflectionAlias
    50:50:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture)
    54:54:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.g2d.TextureRegion)
    58:58:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture)
    62:62:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.g2d.TextureRegion)
    66:66:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.Texture)
    70:70:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.g2d.TextureRegion)
    74:74:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.Texture)
    78:78:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.g2d.TextureRegion)
    82:82:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createAmbient(com.badlogic.gdx.graphics.Texture)
    86:86:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createAmbient(com.badlogic.gdx.graphics.g2d.TextureRegion)
    90:90:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createEmissive(com.badlogic.gdx.graphics.Texture)
    94:94:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createEmissive(com.badlogic.gdx.graphics.g2d.TextureRegion)
    98:98:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createReflection(com.badlogic.gdx.graphics.Texture)
    102:102:public static com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createReflection(com.badlogic.gdx.graphics.g2d.TextureRegion)
    142:144:public TextureAttribute(long,com.badlogic.gdx.graphics.Texture)
    147:149:public TextureAttribute(long,com.badlogic.gdx.graphics.g2d.TextureRegion)
    152:154:public TextureAttribute(com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute)
    157:162:public void set(com.badlogic.gdx.graphics.g2d.TextureRegion)
    166:166:public com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap
com.badlogic.gdx.graphics.g3d.environment.BaseLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight
com.badlogic.gdx.graphics.g3d.environment.PointLight
com.badlogic.gdx.graphics.g3d.environment.ShadowMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics
com.badlogic.gdx.graphics.g3d.environment.SpotLight
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader:
    public static final short VERSION_HI
    public static final short VERSION_LO
    51:52:public G3dModelLoader(com.badlogic.gdx.utils.BaseJsonReader)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    95:95:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    75:77:public ObjLoader$ObjLoaderParameters(boolean)
com.badlogic.gdx.graphics.g3d.model.MeshPart:
    65:71:public MeshPart(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int)
    76:77:public MeshPart(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.graphics.g3d.model.Node:
    105:106:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    111:112:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean)
    118:118:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    124:138:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean)
    144:145:public void attachTo(com.badlogic.gdx.graphics.g3d.model.Node)
    149:153:public void detach()
    157:157:public boolean hasChildren()
    163:163:public int getChildCount()
    169:169:public com.badlogic.gdx.graphics.g3d.model.Node getChild(int)
    175:175:public com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean)
    191:191:public int addChildren(java.lang.Iterable)
    222:227:public int insertChildren(int,java.lang.Iterable)
    243:243:public java.lang.Iterable getChildren()
    253:253:public boolean hasParent()
com.badlogic.gdx.graphics.g3d.model.NodePart:
    51:54:public NodePart(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material)
    64:70:public com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    36:42:public void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    public com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    public int[][] uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    public static final int USAGE_UNKNOWN
    public static final int USAGE_NONE
    public static final int USAGE_DIFFUSE
    public static final int USAGE_EMISSIVE
    public static final int USAGE_AMBIENT
    public static final int USAGE_SPECULAR
    public static final int USAGE_SHININESS
    public static final int USAGE_NORMAL
    public static final int USAGE_BUMP
    public static final int USAGE_TRANSPARENCY
    public static final int USAGE_REFLECTION
com.badlogic.gdx.graphics.g3d.particles.ParallelArray
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelInitializer
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$IntChannel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleController:
    protected static final float DEFAULT_TIME_STEP
    public com.badlogic.gdx.graphics.g3d.particles.ParallelArray particles
    public com.badlogic.gdx.graphics.g3d.particles.ParticleChannels particleChannels
    protected com.badlogic.gdx.math.collision.BoundingBox boundingBox
    62:68:public varargs ParticleController(java.lang.String,com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter,com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer,com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer[])
    79:81:public void setTransform(com.badlogic.gdx.math.Matrix4)
    85:87:public void setTransform(float,float,float,float,float,float,float,float)
    91:92:public void rotate(com.badlogic.gdx.math.Quaternion)
    98:99:public void rotate(com.badlogic.gdx.math.Vector3,float)
    103:104:public void translate(com.badlogic.gdx.math.Vector3)
    107:108:public void setTranslation(com.badlogic.gdx.math.Vector3)
    112:114:public void scale(float,float,float)
    118:119:public void scale(com.badlogic.gdx.math.Vector3)
    123:125:public void mul(com.badlogic.gdx.math.Matrix4)
    129:130:public void getTransform(com.badlogic.gdx.math.Matrix4)
    136:147:public void init()
    150:156:protected void allocateChannels(int)
    161:165:protected void bind()
    169:172:public void start()
    176:178:public void reset()
    182:185:public void end()
    191:194:public void activateParticles(int,int)
    200:203:public void killParticles(int,int)
    207:210:public void update()
    214:217:public void draw()
    221:227:public com.badlogic.gdx.graphics.g3d.particles.ParticleController copy()
    238:240:public com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
    245:252:protected void calculateBoundingBox()
    256:262:private int findIndex(java.lang.Class)
    267:268:public com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer findInfluencer(java.lang.Class)
    273:276:public void removeInfluencer(java.lang.Class)
    280:286:public boolean replaceInfluencer(java.lang.Class,com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer)
    307:311:public void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData)
com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent:
    protected com.badlogic.gdx.graphics.g3d.particles.ParticleController controller
    30:30:public void activateParticles(int,int)
    32:32:public void killParticles(int,int)
    34:34:public void update()
    36:36:public void init()
    38:38:public void start()
    40:40:public void end()
    public abstract com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy()
    44:44:public void allocateChannels()
    46:47:public void set(com.badlogic.gdx.graphics.g3d.particles.ParticleController)
    50:50:public void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData)
com.badlogic.gdx.graphics.g3d.particles.ParticleEffect:
    private com.badlogic.gdx.math.collision.BoundingBox bounds
    39:43:public ParticleEffect(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect)
    45:47:public varargs ParticleEffect(com.badlogic.gdx.graphics.g3d.particles.ParticleController[])
    50:52:public void init()
    55:57:public void start()
    59:61:public void end()
    63:65:public void reset()
    68:70:public void update()
    73:75:public void draw()
    79:81:public void setTransform(com.badlogic.gdx.math.Matrix4)
    85:87:public void rotate(com.badlogic.gdx.math.Quaternion)
    93:95:public void rotate(com.badlogic.gdx.math.Vector3,float)
    99:101:public void translate(com.badlogic.gdx.math.Vector3)
    105:107:public void scale(float,float,float)
    111:113:public void scale(com.badlogic.gdx.math.Vector3)
    117:117:public com.badlogic.gdx.utils.Array getControllers()
    122:126:public com.badlogic.gdx.graphics.g3d.particles.ParticleController findController(java.lang.String)
    137:143:public com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
    158:158:public com.badlogic.gdx.graphics.g3d.particles.ParticleEffect copy()
    163:166:public void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData)
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader:
    76:99:public void save(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter)
    128:131:private java.lang.Object find(com.badlogic.gdx.utils.Array,java.lang.Class)
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter:
    137:139:public ParticleEffectLoader$ParticleEffectLoadParameter(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter
com.badlogic.gdx.graphics.g3d.particles.ParticleShader
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Inputs
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$1
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$2
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$3
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$4
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$5
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$6
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$Distance
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$None
com.badlogic.gdx.graphics.g3d.particles.ParticleSystem
com.badlogic.gdx.graphics.g3d.particles.ResourceData:
    139:141:public ResourceData(java.lang.Object)
    144:151:int getAssetData(java.lang.String,java.lang.Class)
    155:159:public com.badlogic.gdx.utils.Array getAssetDescriptors()
    168:170:public com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData createSaveData()
    175:179:public com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData createSaveData(java.lang.String)
    184:184:public com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData getSaveData()
    189:189:public com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData getSaveData(java.lang.String)
com.badlogic.gdx.graphics.g3d.particles.ResourceData$AssetData:
    98:101:public ResourceData$AssetData(java.lang.String,java.lang.Class)
com.badlogic.gdx.graphics.g3d.particles.ResourceData$Configurable
com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData:
    50:55:public ResourceData$SaveData(com.badlogic.gdx.graphics.g3d.particles.ResourceData)
    58:64:public void saveAsset(java.lang.String,java.lang.Class)
    67:68:public void save(java.lang.String,java.lang.Object)
    71:73:public com.badlogic.gdx.assets.AssetDescriptor loadAsset()
    77:77:public java.lang.Object load(java.lang.String)
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$Config
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$RenderablePool
com.badlogic.gdx.graphics.g3d.particles.batches.BufferedParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.ModelInstanceParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch:
    public abstract void begin()
    public abstract void draw(com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData)
    public abstract void end()
    public abstract void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData)
com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch
com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter:
    public float percent
    20:22:public Emitter(com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter)
    28:29:public void init()
    33:34:public void end()
    37:37:public int getMinParticleCount()
    41:42:public void setMinParticleCount(int)
    45:45:public int getMaxParticleCount()
    49:50:public void setMaxParticleCount(int)
    53:55:public void setParticleCount(int,int)
    58:60:public void set(com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter)
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Angular
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$BrownianAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$CentripetalAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$FaceDirection
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$PolarAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational2D
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational3D
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Strength
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$TangentialAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random$ModelInstancePool
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random$ParticleControllerPool
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Animated
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$AspectTextureRegion
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.ScaleInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerControllerRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer:
    protected com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData renderData
    16:18:protected ParticleControllerRenderer(com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData)
    22:23:public void update()
    38:41:public void set(com.badlogic.gdx.graphics.g3d.particles.ParticleController)
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteRenderer
com.badlogic.gdx.graphics.g3d.particles.values.CylinderSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.EllipseSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue
com.badlogic.gdx.graphics.g3d.particles.values.LineSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue$Triangle
com.badlogic.gdx.graphics.g3d.particles.values.NumericValue
com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue
com.badlogic.gdx.graphics.g3d.particles.values.PointSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide
com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue
com.badlogic.gdx.graphics.g3d.particles.values.RectangleSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue
com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.UnweightedMeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.WeightMeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.shaders.BaseShader
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$GlobalSetter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$LocalSetter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$20
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$21
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$22
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$23
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$24
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$25
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$26
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$27
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$28
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones
com.badlogic.gdx.graphics.g3d.shaders.DepthShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config
com.badlogic.gdx.graphics.g3d.utils.AnimationController
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider
com.badlogic.gdx.graphics.g3d.utils.CameraInputController
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder
com.badlogic.gdx.graphics.g3d.utils.RenderContext
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider
com.badlogic.gdx.graphics.g3d.utils.TextureBinder
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider
com.badlogic.gdx.graphics.glutils.ETC1:
    38:45:public ETC1()
    152:155:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    163:166:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    103:124:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    37:38:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    45:48:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FacedCubemapData
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    76:77:public static void unbind()
com.badlogic.gdx.graphics.glutils.FrameBufferCubemap
com.badlogic.gdx.graphics.glutils.GLFrameBuffer:
    94:95:public GLFrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    258:258:public int getFramebufferHandle()
    263:263:public int getDepthBufferHandle()
    268:268:public int getStencilBufferHandle()
    278:278:public int getWidth()
    283:283:public int getDepth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void flush()
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    51:53:public ImmediateModeRenderer20(boolean,boolean,int)
    97:100:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    120:124:public void texCoord(float,float)
    127:131:public void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.IndexArray:
    82:90:public void setIndices(java.nio.ShortBuffer)
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    63:64:public IndexBufferObject(int)
    124:137:public void setIndices(java.nio.ShortBuffer)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    74:83:public IndexBufferObjectSubData(int)
    130:143:public void setIndices(java.nio.ShortBuffer)
com.badlogic.gdx.graphics.glutils.IndexData:
    public abstract void setIndices(java.nio.ShortBuffer)
com.badlogic.gdx.graphics.glutils.KTXTextureData:
    private static final int GL_TEXTURE_1D
    private static final int GL_TEXTURE_3D
    private static final int GL_TEXTURE_1D_ARRAY_EXT
    private static final int GL_TEXTURE_2D_ARRAY_EXT
    310:310:public int getNumberOfMipMapLevels()
    314:314:public int getNumberOfFaces()
    318:318:public int getGlInternalFormat()
    322:341:public java.nio.ByteBuffer getData(int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:31:private MipMapGenerator()
    36:37:public static void setUseHardwareMipMap(boolean)
    43:44:public static void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapTextureData
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    165:166:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    305:308:public void setUniformi(int,int)
    316:320:public void setUniformi(java.lang.String,int,int)
    323:326:public void setUniformi(int,int,int)
    335:339:public void setUniformi(java.lang.String,int,int,int)
    342:345:public void setUniformi(int,int,int,int)
    355:359:public void setUniformi(java.lang.String,int,int,int,int)
    362:365:public void setUniformi(int,int,int,int,int)
    372:376:public void setUniformf(java.lang.String,float)
    379:382:public void setUniformf(int,float)
    390:394:public void setUniformf(java.lang.String,float,float)
    397:400:public void setUniformf(int,float,float)
    409:413:public void setUniformf(java.lang.String,float,float,float)
    416:419:public void setUniformf(int,float,float,float)
    429:433:public void setUniformf(java.lang.String,float,float,float,float)
    436:439:public void setUniformf(int,float,float,float,float)
    442:446:public void setUniform1fv(java.lang.String,float[],int,int)
    449:452:public void setUniform1fv(int,float[],int,int)
    455:459:public void setUniform2fv(java.lang.String,float[],int,int)
    462:465:public void setUniform2fv(int,float[],int,int)
    468:472:public void setUniform3fv(java.lang.String,float[],int,int)
    475:478:public void setUniform3fv(int,float[],int,int)
    481:485:public void setUniform4fv(java.lang.String,float[],int,int)
    488:491:public void setUniform4fv(int,float[],int,int)
    511:512:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    525:526:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    534:535:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    538:539:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    542:545:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    553:558:public void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    566:571:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    574:577:public void setUniformMatrix4fv(int,float[],int,int)
    580:581:public void setUniformMatrix4fv(java.lang.String,float[],int,int)
    588:589:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    592:593:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    600:601:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    604:605:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    612:613:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    616:617:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    629:634:public void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
    652:657:public void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
    711:716:public void enableVertexAttribute(java.lang.String)
    776:779:public void setAttributef(java.lang.String,float,float,float,float)
    827:827:public boolean hasAttribute(java.lang.String)
    833:833:public int getAttributeType(java.lang.String)
    845:845:public int getAttributeSize(java.lang.String)
    851:851:public boolean hasUniform(java.lang.String)
    857:857:public int getUniformType(java.lang.String)
    863:863:public int getUniformLocation(java.lang.String)
    869:869:public int getUniformSize(java.lang.String)
    874:874:public java.lang.String[] getAttributes()
    879:879:public java.lang.String[] getUniforms()
    884:884:public java.lang.String getVertexShaderSource()
    889:889:public java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    135:135:public com.badlogic.gdx.graphics.Color getColor()
    139:140:public void updateMatrices()
    151:151:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    166:168:public void identity()
    172:174:public void translate(float,float,float)
    178:180:public void rotate(float,float,float,float)
    184:186:public void scale(float,float,float)
    247:248:public final void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    257:258:public final void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    262:263:public final void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    281:328:public void curve(float,float,float,float,float,float,float,float,int)
    332:357:public void triangle(float,float,float,float,float,float)
    361:385:public void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    435:472:public void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    605:606:public void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    773:775:public void x(float,float,float)
    779:780:public void x(com.badlogic.gdx.math.Vector2,float)
    784:785:public void arc(float,float,float,float,float)
    789:840:public void arc(float,float,float,float,float,int)
    844:845:public void circle(float,float,float)
    849:895:public void circle(float,float,float,int)
    899:900:public void ellipse(float,float,float,float)
    904:932:public void ellipse(float,float,float,float,int)
    937:938:public void cone(float,float,float,float,float)
    942:1007:public void cone(float,float,float,float,float,int)
    1011:1039:public void polygon(float[],int,int)
    1043:1044:public void polygon(float[])
    1048:1068:public void polyline(float[],int,int)
    1072:1073:public void polyline(float[])
    1116:1116:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
    1120:1120:public com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer()
com.badlogic.gdx.graphics.glutils.VertexArray:
    79:79:public int getNumMaxVertices()
    91:95:public void updateVertices(int,float[],int,int)
    99:100:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    149:150:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    86:91:protected VertexBufferObject(int,java.nio.ByteBuffer,boolean,com.badlogic.gdx.graphics.VertexAttributes)
    105:105:public int getNumMaxVertices()
    154:161:public void updateVertices(int,float[],int,int)
    166:166:protected int getUsage()
    180:181:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    225:226:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    101:101:public int getNumMaxVertices()
    137:147:public void updateVertices(int,float[],int,int)
    154:155:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    198:199:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    237:237:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO:
    91:91:public int getNumMaxVertices()
    118:125:public void updateVertices(int,float[],int,int)
    134:135:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    205:206:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
    public abstract void updateVertices(int,float[],int,int)
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.profiling.GL20Profiler:
    36:38:public void glActiveTexture(int)
    67:69:public void glClearDepthf(float)
    73:75:public void glClearStencil(int)
    79:81:public void glColorMask(boolean,boolean,boolean,boolean)
    93:95:public void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    99:101:public void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    105:107:public void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    111:113:public void glCullFace(int)
    117:119:public void glDeleteTextures(int,java.nio.IntBuffer)
    123:125:public void glDepthFunc(int)
    135:137:public void glDepthRangef(float,float)
    169:171:public void glFinish()
    175:177:public void glFlush()
    181:183:public void glFrontFace(int)
    187:189:public void glGenTextures(int,java.nio.IntBuffer)
    193:194:public int glGetError()
    211:213:public void glHint(int,int)
    217:219:public void glLineWidth(float)
    229:231:public void glPolygonOffset(float,float)
    235:237:public void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    247:249:public void glStencilFunc(int,int,int)
    253:255:public void glStencilMask(int)
    259:261:public void glStencilOp(int,int,int)
    297:299:public void glBindAttribLocation(int,int,java.lang.String)
    321:323:public void glBlendColor(float,float,float,float)
    327:329:public void glBlendEquation(int)
    333:335:public void glBlendEquationSeparate(int,int)
    339:341:public void glBlendFuncSeparate(int,int,int,int)
    381:383:public void glDeleteBuffers(int,java.nio.IntBuffer)
    387:389:public void glDeleteFramebuffers(int,java.nio.IntBuffer)
    399:401:public void glDeleteRenderbuffers(int,java.nio.IntBuffer)
    411:413:public void glDetachShader(int,int)
    449:451:public void glGenBuffers(int,java.nio.IntBuffer)
    461:463:public void glGenFramebuffers(int,java.nio.IntBuffer)
    467:469:public void glGenRenderbuffers(int,java.nio.IntBuffer)
    485:487:public void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    497:499:public void glGetBooleanv(int,java.nio.Buffer)
    503:505:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    509:511:public void glGetFloatv(int,java.nio.FloatBuffer)
    515:517:public void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    533:535:public void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    551:553:public void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    557:559:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    563:565:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    569:571:public void glGetUniformfv(int,int,java.nio.FloatBuffer)
    575:577:public void glGetUniformiv(int,int,java.nio.IntBuffer)
    587:589:public void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    593:595:public void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    599:601:public void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    605:606:public boolean glIsBuffer(int)
    611:612:public boolean glIsEnabled(int)
    617:618:public boolean glIsFramebuffer(int)
    623:624:public boolean glIsProgram(int)
    629:630:public boolean glIsRenderbuffer(int)
    635:636:public boolean glIsShader(int)
    641:642:public boolean glIsTexture(int)
    653:655:public void glReleaseShaderCompiler()
    665:667:public void glSampleCoverage(float,boolean)
    671:673:public void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    683:685:public void glStencilFuncSeparate(int,int,int,int)
    689:691:public void glStencilMaskSeparate(int,int)
    695:697:public void glStencilOpSeparate(int,int,int,int)
    701:703:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    707:709:public void glTexParameteri(int,int,int)
    713:715:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    719:721:public void glUniform1f(int,float)
    725:727:public void glUniform1fv(int,int,java.nio.FloatBuffer)
    737:739:public void glUniform1iv(int,int,java.nio.IntBuffer)
    743:745:public void glUniform2f(int,float,float)
    749:751:public void glUniform2fv(int,int,java.nio.FloatBuffer)
    755:757:public void glUniform2i(int,int,int)
    761:763:public void glUniform2iv(int,int,java.nio.IntBuffer)
    767:769:public void glUniform3f(int,float,float,float)
    773:775:public void glUniform3fv(int,int,java.nio.FloatBuffer)
    779:781:public void glUniform3i(int,int,int,int)
    785:787:public void glUniform3iv(int,int,java.nio.IntBuffer)
    791:793:public void glUniform4f(int,float,float,float,float)
    797:799:public void glUniform4fv(int,int,java.nio.FloatBuffer)
    803:805:public void glUniform4i(int,int,int,int,int)
    809:811:public void glUniform4iv(int,int,java.nio.IntBuffer)
    815:817:public void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    821:823:public void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    827:829:public void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
    840:842:public void glValidateProgram(int)
    846:848:public void glVertexAttrib1f(int,float)
    852:854:public void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    858:860:public void glVertexAttrib2f(int,float,float)
    864:866:public void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    870:872:public void glVertexAttrib3f(int,float,float,float)
    876:878:public void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    882:884:public void glVertexAttrib4f(int,float,float,float,float)
    888:890:public void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    954:956:public void glUniform1fv(int,int,float[],int)
    960:962:public void glUniform1iv(int,int,int[],int)
    966:968:public void glUniform2fv(int,int,float[],int)
    972:974:public void glUniform2iv(int,int,int[],int)
    978:980:public void glUniform3fv(int,int,float[],int)
    984:986:public void glUniform3iv(int,int,int[],int)
    990:992:public void glUniform4fv(int,int,float[],int)
    996:998:public void glUniform4iv(int,int,int[],int)
    1002:1004:public void glUniformMatrix2fv(int,int,boolean,float[],int)
    1008:1010:public void glUniformMatrix3fv(int,int,boolean,float[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler:
    37:39:public void glActiveTexture(int)
    68:70:public void glClearDepthf(float)
    74:76:public void glClearStencil(int)
    80:82:public void glColorMask(boolean,boolean,boolean,boolean)
    94:96:public void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    100:102:public void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    106:108:public void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    112:114:public void glCullFace(int)
    118:120:public void glDeleteTextures(int,java.nio.IntBuffer)
    124:126:public void glDepthFunc(int)
    136:138:public void glDepthRangef(float,float)
    170:172:public void glFinish()
    176:178:public void glFlush()
    182:184:public void glFrontFace(int)
    188:190:public void glGenTextures(int,java.nio.IntBuffer)
    194:195:public int glGetError()
    212:214:public void glHint(int,int)
    218:220:public void glLineWidth(float)
    230:232:public void glPolygonOffset(float,float)
    236:238:public void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    248:250:public void glStencilFunc(int,int,int)
    254:256:public void glStencilMask(int)
    260:262:public void glStencilOp(int,int,int)
    298:300:public void glBindAttribLocation(int,int,java.lang.String)
    322:324:public void glBlendColor(float,float,float,float)
    328:330:public void glBlendEquation(int)
    334:336:public void glBlendEquationSeparate(int,int)
    340:342:public void glBlendFuncSeparate(int,int,int,int)
    382:384:public void glDeleteBuffers(int,java.nio.IntBuffer)
    388:390:public void glDeleteFramebuffers(int,java.nio.IntBuffer)
    400:402:public void glDeleteRenderbuffers(int,java.nio.IntBuffer)
    412:414:public void glDetachShader(int,int)
    450:452:public void glGenBuffers(int,java.nio.IntBuffer)
    462:464:public void glGenFramebuffers(int,java.nio.IntBuffer)
    468:470:public void glGenRenderbuffers(int,java.nio.IntBuffer)
    486:488:public void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    498:500:public void glGetBooleanv(int,java.nio.Buffer)
    504:506:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    510:512:public void glGetFloatv(int,java.nio.FloatBuffer)
    516:518:public void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    534:536:public void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    552:554:public void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    558:560:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    564:566:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    570:572:public void glGetUniformfv(int,int,java.nio.FloatBuffer)
    576:578:public void glGetUniformiv(int,int,java.nio.IntBuffer)
    588:590:public void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    594:596:public void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    600:602:public void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    606:607:public boolean glIsBuffer(int)
    612:613:public boolean glIsEnabled(int)
    618:619:public boolean glIsFramebuffer(int)
    624:625:public boolean glIsProgram(int)
    630:631:public boolean glIsRenderbuffer(int)
    636:637:public boolean glIsShader(int)
    642:643:public boolean glIsTexture(int)
    654:656:public void glReleaseShaderCompiler()
    666:668:public void glSampleCoverage(float,boolean)
    672:674:public void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    684:686:public void glStencilFuncSeparate(int,int,int,int)
    690:692:public void glStencilMaskSeparate(int,int)
    696:698:public void glStencilOpSeparate(int,int,int,int)
    702:704:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    708:710:public void glTexParameteri(int,int,int)
    714:716:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    720:722:public void glUniform1f(int,float)
    726:728:public void glUniform1fv(int,int,java.nio.FloatBuffer)
    738:740:public void glUniform1iv(int,int,java.nio.IntBuffer)
    744:746:public void glUniform2f(int,float,float)
    750:752:public void glUniform2fv(int,int,java.nio.FloatBuffer)
    756:758:public void glUniform2i(int,int,int)
    762:764:public void glUniform2iv(int,int,java.nio.IntBuffer)
    768:770:public void glUniform3f(int,float,float,float)
    774:776:public void glUniform3fv(int,int,java.nio.FloatBuffer)
    780:782:public void glUniform3i(int,int,int,int)
    786:788:public void glUniform3iv(int,int,java.nio.IntBuffer)
    792:794:public void glUniform4f(int,float,float,float,float)
    798:800:public void glUniform4fv(int,int,java.nio.FloatBuffer)
    804:806:public void glUniform4i(int,int,int,int,int)
    810:812:public void glUniform4iv(int,int,java.nio.IntBuffer)
    816:818:public void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    822:824:public void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    828:830:public void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
    841:843:public void glValidateProgram(int)
    847:849:public void glVertexAttrib1f(int,float)
    853:855:public void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    859:861:public void glVertexAttrib2f(int,float,float)
    865:867:public void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    871:873:public void glVertexAttrib3f(int,float,float,float)
    877:879:public void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    883:885:public void glVertexAttrib4f(int,float,float,float,float)
    889:891:public void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    907:909:public void glReadBuffer(int)
    913:917:public void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
    921:925:public void glDrawRangeElements(int,int,int,int,int,int)
    930:932:public void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    937:939:public void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
    944:946:public void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    951:953:public void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
    958:960:public void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
    964:966:public void glGenQueries(int,int[],int)
    970:972:public void glGenQueries(int,java.nio.IntBuffer)
    976:978:public void glDeleteQueries(int,int[],int)
    982:984:public void glDeleteQueries(int,java.nio.IntBuffer)
    988:989:public boolean glIsQuery(int)
    994:996:public void glBeginQuery(int,int)
    1000:1002:public void glEndQuery(int)
    1006:1008:public void glGetQueryiv(int,int,java.nio.IntBuffer)
    1012:1014:public void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
    1018:1019:public boolean glUnmapBuffer(int)
    1024:1025:public java.nio.Buffer glGetBufferPointerv(int,int)
    1030:1033:public void glDrawBuffers(int,java.nio.IntBuffer)
    1037:1039:public void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
    1043:1045:public void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
    1049:1051:public void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
    1055:1057:public void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
    1061:1063:public void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
    1067:1069:public void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
    1074:1076:public void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
    1080:1082:public void glRenderbufferStorageMultisample(int,int,int,int,int)
    1086:1088:public void glFramebufferTextureLayer(int,int,int,int,int)
    1092:1094:public void glFlushMappedBufferRange(int,int,int)
    1104:1106:public void glDeleteVertexArrays(int,int[],int)
    1116:1118:public void glGenVertexArrays(int,int[],int)
    1134:1136:public void glBeginTransformFeedback(int)
    1140:1142:public void glEndTransformFeedback()
    1146:1148:public void glBindBufferRange(int,int,int,int,int)
    1152:1154:public void glBindBufferBase(int,int,int)
    1158:1160:public void glTransformFeedbackVaryings(int,java.lang.String[],int)
    1164:1166:public void glVertexAttribIPointer(int,int,int,int,int)
    1170:1172:public void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
    1176:1178:public void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
    1182:1184:public void glVertexAttribI4i(int,int,int,int,int)
    1188:1190:public void glVertexAttribI4ui(int,int,int,int,int)
    1194:1196:public void glGetUniformuiv(int,int,java.nio.IntBuffer)
    1200:1201:public int glGetFragDataLocation(int,java.lang.String)
    1206:1208:public void glUniform1uiv(int,int,java.nio.IntBuffer)
    1212:1214:public void glUniform3uiv(int,int,java.nio.IntBuffer)
    1218:1220:public void glUniform4uiv(int,int,java.nio.IntBuffer)
    1224:1226:public void glClearBufferiv(int,int,java.nio.IntBuffer)
    1230:1232:public void glClearBufferuiv(int,int,java.nio.IntBuffer)
    1236:1238:public void glClearBufferfv(int,int,java.nio.FloatBuffer)
    1242:1244:public void glClearBufferfi(int,int,float,int)
    1248:1249:public java.lang.String glGetStringi(int,int)
    1254:1256:public void glCopyBufferSubData(int,int,int,int,int)
    1260:1262:public void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
    1266:1268:public void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
    1272:1273:public int glGetUniformBlockIndex(int,java.lang.String)
    1278:1280:public void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
    1284:1286:public void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
    1290:1291:public java.lang.String glGetActiveUniformBlockName(int,int)
    1296:1298:public void glUniformBlockBinding(int,int,int)
    1302:1306:public void glDrawArraysInstanced(int,int,int,int)
    1310:1314:public void glDrawElementsInstanced(int,int,int,int,int)
    1318:1320:public void glGetInteger64v(int,java.nio.LongBuffer)
    1324:1326:public void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
    1330:1332:public void glGenSamplers(int,int[],int)
    1336:1338:public void glGenSamplers(int,java.nio.IntBuffer)
    1342:1344:public void glDeleteSamplers(int,int[],int)
    1348:1350:public void glDeleteSamplers(int,java.nio.IntBuffer)
    1354:1355:public boolean glIsSampler(int)
    1360:1362:public void glBindSampler(int,int)
    1366:1368:public void glSamplerParameteri(int,int,int)
    1372:1374:public void glSamplerParameteriv(int,int,java.nio.IntBuffer)
    1378:1380:public void glSamplerParameterf(int,int,float)
    1384:1386:public void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
    1390:1392:public void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
    1396:1398:public void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
    1402:1404:public void glVertexAttribDivisor(int,int)
    1408:1410:public void glBindTransformFeedback(int,int)
    1414:1416:public void glDeleteTransformFeedbacks(int,int[],int)
    1420:1422:public void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
    1426:1428:public void glGenTransformFeedbacks(int,int[],int)
    1432:1434:public void glGenTransformFeedbacks(int,java.nio.IntBuffer)
    1438:1439:public boolean glIsTransformFeedback(int)
    1444:1446:public void glPauseTransformFeedback()
    1450:1452:public void glResumeTransformFeedback()
    1456:1458:public void glProgramParameteri(int,int,int)
    1462:1464:public void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
    1469:1471:public void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
    1523:1525:public void glUniform1fv(int,int,float[],int)
    1529:1531:public void glUniform1iv(int,int,int[],int)
    1535:1537:public void glUniform2fv(int,int,float[],int)
    1541:1543:public void glUniform2iv(int,int,int[],int)
    1547:1549:public void glUniform3fv(int,int,float[],int)
    1553:1555:public void glUniform3iv(int,int,int[],int)
    1559:1561:public void glUniform4fv(int,int,float[],int)
    1565:1567:public void glUniform4iv(int,int,int[],int)
    1571:1573:public void glUniformMatrix2fv(int,int,boolean,float[],int)
    1577:1579:public void glUniformMatrix3fv(int,int,boolean,float[],int)
com.badlogic.gdx.graphics.profiling.GLProfiler:
    57:60:public static void disable()
com.badlogic.gdx.input.GestureDetector:
    66:67:public GestureDetector(com.badlogic.gdx.input.GestureDetector$GestureListener)
    235:235:public boolean isLongPressed()
    241:242:public boolean isLongPressed(float)
    250:253:public void reset()
    261:262:public void invalidateTapSquare()
    270:271:public void setTapCountInterval(float)
    274:275:public void setLongPressSeconds(float)
    278:279:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    443:449:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.MapLayer:
    54:54:public boolean isVisible()
com.badlogic.gdx.maps.MapLayers:
    31:31:public com.badlogic.gdx.maps.MapLayer get(int)
    48:48:public int getIndex(java.lang.String)
    53:53:public int getIndex(com.badlogic.gdx.maps.MapLayer)
    58:58:public int getCount()
    68:69:public void remove(int)
    73:74:public void remove(com.badlogic.gdx.maps.MapLayer)
    79:79:public com.badlogic.gdx.utils.Array getByType(java.lang.Class)
com.badlogic.gdx.maps.MapObject:
    31:31:public java.lang.String getName()
    41:41:public com.badlogic.gdx.graphics.Color getColor()
    46:47:public void setColor(com.badlogic.gdx.graphics.Color)
    51:51:public float getOpacity()
    56:57:public void setOpacity(float)
    61:61:public boolean isVisible()
com.badlogic.gdx.maps.MapObjects:
    37:37:public com.badlogic.gdx.maps.MapObject get(int)
    43:49:public com.badlogic.gdx.maps.MapObject get(java.lang.String)
    54:54:public int getIndex(java.lang.String)
    59:59:public int getIndex(com.badlogic.gdx.maps.MapObject)
    64:64:public int getCount()
    74:75:public void remove(int)
    79:80:public void remove(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.MapProperties:
    39:39:public boolean containsKey(java.lang.String)
    64:65:public java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class)
    76:77:public void putAll(com.badlogic.gdx.maps.MapProperties)
    81:82:public void remove(java.lang.String)
    86:87:public void clear()
    91:91:public java.util.Iterator getKeys()
    96:96:public java.util.Iterator getValues()
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.objects.EllipseMapObject:
    30:30:public com.badlogic.gdx.math.Ellipse getEllipse()
com.badlogic.gdx.maps.objects.PolygonMapObject:
    22:23:public void setPolygon(com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.maps.objects.PolylineMapObject:
    34:35:public void setPolyline(com.badlogic.gdx.math.Polyline)
com.badlogic.gdx.maps.objects.TextureMapObject:
    36:36:public float getX()
    46:46:public float getY()
    56:56:public float getOriginX()
    61:62:public void setOriginX(float)
    66:66:public float getOriginY()
    71:72:public void setOriginY(float)
    76:76:public float getScaleX()
    86:86:public float getScaleY()
    96:96:public float getRotation()
    106:106:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    111:112:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader:
    protected static final int FLAG_FLIP_HORIZONTALLY
    protected static final int FLAG_FLIP_VERTICALLY
    protected static final int FLAG_FLIP_DIAGONALLY
    protected static final int MASK_CLEAR
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TiledMapImageLayer:
    40:41:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    48:49:public void setX(float)
    56:57:public void setY(float)
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapTile:
    public abstract com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    public abstract void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    public abstract void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell:
    public static final int ROTATE_0
    public static final int ROTATE_90
    public static final int ROTATE_180
    public static final int ROTATE_270
com.badlogic.gdx.maps.tiled.TiledMapTileSet:
    34:34:public java.lang.String getName()
    77:78:public void removeTile(int)
    82:82:public int size()
com.badlogic.gdx.maps.tiled.TiledMapTileSets:
    36:36:public com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int)
    42:47:public com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String)
    59:60:public void removeTileSet(int)
    64:65:public void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet)
com.badlogic.gdx.maps.tiled.TmxMapLoader:
    56:57:public TmxMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer:
    protected static final int NUM_VERTICES
    75:75:public com.badlogic.gdx.maps.tiled.TiledMap getMap()
    83:83:public float getUnitScale()
    87:87:public com.badlogic.gdx.graphics.g2d.Batch getBatch()
    91:91:public com.badlogic.gdx.math.Rectangle getViewBounds()
    95:96:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    98:104:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
    107:108:public BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
    120:124:public void setView(com.badlogic.gdx.graphics.OrthographicCamera)
    134:147:public void render()
    151:165:public void render(int[])
    169:172:public void renderObjects(com.badlogic.gdx.maps.MapLayer)
    177:177:public void renderObject(com.badlogic.gdx.maps.MapObject)
    240:242:protected void beginRender()
    246:247:protected void endRender()
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer:
    51:52:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
    55:56:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
    59:60:public OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile:
    57:57:public com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    62:63:public void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    89:89:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    113:113:public int[] getAnimationIntervals()
    117:129:public void setAnimationIntervals(int[])
    142:143:public static void updateAnimationBaseTime()
    149:159:public AnimatedTiledMapTile(float,com.badlogic.gdx.utils.Array)
    179:179:public com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile[] getFrameTiles()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile:
    50:50:public com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
    55:56:public void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
    73:74:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    106:112:public StaticTiledMapTile(com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile)
com.badlogic.gdx.math.Affine2:
    private static final long serialVersionUID
    44:46:public Affine2(com.badlogic.gdx.math.Affine2)
    51:57:public com.badlogic.gdx.math.Affine2 idt()
    64:70:public com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Affine2)
    77:85:public com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Matrix3)
    98:106:public com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Matrix4)
    114:120:public com.badlogic.gdx.math.Affine2 setToTranslation(float,float)
    127:127:public com.badlogic.gdx.math.Affine2 setToTranslation(com.badlogic.gdx.math.Vector2)
    135:141:public com.badlogic.gdx.math.Affine2 setToScaling(float,float)
    148:148:public com.badlogic.gdx.math.Affine2 setToScaling(com.badlogic.gdx.math.Vector2)
    155:164:public com.badlogic.gdx.math.Affine2 setToRotation(float)
    171:180:public com.badlogic.gdx.math.Affine2 setToRotationRad(float)
    188:194:public com.badlogic.gdx.math.Affine2 setToRotation(float,float)
    202:208:public com.badlogic.gdx.math.Affine2 setToShearing(float,float)
    215:215:public com.badlogic.gdx.math.Affine2 setToShearing(com.badlogic.gdx.math.Vector2)
    254:254:public com.badlogic.gdx.math.Affine2 setToTrnRotScl(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    266:283:public com.badlogic.gdx.math.Affine2 setToTrnRotRadScl(float,float,float,float,float)
    293:293:public com.badlogic.gdx.math.Affine2 setToTrnRotRadScl(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    304:310:public com.badlogic.gdx.math.Affine2 setToTrnScl(float,float,float,float)
    319:319:public com.badlogic.gdx.math.Affine2 setToTrnScl(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    327:333:public com.badlogic.gdx.math.Affine2 setToProduct(com.badlogic.gdx.math.Affine2,com.badlogic.gdx.math.Affine2)
    340:358:public com.badlogic.gdx.math.Affine2 inv()
    369:382:public com.badlogic.gdx.math.Affine2 mul(com.badlogic.gdx.math.Affine2)
    423:423:public com.badlogic.gdx.math.Affine2 translate(com.badlogic.gdx.math.Vector2)
    431:433:public com.badlogic.gdx.math.Affine2 preTranslate(float,float)
    440:440:public com.badlogic.gdx.math.Affine2 preTranslate(com.badlogic.gdx.math.Vector2)
    448:452:public com.badlogic.gdx.math.Affine2 scale(float,float)
    459:459:public com.badlogic.gdx.math.Affine2 scale(com.badlogic.gdx.math.Vector2)
    467:473:public com.badlogic.gdx.math.Affine2 preScale(float,float)
    480:480:public com.badlogic.gdx.math.Affine2 preScale(com.badlogic.gdx.math.Vector2)
    487:501:public com.badlogic.gdx.math.Affine2 rotate(float)
    508:522:public com.badlogic.gdx.math.Affine2 rotateRad(float)
    529:547:public com.badlogic.gdx.math.Affine2 preRotate(float)
    554:572:public com.badlogic.gdx.math.Affine2 preRotateRad(float)
    580:589:public com.badlogic.gdx.math.Affine2 shear(float,float)
    596:596:public com.badlogic.gdx.math.Affine2 shear(com.badlogic.gdx.math.Vector2)
    604:617:public com.badlogic.gdx.math.Affine2 preShear(float,float)
    624:624:public com.badlogic.gdx.math.Affine2 preShear(com.badlogic.gdx.math.Vector2)
    630:630:public float det()
    637:639:public com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2)
    645:645:public boolean isTranslation()
    651:651:public boolean isIdt()
    656:660:public void applyTo(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.Bresenham2
com.badlogic.gdx.math.Bresenham2$1
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle:
    46:50:public Circle(com.badlogic.gdx.math.Vector2,float)
    55:59:public Circle(com.badlogic.gdx.math.Circle)
    65:69:public Circle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    87:90:public void set(com.badlogic.gdx.math.Vector2,float)
    96:99:public void set(com.badlogic.gdx.math.Circle)
    106:109:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    114:116:public void setPosition(com.badlogic.gdx.math.Vector2)
    122:124:public void setPosition(float,float)
    129:130:public void setX(float)
    135:136:public void setY(float)
    141:142:public void setRadius(float)
    162:164:public boolean contains(com.badlogic.gdx.math.Vector2)
    170:175:public boolean contains(com.badlogic.gdx.math.Circle)
    181:185:public boolean overlaps(com.badlogic.gdx.math.Circle)
    196:196:public float circumference()
    201:201:public float area()
com.badlogic.gdx.math.ConvexHull
com.badlogic.gdx.math.CumulativeDistribution
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue
com.badlogic.gdx.math.DelaunayTriangulator
com.badlogic.gdx.math.EarClippingTriangulator:
    private static final int CONCAVE
    private static final int TANGENTIAL
    private static final int CONVEX
    52:52:public com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.math.Ellipse:
    private static final long serialVersionUID
    41:46:public Ellipse(com.badlogic.gdx.math.Ellipse)
    66:71:public Ellipse(com.badlogic.gdx.math.Vector2,float,float)
    73:78:public Ellipse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    83:88:public Ellipse(com.badlogic.gdx.math.Circle)
    97:100:public boolean contains(float,float)
    109:109:public boolean contains(com.badlogic.gdx.math.Vector2)
    119:123:public void set(float,float,float,float)
    129:133:public void set(com.badlogic.gdx.math.Ellipse)
    136:140:public void set(com.badlogic.gdx.math.Circle)
    143:147:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    153:156:public com.badlogic.gdx.math.Ellipse setPosition(com.badlogic.gdx.math.Vector2)
    164:167:public com.badlogic.gdx.math.Ellipse setPosition(float,float)
    175:178:public com.badlogic.gdx.math.Ellipse setSize(float,float)
    183:183:public float area()
    191:198:public float circumference()
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    98:102:public boolean pointInFrustum(float,float,float)
    111:114:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    125:127:public boolean sphereInFrustum(float,float,float,float)
    136:139:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    150:152:public boolean sphereInFrustumWithoutNearFar(float,float,float,float)
    160:172:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
    178:178:public boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    184:196:public boolean boundsInFrustum(float,float,float,float,float,float)
com.badlogic.gdx.math.GeometryUtils
com.badlogic.gdx.math.GridPoint2
com.badlogic.gdx.math.GridPoint3
com.badlogic.gdx.math.Interpolation$Bounce:
    247:248:public Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn:
    337:338:public Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut:
    269:274:public Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float FLOAT_ROUNDING_ERROR
    public static final float PI
    public static final float PI2
    public static final float E
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    25:90:public MathUtils()
    106:128:public static float atan2(float,float)
    142:142:public static int random(int,int)
    147:147:public static long random(long)
    152:152:public static long random(long,long)
    157:157:public static boolean randomBoolean()
    162:162:public static boolean randomBoolean(float)
    182:182:public static int randomSign()
    190:190:public static float randomTriangular()
    199:199:public static float randomTriangular(float)
    209:209:public static float randomTriangular(float,float)
    218:221:public static float randomTriangular(float,float,float)
    245:247:public static short clamp(short,short,short)
    257:259:public static long clamp(long,long,long)
    269:271:public static double clamp(double,double,double)
    278:278:public static float lerp(float,float,float)
    292:292:public static int floor(float)
    298:298:public static int floorPositive(float)
    304:304:public static int ceil(float)
    310:310:public static int ceilPositive(float)
    316:316:public static int round(float)
    321:321:public static int roundPositive(float)
    326:326:public static boolean isZero(float)
    332:332:public static boolean isZero(float,float)
    347:347:public static boolean isEqual(float,float,float)
    352:352:public static float log(float,float)
    357:357:public static float log2(float)
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Sin:
    51:51:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    53:55:public Matrix3(float[])
    81:105:public com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3)
    116:140:public com.badlogic.gdx.math.Matrix3 mulLeft(com.badlogic.gdx.math.Matrix3)
    147:147:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    154:170:public com.badlogic.gdx.math.Matrix3 setToRotationRad(float)
    174:174:public com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float)
    178:189:public com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float,float)
    197:211:public com.badlogic.gdx.math.Matrix3 setToTranslation(float,float)
    218:232:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    241:251:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    258:268:public com.badlogic.gdx.math.Matrix3 setToScaling(com.badlogic.gdx.math.Vector2)
    280:281:public float det()
    289:315:public com.badlogic.gdx.math.Matrix3 inv()
    322:323:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3)
    330:342:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Affine2)
    349:359:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
    369:370:public com.badlogic.gdx.math.Matrix3 set(float[])
    377:379:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    387:389:public com.badlogic.gdx.math.Matrix3 trn(float,float)
    396:398:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    407:420:public com.badlogic.gdx.math.Matrix3 translate(float,float)
    428:441:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    449:449:public com.badlogic.gdx.math.Matrix3 rotate(float)
    457:474:public com.badlogic.gdx.math.Matrix3 rotateRad(float)
    483:494:public com.badlogic.gdx.math.Matrix3 scale(float,float)
    502:513:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    519:519:public float[] getValues()
    523:525:public com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2)
    529:532:public com.badlogic.gdx.math.Vector2 getScale(com.badlogic.gdx.math.Vector2)
    536:536:public float getRotation()
    540:540:public float getRotationRad()
    547:549:public com.badlogic.gdx.math.Matrix3 scl(float)
    556:558:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    565:567:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    574:587:public com.badlogic.gdx.math.Matrix3 transpose()
    598:619:private static void mul(float[],float[])
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    94:96:public Matrix4(float[])
    100:102:public Matrix4(com.badlogic.gdx.math.Quaternion)
    108:110:public Matrix4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    136:136:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    147:147:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float)
    155:155:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion)
    170:194:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float)
    257:273:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    278:278:public com.badlogic.gdx.math.Matrix4 cpy()
    286:289:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    299:302:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    307:307:public float[] getValues()
    332:334:public com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4)
    341:357:public com.badlogic.gdx.math.Matrix4 tra()
    452:452:public float det()
    465:465:public float det3x3()
    479:500:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
    515:538:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float,float,float)
    565:566:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    615:618:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    628:631:public com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float)
    640:644:public com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3)
    669:676:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    691:698:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    710:714:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    723:727:public com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float)
    738:742:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    753:757:public com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float)
    765:765:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    777:777:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    786:787:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    795:799:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    809:813:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    867:872:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    886:888:public com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float)
    897:910:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float)
    918:935:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[])
    945:960:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[])
    966:982:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    1027:1033:public com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Affine2)
    1047:1053:public com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Matrix4)
    1057:1060:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    1064:1067:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    1071:1074:public com.badlogic.gdx.math.Matrix4 scl(float)
    1078:1081:public com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3)
    1089:1089:public com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean)
    1096:1096:public com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion)
    1101:1101:public float getScaleXSquared()
    1106:1106:public float getScaleYSquared()
    1111:1111:public float getScaleZSquared()
    1116:1117:public float getScaleX()
    1122:1123:public float getScaleY()
    1128:1129:public float getScaleZ()
    1135:1135:public com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3)
    1140:1143:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1406:1406:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1444:1446:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1456:1458:public com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float)
    1469:1471:public com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float)
    1482:1484:public com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float)
    1503:1503:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    1537:1549:public void extract4x3Matrix(float[])
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    58:61:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    69:71:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    91:93:public void set(float,float,float,float)
    100:100:public float distance(com.badlogic.gdx.math.Vector3)
    109:116:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    127:134:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    143:144:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    149:149:public com.badlogic.gdx.math.Vector3 getNormal()
    154:154:public float getD()
    162:164:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    167:169:public void set(float,float,float,float,float,float)
    175:177:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon:
    private com.badlogic.gdx.math.Rectangle bounds
    48:48:public float[] getVertices()
    99:102:public void setOrigin(float,float)
    117:120:public void setVertices(float[])
    124:127:public void translate(float,float)
    131:133:public void setRotation(float)
    137:139:public void rotate(float)
    143:146:public void setScale(float,float)
    150:153:public void scale(float)
    157:158:public void dirty()
    162:163:public float area()
    172:193:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    198:209:public boolean contains(float,float)
    214:214:public float getX()
    219:219:public float getY()
    224:224:public float getOriginX()
    229:229:public float getOriginY()
    234:234:public float getRotation()
    239:239:public float getScaleX()
    244:244:public float getScaleY()
com.badlogic.gdx.math.Polyline:
    private float length
    private float scaledLength
    43:43:public float[] getVertices()
    91:101:public float getLength()
    106:116:public float getScaledLength()
    120:120:public float getX()
    124:124:public float getY()
    128:128:public float getOriginX()
    132:132:public float getOriginY()
    136:136:public float getRotation()
    140:140:public float getScaleX()
    144:144:public float getScaleY()
    148:151:public void setOrigin(float,float)
    160:163:public void setVertices(float[])
    166:168:public void setRotation(float)
    171:173:public void rotate(float)
    176:180:public void setScale(float,float)
    183:187:public void scale(float)
    190:191:public void calculateLength()
    194:195:public void calculateScaledLength()
    198:199:public void dirty()
    202:205:public void translate(float,float)
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    93:93:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public static final float len(float,float,float,float)
    108:108:public float len()
    122:122:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    132:150:public com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float)
    156:157:public int getGimbalPole()
    163:164:public float getRollRad()
    170:170:public float getRoll()
    176:177:public float getPitchRad()
    183:183:public float getPitch()
    189:189:public float getYawRad()
    195:195:public float getYaw()
    199:199:public static final float len2(float,float,float,float)
    204:204:public float len2()
    210:218:public com.badlogic.gdx.math.Quaternion nor()
    225:228:public com.badlogic.gdx.math.Quaternion conjugate()
    236:243:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    251:259:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    270:278:public com.badlogic.gdx.math.Quaternion mul(float,float,float,float)
    286:294:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    305:313:public com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float)
    318:322:public com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion)
    327:331:public com.badlogic.gdx.math.Quaternion add(float,float,float,float)
    376:376:public boolean isIdentity()
    381:382:public boolean isIdentity(float)
    392:392:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    401:401:public com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float)
    411:411:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    421:427:public com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float)
    432:432:public com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4)
    439:439:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    444:444:public com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3)
    451:451:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3)
    473:473:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    497:546:public com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float)
    554:556:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    568:570:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    579:609:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    621:626:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[])
    640:644:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[])
    655:677:public com.badlogic.gdx.math.Quaternion exp(float)
    721:721:public static final float dot(float,float,float,float,float,float,float,float)
    728:728:public float dot(com.badlogic.gdx.math.Quaternion)
    738:738:public float dot(float,float,float,float)
    745:749:public com.badlogic.gdx.math.Quaternion mul(float)
    763:763:public float getAxisAngle(com.badlogic.gdx.math.Vector3)
    777:791:public float getAxisAngleRad(com.badlogic.gdx.math.Vector3)
    799:799:public float getAngleRad()
    806:806:public float getAngle()
    823:826:public void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
    839:840:public void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
    848:850:public float getAngleAroundRad(float,float,float)
    857:857:public float getAngleAroundRad(com.badlogic.gdx.math.Vector3)
    866:866:public float getAngleAround(float,float,float)
    873:873:public float getAngleAround(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.RandomXS128:
    private static final double NORM_DOUBLE
    private static final double NORM_FLOAT
    54:56:public RandomXS128(long)
    61:63:public RandomXS128(long,long)
    184:184:public long getState(int)
com.badlogic.gdx.math.Shape2D
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    61:61:public static float len(float,float)
    70:70:public static float len2(float,float)
    75:75:public float len2()
    140:140:public static float dot(float,float,float,float)
    145:145:public float dot(com.badlogic.gdx.math.Vector2)
    149:149:public float dot(float,float)
    162:164:public com.badlogic.gdx.math.Vector2 scl(float,float)
    169:171:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    176:178:public com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float)
    183:185:public com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    189:191:public static float dst(float,float,float,float)
    205:207:public float dst(float,float)
    211:213:public static float dst2(float,float,float,float)
    218:220:public float dst2(com.badlogic.gdx.math.Vector2)
    227:229:public float dst2(float,float)
    234:234:public com.badlogic.gdx.math.Vector2 limit(float)
    239:243:public com.badlogic.gdx.math.Vector2 limit2(float)
    248:257:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    262:262:public com.badlogic.gdx.math.Vector2 setLength(float)
    267:270:public com.badlogic.gdx.math.Vector2 setLength2(float)
    282:286:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    293:293:public float crs(com.badlogic.gdx.math.Vector2)
    301:301:public float crs(float,float)
    307:309:public float angle()
    315:315:public float angle(com.badlogic.gdx.math.Vector2)
    321:321:public float angleRad()
    327:327:public float angleRad(com.badlogic.gdx.math.Vector2)
    333:333:public com.badlogic.gdx.math.Vector2 setAngle(float)
    339:342:public com.badlogic.gdx.math.Vector2 setAngleRad(float)
    348:348:public com.badlogic.gdx.math.Vector2 rotate(float)
    354:363:public com.badlogic.gdx.math.Vector2 rotateRad(float)
    368:376:public com.badlogic.gdx.math.Vector2 rotate90(int)
    381:384:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    389:389:public com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation)
    414:417:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    423:425:public boolean epsilonEquals(float,float,float)
    430:430:public boolean isUnit()
    435:435:public boolean isUnit(float)
    440:440:public boolean isZero()
    445:445:public boolean isZero(float)
    450:450:public boolean isOnLine(com.badlogic.gdx.math.Vector2)
    455:455:public boolean isOnLine(com.badlogic.gdx.math.Vector2,float)
    460:460:public boolean isCollinear(com.badlogic.gdx.math.Vector2,float)
    465:465:public boolean isCollinear(com.badlogic.gdx.math.Vector2)
    470:470:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float)
    475:475:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2)
    480:480:public boolean isPerpendicular(com.badlogic.gdx.math.Vector2)
    485:485:public boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float)
    490:490:public boolean hasSameDirection(com.badlogic.gdx.math.Vector2)
    495:495:public boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2)
    500:502:public com.badlogic.gdx.math.Vector2 setZero()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setZero()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean hasSameDirection(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setLength2(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setLength(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit2(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    63:65:public Vector3(float[])
    71:73:public Vector3(com.badlogic.gdx.math.Vector2,float)
    98:98:public com.badlogic.gdx.math.Vector3 set(float[])
    107:107:public com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float)
    112:112:public com.badlogic.gdx.math.Vector3 cpy()
    134:134:public com.badlogic.gdx.math.Vector3 add(float)
    157:157:public com.badlogic.gdx.math.Vector3 sub(float)
    167:167:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    176:176:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    181:184:public com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float)
    189:192:public com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    197:197:public static float len(float,float,float)
    202:202:public float len()
    207:207:public static float len2(float,float,float)
    218:218:public boolean idt(com.badlogic.gdx.math.Vector3)
    223:226:public static float dst(float,float,float,float,float,float)
    231:234:public float dst(com.badlogic.gdx.math.Vector3)
    239:242:public float dst(float,float,float)
    247:250:public static float dst2(float,float,float,float,float,float)
    255:258:public float dst2(com.badlogic.gdx.math.Vector3)
    267:270:public float dst2(float,float,float)
    282:282:public static float dot(float,float,float,float,float,float)
    296:296:public float dot(float,float,float)
    320:320:public com.badlogic.gdx.math.Vector3 mul4x3(float[])
    338:339:public com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4)
    348:349:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3)
    357:358:public com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3)
    365:365:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    386:387:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    396:397:public com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4)
    407:411:public com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4)
    423:423:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    434:434:public com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float)
    443:444:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    453:454:public com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float)
    459:459:public boolean isUnit()
    464:464:public boolean isUnit(float)
    469:469:public boolean isZero()
    474:474:public boolean isZero(float)
    479:479:public boolean isOnLine(com.badlogic.gdx.math.Vector3,float)
    484:484:public boolean isOnLine(com.badlogic.gdx.math.Vector3)
    489:489:public boolean isCollinear(com.badlogic.gdx.math.Vector3,float)
    494:494:public boolean isCollinear(com.badlogic.gdx.math.Vector3)
    499:499:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float)
    504:504:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3)
    509:509:public boolean isPerpendicular(com.badlogic.gdx.math.Vector3)
    514:514:public boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float)
    519:519:public boolean hasSameDirection(com.badlogic.gdx.math.Vector3)
    524:524:public boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3)
    529:532:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    537:537:public com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation)
    547:563:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    574:574:public com.badlogic.gdx.math.Vector3 limit(float)
    579:583:public com.badlogic.gdx.math.Vector3 limit2(float)
    588:588:public com.badlogic.gdx.math.Vector3 setLength(float)
    593:596:public com.badlogic.gdx.math.Vector3 setLength2(float)
    601:610:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    637:641:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    647:650:public boolean epsilonEquals(float,float,float,float)
    655:658:public com.badlogic.gdx.math.Vector3 setZero()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setZero()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean hasSameDirection(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setLength2(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector setLength(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit2(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    84:84:public float getOldest()
    89:89:public float getLatest()
    94:102:public float standardDeviation()
    106:106:public int getWindowSize()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    45:45:public com.badlogic.gdx.math.collision.Ray cpy()
    53:53:public com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
    63:67:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    81:83:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    96:98:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    106:108:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpRequestBuilder
com.badlogic.gdx.net.HttpRequestHeader
com.badlogic.gdx.net.HttpResponseHeader
com.badlogic.gdx.net.HttpStatus:
    public static final int SC_CONTINUE
    public static final int SC_SWITCHING_PROTOCOLS
    public static final int SC_PROCESSING
    public static final int SC_OK
    public static final int SC_CREATED
    public static final int SC_ACCEPTED
    public static final int SC_NON_AUTHORITATIVE_INFORMATION
    public static final int SC_NO_CONTENT
    public static final int SC_RESET_CONTENT
    public static final int SC_PARTIAL_CONTENT
    public static final int SC_MULTI_STATUS
    public static final int SC_MULTIPLE_CHOICES
    public static final int SC_MOVED_PERMANENTLY
    public static final int SC_MOVED_TEMPORARILY
    public static final int SC_SEE_OTHER
    public static final int SC_NOT_MODIFIED
    public static final int SC_USE_PROXY
    public static final int SC_TEMPORARY_REDIRECT
    public static final int SC_BAD_REQUEST
    public static final int SC_UNAUTHORIZED
    public static final int SC_PAYMENT_REQUIRED
    public static final int SC_FORBIDDEN
    public static final int SC_NOT_FOUND
    public static final int SC_METHOD_NOT_ALLOWED
    public static final int SC_NOT_ACCEPTABLE
    public static final int SC_PROXY_AUTHENTICATION_REQUIRED
    public static final int SC_REQUEST_TIMEOUT
    public static final int SC_CONFLICT
    public static final int SC_GONE
    public static final int SC_LENGTH_REQUIRED
    public static final int SC_PRECONDITION_FAILED
    public static final int SC_REQUEST_TOO_LONG
    public static final int SC_REQUEST_URI_TOO_LONG
    public static final int SC_UNSUPPORTED_MEDIA_TYPE
    public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE
    public static final int SC_EXPECTATION_FAILED
    public static final int SC_INSUFFICIENT_SPACE_ON_RESOURCE
    public static final int SC_METHOD_FAILURE
    public static final int SC_UNPROCESSABLE_ENTITY
    public static final int SC_LOCKED
    public static final int SC_FAILED_DEPENDENCY
    public static final int SC_INTERNAL_SERVER_ERROR
    public static final int SC_NOT_IMPLEMENTED
    public static final int SC_BAD_GATEWAY
    public static final int SC_SERVICE_UNAVAILABLE
    public static final int SC_GATEWAY_TIMEOUT
    public static final int SC_HTTP_VERSION_NOT_SUPPORTED
    public static final int SC_INSUFFICIENT_STORAGE
    38:38:public int getStatusCode()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    59:71:public byte[] getResult()
    77:89:public java.lang.String getResultAsString()
    95:95:public java.io.InputStream getResultAsStream()
    100:100:public com.badlogic.gdx.net.HttpStatus getStatus()
    105:105:public java.lang.String getHeader(java.lang.String)
    110:110:public java.util.Map getHeaders()
    115:117:private java.io.InputStream getInputStream()
com.badlogic.gdx.net.NetJavaServerSocketImpl:
    79:79:public com.badlogic.gdx.Net$Protocol getProtocol()
    85:87:public com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.NetJavaSocketImpl:
    55:58:public NetJavaSocketImpl(java.net.Socket,com.badlogic.gdx.net.SocketHints)
    80:83:public boolean isConnected()
    90:92:public java.io.InputStream getInputStream()
    99:101:public java.io.OutputStream getOutputStream()
    107:107:public java.lang.String getRemoteAddress()
com.badlogic.gdx.net.ServerSocket:
    public abstract com.badlogic.gdx.Net$Protocol getProtocol()
    public abstract com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.ServerSocketHints:
    23:46:public ServerSocketHints()
com.badlogic.gdx.net.Socket:
    public abstract boolean isConnected()
    public abstract java.io.InputStream getInputStream()
    public abstract java.io.OutputStream getOutputStream()
    public abstract java.lang.String getRemoteAddress()
com.badlogic.gdx.net.SocketHints:
    23:62:public SocketHints()
com.badlogic.gdx.physics.box2d.Body:
    107:112:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    private native long jniCreateFixture(long,long,float)
    127:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    226:229:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    241:242:public void setLinearVelocity(com.badlogic.gdx.math.Vector2)
    284:284:public float getAngularVelocity()
    private native float jniGetAngularVelocity(long)
    298:299:public void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
    309:310:public void applyForce(float,float,float,float,boolean)
    private native void jniApplyForce(long,float,float,float,float,boolean)
    320:321:public void applyForceToCenter(com.badlogic.gdx.math.Vector2,boolean)
    327:328:public void applyForceToCenter(float,float,boolean)
    private native void jniApplyForceToCenter(long,float,float,boolean)
    340:341:public void applyTorque(float,boolean)
    private native void jniApplyTorque(long,float,boolean)
    354:355:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
    376:377:public void applyAngularImpulse(float,boolean)
    private native void jniApplyAngularImpulse(long,float,boolean)
    387:387:public float getMass()
    private native float jniGetMass(long)
    398:398:public float getInertia()
    private native float jniGetInertia(long)
    411:416:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    433:434:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    449:450:public void resetMassData()
    private native void jniResetMassData(long)
    464:467:public com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldPoint(long,float,float,float[])
    484:487:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    504:507:public com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalPoint(long,float,float,float[])
    524:527:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    544:547:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    564:567:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    579:579:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    589:590:public void setLinearDamping(float)
    private native void jniSetLinearDamping(long,float)
    599:599:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    609:610:public void setAngularDamping(float)
    private native void jniSetAngularDamping(long,float)
    619:620:public void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
    private native void jniSetType(long,int)
    658:659:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    668:668:public boolean isBullet()
    private native boolean jniIsBullet(long)
    678:679:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    688:688:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    699:700:public void setAwake(boolean)
    private native void jniSetAwake(long,boolean)
    759:759:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    807:807:public com.badlogic.gdx.physics.box2d.World getWorld()
com.badlogic.gdx.physics.box2d.Box2D
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    312:312:public boolean isDrawBodies()
    316:317:public void setDrawBodies(boolean)
    320:320:public boolean isDrawJoints()
    324:325:public void setDrawJoints(boolean)
    328:328:public boolean isDrawAABBs()
    332:333:public void setDrawAABBs(boolean)
    336:336:public boolean isDrawInactiveBodies()
    340:341:public void setDrawInactiveBodies(boolean)
    344:344:public boolean isDrawVelocities()
    348:349:public void setDrawVelocities(boolean)
    352:352:public boolean isDrawContacts()
    356:357:public void setDrawContacts(boolean)
    360:360:public static com.badlogic.gdx.math.Vector2 getAxis()
    364:365:public static void setAxis(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.ChainShape:
    42:42:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    48:50:public void createLoop(float[])
    55:62:public void createLoop(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateLoop(long,float[],int)
    102:103:public void setPrevVertex(com.badlogic.gdx.math.Vector2)
    107:108:public void setPrevVertex(float,float)
    private native void jniSetPrevVertex(long,float,float)
    117:118:public void setNextVertex(com.badlogic.gdx.math.Vector2)
    122:123:public void setNextVertex(float,float)
    private native void jniSetNextVertex(long,float,float)
    159:159:public boolean isLooped()
com.badlogic.gdx.physics.box2d.CircleShape:
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Contact:
    85:85:public boolean isTouching()
    private native boolean jniIsTouching(long)
    96:97:public void setEnabled(boolean)
    private native void jniSetEnabled(long,boolean)
    106:106:public boolean isEnabled()
    private native boolean jniIsEnabled(long)
    136:136:public int getChildIndexA()
    private native int jniGetChildIndexA(long)
    146:146:public int getChildIndexB()
    private native int jniGetChildIndexB(long)
    157:158:public void setFriction(float)
    private native void jniSetFriction(long,float)
    167:167:public float getFriction()
    private native float jniGetFriction(long)
    177:178:public void resetFriction()
    private native void jniResetFriction(long)
    188:189:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    198:198:public float getRestitution()
    private native float jniGetRestitution(long)
    208:209:public void ResetRestitution()
    private native void jniResetRestitution(long)
    218:218:public float getTangentSpeed()
    private native float jniGetTangentSpeed(long)
    228:229:public void setTangentSpeed(float)
    private native void jniSetTangentSpeed(long,float)
com.badlogic.gdx.physics.box2d.ContactImpulse:
    40:41:public float[] getNormalImpulses()
    private native void jniGetNormalImpulses(long,float[])
    51:52:public float[] getTangentImpulses()
    private native void jniGetTangentImpulses(long,float[])
    62:62:public int getCount()
    private native int jniGetCount(long)
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape:
    43:44:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    48:49:public void set(float,float,float,float)
    private native void jniSet(long,float,float,float,float)
    83:86:public void getVertex0(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex0(long,float[])
    95:96:public void setVertex0(com.badlogic.gdx.math.Vector2)
    99:100:public void setVertex0(float,float)
    private native void jniSetVertex0(long,float,float)
    109:112:public void getVertex3(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex3(long,float[])
    121:122:public void setVertex3(com.badlogic.gdx.math.Vector2)
    125:126:public void setVertex3(float,float)
    private native void jniSetVertex3(long,float,float)
    135:135:public boolean hasVertex0()
    private native boolean jniHasVertex0(long)
    144:145:public void setHasVertex0(boolean)
    private native void jniSetHasVertex0(long,boolean)
    153:153:public boolean hasVertex3()
    private native boolean jniHasVertex3(long)
    162:163:public void setHasVertex3(boolean)
    private native void jniSetHasVertex3(long,boolean)
    172:172:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture:
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    143:144:public void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
    private native void jniSetFilterData(long,short,short,short)
    178:179:public void refilter()
    private native void jniRefilter(long)
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Joint:
    private final com.badlogic.gdx.math.Vector2 reactionForce
    47:50:protected Joint(com.badlogic.gdx.physics.box2d.World,long)
    121:121:public boolean getCollideConnected()
    private native boolean jniGetCollideConnected(long)
    133:136:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    148:148:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    162:162:public java.lang.Object getUserData()
    172:172:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef:
    public com.badlogic.gdx.physics.box2d.JointDef$JointType type
    public com.badlogic.gdx.physics.box2d.Body bodyA
    public com.badlogic.gdx.physics.box2d.Body bodyB
    public boolean collideConnected
    19:47:public JointDef()
com.badlogic.gdx.physics.box2d.JointDef$JointType:
    33:33:public int getValue()
com.badlogic.gdx.physics.box2d.JointEdge:
    26:29:protected JointEdge(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.Manifold:
    40:44:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
    private native int jniGetType(long)
    53:53:public int getPointCount()
    private native int jniGetPointCount(long)
    62:64:public com.badlogic.gdx.math.Vector2 getLocalNormal()
    private native void jniGetLocalNormal(long,float[])
    74:76:public com.badlogic.gdx.math.Vector2 getLocalPoint()
    private native void jniGetLocalPoint(long,float[])
    86:97:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
    private native int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData:
    public float mass
    public float I
com.badlogic.gdx.physics.box2d.PolygonShape:
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    50:56:public void set(com.badlogic.gdx.math.Vector2[])
    67:68:public void set(float[],int,int)
com.badlogic.gdx.physics.box2d.Shape:
    public abstract com.badlogic.gdx.physics.box2d.Shape$Type getType()
    86:86:public int getChildCount()
    private native int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Transform:
    public static final int POS_X
    public static final int POS_Y
    public static final int COS
    public static final int SIN
    41:44:public Transform(com.badlogic.gdx.math.Vector2,float)
    65:68:public void setRotation(float)
    71:71:public float getRotation()
    77:79:public void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World:
    258:258:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    263:265:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    350:351:void destroyFixture(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long,long)
    389:409:public com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)
    413:473:private long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef)
    private native long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float)
    private native long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
    private native long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
    private native long jniCreateGearJoint(long,long,long,boolean,long,long,float)
    private native long jniCreateMotorJoint(long,long,long,boolean,float,float,float,float,float,float)
    private native long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
    private native long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float)
    private native long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
    private native long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float,float,float)
    706:707:public void clearForces()
    private native void jniClearForces(long)
    716:717:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    726:727:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    736:736:public int getProxyCount()
    private native int jniGetProxyCount(long)
    746:746:public int getBodyCount()
    private native int jniGetBodyCount(long)
    756:756:public int getFixtureCount()
    761:761:public int getJointCount()
    private native int jniGetJointcount(long)
    794:797:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    809:809:public boolean isLocked()
    private native boolean jniIsLocked(long)
    819:820:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    829:829:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    844:846:public void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
    private native void jniQueryAABB(long,float,float,float,float)
    919:924:public void getFixtures(com.badlogic.gdx.utils.Array)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    1025:1027:public void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    private native void jniRayCast(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.WorldManifold:
    33:33:public com.badlogic.gdx.math.Vector2 getNormal()
    45:45:public float[] getSeparations()
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.MotorJoint
com.badlogic.gdx.physics.box2d.joints.MotorJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    33:34:public PulleyJoint(com.badlogic.gdx.physics.box2d.World,long)
    69:69:public float getLength1()
    private native float jniGetLength1(long)
    79:79:public float getLength2()
    private native float jniGetLength2(long)
    89:89:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RopeJoint
com.badlogic.gdx.physics.box2d.joints.RopeJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJoint
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WheelJoint
com.badlogic.gdx.physics.box2d.joints.WheelJointDef
com.badlogic.gdx.physics.box2d.utils.Box2DBuild
com.badlogic.gdx.scenes.scene2d.Action:
    79:79:public com.badlogic.gdx.scenes.scene2d.Actor getTarget()
com.badlogic.gdx.scenes.scene2d.Event:
    102:103:public void setBubbles(boolean)
    127:127:public boolean isCapture()
com.badlogic.gdx.scenes.scene2d.Stage:
    private boolean debugInvisible
    461:470:public void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
    547:548:public void addAction(com.badlogic.gdx.scenes.scene2d.Action)
    559:559:public boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    565:565:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    663:663:public com.badlogic.gdx.graphics.g2d.Batch getBatch()
    667:667:public com.badlogic.gdx.utils.viewport.Viewport getViewport()
    671:672:public void setViewport(com.badlogic.gdx.utils.viewport.Viewport)
    714:716:public com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
    724:724:public com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
    743:744:public void setActionsRequestRendering(boolean)
    757:758:public void setDebugInvisible(boolean)
    772:778:public void setDebugUnderMouse(boolean)
    783:789:public void setDebugParentUnderMouse(boolean)
    795:802:public void setDebugTableUnderMouse(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug)
    807:808:public void setDebugTableUnderMouse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.Actions:
    30:30:public Actions()
    40:42:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action)
    46:49:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
    53:55:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action)
    59:62:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
    67:67:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float)
    83:83:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int)
    87:87:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int,float)
    91:95:public static com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int,float,com.badlogic.gdx.math.Interpolation)
    100:100:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float)
    104:104:public static com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float)
    117:117:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
    121:121:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
    125:129:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    134:134:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
    138:138:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
    142:146:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    151:151:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
    168:168:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
    172:172:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
    176:180:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    185:185:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
    189:189:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float)
    193:197:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation)
    202:202:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
    206:206:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float)
    210:214:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation)
    219:219:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
    224:224:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float)
    229:233:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)
    243:243:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float)
    271:271:public static com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float)
    284:284:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
    288:288:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
    292:294:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
    298:300:public static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
    308:310:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
    314:316:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float)
    327:330:public static com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action)
    334:336:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
    355:360:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    364:370:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    374:377:public static varargs com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
    381:381:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
    385:387:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
    398:402:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    406:411:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    415:421:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    425:428:public static varargs com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
    432:432:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
    436:439:public static com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action)
    456:458:public static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
    468:471:public static com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean)
    475:479:public static com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
    490:494:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    44:44:public com.badlogic.gdx.graphics.Color getColor()
    50:51:public void setColor(com.badlogic.gdx.graphics.Color)
    54:54:public float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    27:29:public DelayAction(float)
    43:44:public void finish()
    53:53:public float getTime()
    58:59:public void setTime(float)
    62:62:public float getDuration()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    34:34:public com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.EventAction
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    34:34:public float getAmountX()
    38:39:public void setAmountX(float)
    42:42:public float getAmountY()
    46:47:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    48:51:public void setPosition(float,float,int)
    54:54:public float getX()
    58:59:public void setX(float)
    62:62:public float getY()
    66:67:public void setY(float)
    70:70:public int getAlignment()
    74:75:public void setAlignment(int)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    33:35:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action)
    37:40:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    42:46:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    48:53:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    55:61:public ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    106:106:public com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction:
    38:38:public com.badlogic.gdx.scenes.scene2d.EventListener getListener()
    46:46:public boolean getCapture()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    public static final int FOREVER
    40:41:public void finish()
    55:55:public int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    58:58:public java.lang.Runnable getRunnable()
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    40:42:public void setScale(float)
    45:45:public float getX()
    49:50:public void setX(float)
    53:53:public float getY()
    57:58:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    30:32:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action)
    34:37:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    39:43:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    45:50:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    52:58:public SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    33:35:public TemporalAction(float)
    37:40:public TemporalAction(float,com.badlogic.gdx.math.Interpolation)
    84:85:public void finish()
    101:101:public float getTime()
    106:107:public void setTime(float)
    110:110:public float getDuration()
    119:119:public com.badlogic.gdx.math.Interpolation getInterpolation()
    127:127:public boolean isReverse()
    132:133:public void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection:
    44:44:public boolean getRangeSelect()
    48:49:public void setRangeSelect(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Disableable
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    public abstract void setLeftWidth(float)
    public abstract void setRightWidth(float)
    public abstract void setTopHeight(float)
    public abstract void setBottomHeight(float)
    public abstract void setMinWidth(float)
    public abstract void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.Layout:
    public abstract void layout()
    public abstract void invalidate()
    public abstract void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    31:31:public ScissorStack()
    87:87:public static com.badlogic.gdx.math.Rectangle peekScissors()
    108:109:public static void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    137:143:public static com.badlogic.gdx.math.Rectangle getViewport()
com.badlogic.gdx.scenes.scene2d.utils.Selection:
    63:63:public boolean isEmpty()
    67:67:public int size()
    108:121:public void setAll(com.badlogic.gdx.utils.Array)
    134:146:public void addAll(com.badlogic.gdx.utils.Array)
    149:155:public void remove(java.lang.Object)
    158:170:public void removeAll(com.badlogic.gdx.utils.Array)
    211:211:public com.badlogic.gdx.utils.Array toArray()
    215:215:public com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
    220:221:public void setDisabled(boolean)
    228:228:public boolean getToggle()
    233:234:public void setToggle(boolean)
    256:257:public void setProgrammaticChangeEvents(boolean)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    35:36:public TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils:
    8:8:public UIUtils()
    14:14:public static boolean left()
    18:18:public static boolean left(int)
    22:22:public static boolean right()
    26:26:public static boolean right(int)
    30:30:public static boolean middle()
    34:34:public static boolean middle(int)
    42:42:public static boolean shift(int)
    53:56:public static boolean ctrl(int)
    60:60:public static boolean alt()
    64:64:public static boolean alt(int)
com.badlogic.gdx.utils.Align
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    69:70:public Array(java.lang.Class)
    193:201:public int lastIndexOf(java.lang.Object,boolean)
    243:255:public void removeRange(int,int)
    261:287:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    322:323:public java.lang.Object[] shrink()
    347:348:public void sort()
    363:366:public java.lang.Object selectRanked(java.util.Comparator,int)
    375:378:public int selectRankedIndex(java.util.Comparator,int)
    382:389:public void reverse()
    392:399:public void shuffle()
    412:416:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    430:431:public java.lang.Object random()
    437:437:public java.lang.Object[] toArray()
    491:499:public java.lang.String toString(java.lang.String)
    504:504:public static com.badlogic.gdx.utils.Array of(java.lang.Class)
    509:509:public static com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.Array$ArrayIterator:
    526:527:public Array$ArrayIterator(com.badlogic.gdx.utils.Array)
    558:559:public void reset()
com.badlogic.gdx.utils.ArrayMap:
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter1
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter2
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter1
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter2
    49:50:public ArrayMap(int)
    80:84:public ArrayMap(com.badlogic.gdx.utils.ArrayMap)
    98:108:public int put(java.lang.Object,java.lang.Object,int)
    112:113:public void putAll(com.badlogic.gdx.utils.ArrayMap)
    116:123:public void putAll(com.badlogic.gdx.utils.ArrayMap,int,int)
    144:153:public java.lang.Object getKey(java.lang.Object,boolean)
    157:158:public java.lang.Object getKeyAt(int)
    162:163:public java.lang.Object getValueAt(int)
    167:168:public java.lang.Object firstKey()
    172:173:public java.lang.Object firstValue()
    177:179:public void setKey(int,java.lang.Object)
    182:184:public void setValue(int,java.lang.Object)
    187:199:public void insert(int,java.lang.Object,java.lang.Object)
    216:225:public boolean containsValue(java.lang.Object,boolean)
    241:249:public int indexOfValue(java.lang.Object,boolean)
    253:271:public java.lang.Object removeKey(java.lang.Object)
    275:291:public boolean removeValue(java.lang.Object,boolean)
    312:312:public java.lang.Object peekKey()
    317:317:public java.lang.Object peekValue()
    322:328:public void clear(int)
    343:345:public void shrink()
    350:352:public void ensureCapacity(int)
    365:375:public void reverse()
    378:388:public void shuffle()
    393:399:public void truncate(int)
    482:495:public com.badlogic.gdx.utils.ArrayMap$Values values()
    501:514:public com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries:
    551:552:public void reset()
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder:
    private static final java.lang.String systemLineSeparator
    72:72:public static java.lang.String encodeLines(byte[])
    84:96:public static java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
    113:113:public static char[] encode(byte[],int)
    163:169:public static byte[] decodeLines(java.lang.String)
    230:231:private Base64Coder()
com.badlogic.gdx.utils.BaseJsonReader:
    public abstract com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream)
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    35:35:public BufferUtils()
    82:84:public static void copy(short[],int,java.nio.Buffer,int)
    95:96:public static void copy(char[],int,int,java.nio.Buffer)
    107:108:public static void copy(int[],int,int,java.nio.Buffer)
    119:120:public static void copy(long[],int,int,java.nio.Buffer)
    131:132:public static void copy(float[],int,int,java.nio.Buffer)
    143:144:public static void copy(double[],int,int,java.nio.Buffer)
    156:158:public static void copy(char[],int,java.nio.Buffer,int)
    170:172:public static void copy(int[],int,java.nio.Buffer,int)
    184:186:public static void copy(long[],int,java.nio.Buffer,int)
    198:200:public static void copy(float[],int,java.nio.Buffer,int)
    212:214:public static void copy(double[],int,java.nio.Buffer,int)
    239:240:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4)
    250:251:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4)
    262:275:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int)
    286:299:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int)
    309:310:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3)
    320:321:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3)
    332:342:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int)
    353:363:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int)
    366:366:public static long findFloats(java.nio.Buffer,int,java.nio.Buffer,int)
    370:370:public static long findFloats(float[],int,java.nio.Buffer,int)
    374:374:public static long findFloats(java.nio.Buffer,int,float[],int)
    378:378:public static long findFloats(float[],int,float[],int)
    382:382:public static long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float)
    386:386:public static long findFloats(float[],int,java.nio.Buffer,int,float)
    390:390:public static long findFloats(java.nio.Buffer,int,float[],int,float)
    394:394:public static long findFloats(float[],int,float[],int,float)
    461:463:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    473:475:public static java.nio.ShortBuffer newShortBuffer(int)
    479:481:public static java.nio.CharBuffer newCharBuffer(int)
    491:493:public static java.nio.LongBuffer newLongBuffer(int)
    532:532:public static long getUnsafeBufferAddress(java.nio.Buffer)
    543:547:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    554:554:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void transformV4M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV4M4Jni(float[],int,int,float[],int)
    private static native void transformV3M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV3M4Jni(float[],int,int,float[],int)
    private static native void transformV2M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV2M4Jni(float[],int,int,float[],int)
    private static native void transformV3M3Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV3M3Jni(float[],int,int,float[],int)
    private static native void transformV2M3Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV2M3Jni(float[],int,int,float[],int)
    private static native long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int)
    private static native long find(float[],int,int,java.nio.Buffer,int,int)
    private static native long find(java.nio.Buffer,int,int,float[],int,int)
    private static native long find(float[],int,int,float[],int,int)
    private static native long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float)
    private static native long find(float[],int,int,java.nio.Buffer,int,int,float)
    private static native long find(java.nio.Buffer,int,int,float[],int,int,float)
    private static native long find(float[],int,int,float[],int,int,float)
com.badlogic.gdx.utils.ByteArray
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataBuffer
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray:
    37:38:public DelayedRemovalArray(com.badlogic.gdx.utils.Array)
    41:42:public DelayedRemovalArray(boolean,int,java.lang.Class)
    45:46:public DelayedRemovalArray(boolean,int)
    49:50:public DelayedRemovalArray(boolean,java.lang.Object[],int,int)
    53:54:public DelayedRemovalArray(java.lang.Class)
    61:62:public DelayedRemovalArray(java.lang.Object[])
    108:113:public void removeRange(int,int)
    141:143:public void sort()
    151:153:public void reverse()
    156:158:public void shuffle()
    167:167:public static varargs com.badlogic.gdx.utils.DelayedRemovalArray with(java.lang.Object[])
com.badlogic.gdx.utils.FloatArray:
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[],int,int)
    92:93:public varargs void addAll(float[])
    114:116:public void incr(int,float)
    119:121:public void mul(int,float)
    124:133:public void insert(int,float)
    136:142:public void swap(int,int)
    145:149:public boolean contains(float)
    153:156:public int indexOf(float)
    160:163:public int lastIndexOf(char)
    167:174:public boolean removeValue(float)
    179:187:public float removeIndex(int)
    192:204:public void removeRange(int,int)
    209:222:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    227:227:public float pop()
    249:250:public float[] shrink()
    257:259:public float[] ensureCapacity(int)
    271:272:public void sort()
    275:282:public void reverse()
    285:292:public void shuffle()
    302:303:public float random()
    307:309:public float[] toArray()
    337:348:public boolean equals(java.lang.Object,float)
    366:374:public java.lang.String toString(java.lang.String)
    379:379:public static varargs com.badlogic.gdx.utils.FloatArray with(float[])
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    19:19:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.I18NBundle:
    private static final java.lang.String DEFAULT_ENCODING
    91:91:public static boolean getSimpleFormatter()
    97:98:public static void setSimpleFormatter(boolean)
    104:104:public static boolean getExceptionOnMissingKey()
    111:112:public static void setExceptionOnMissingKey(boolean)
    121:121:public static com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle)
    144:144:public static com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.lang.String)
    431:441:public final java.lang.String get(java.lang.String)
    453:453:public varargs java.lang.String format(java.lang.String,java.lang.Object[])
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    109:111:public void set(int,int)
    114:116:public void incr(int,int)
    119:121:public void mul(int,int)
    136:142:public void swap(int,int)
    145:149:public boolean contains(int)
    153:156:public int indexOf(int)
    160:163:public int lastIndexOf(int)
    167:174:public boolean removeValue(int)
    192:204:public void removeRange(int,int)
    209:222:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    232:232:public int peek()
    237:238:public int first()
    249:250:public int[] shrink()
    271:272:public void sort()
    275:282:public void reverse()
    285:292:public void shuffle()
    297:298:public void truncate(int)
    302:303:public int random()
    351:359:public java.lang.String toString(java.lang.String)
    364:364:public static varargs com.badlogic.gdx.utils.IntArray with(int[])
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Keys keys1
    private com.badlogic.gdx.utils.IntMap$Keys keys2
    63:64:public IntMap(int)
    88:95:public IntMap(com.badlogic.gdx.utils.IntMap)
    171:173:public void putAll(com.badlogic.gdx.utils.IntMap)
    316:328:public java.lang.Object get(int,java.lang.Object)
    339:375:public java.lang.Object remove(int)
    379:388:java.lang.Object removeStash(int)
    406:411:public void shrink(int)
    415:423:public void clear(int)
    426:437:public void clear()
    444:459:public boolean containsValue(java.lang.Object,boolean)
    487:502:public int findKey(java.lang.Object,boolean,int)
    508:510:public void ensureCapacity(int)
    680:693:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.IntMap$Values:
    826:829:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.IntSet
com.badlogic.gdx.utils.IntSet$IntSetIterator
com.badlogic.gdx.utils.JsonReader:
    static final int json_start
    static final int json_first_final
    static final int json_error
    static final int json_en_object
    static final int json_en_array
    static final int json_en_main
com.badlogic.gdx.utils.JsonValue:
    100:100:public boolean has(java.lang.String)
    107:113:public com.badlogic.gdx.utils.JsonValue require(int)
    130:140:public com.badlogic.gdx.utils.JsonValue remove(int)
    162:162:public int size()
    299:309:public char asChar()
    315:341:public java.lang.String[] asStringArray()
    376:399:public double[] asDoubleArray()
    405:428:public long[] asLongArray()
    434:457:public int[] asIntArray()
    463:486:public boolean[] asBooleanArray()
    492:515:public byte[] asByteArray()
    550:573:public char[] asCharArray()
    578:578:public boolean hasChild(java.lang.String)
    584:585:public com.badlogic.gdx.utils.JsonValue getChild(java.lang.String)
    603:604:public double getDouble(java.lang.String,double)
    609:610:public long getLong(java.lang.String,long)
    615:616:public int getInt(java.lang.String,int)
    621:622:public boolean getBoolean(java.lang.String,boolean)
    627:628:public byte getByte(java.lang.String,byte)
    633:634:public short getShort(java.lang.String,short)
    639:640:public char getChar(java.lang.String,char)
    654:656:public float getFloat(java.lang.String)
    662:664:public double getDouble(java.lang.String)
    670:672:public long getLong(java.lang.String)
    678:680:public int getInt(java.lang.String)
    686:688:public boolean getBoolean(java.lang.String)
    694:696:public byte getByte(java.lang.String)
    702:704:public short getShort(java.lang.String)
    710:712:public char getChar(java.lang.String)
    718:720:public java.lang.String getString(int)
    734:736:public double getDouble(int)
    742:744:public long getLong(int)
    750:752:public int getInt(int)
    758:760:public boolean getBoolean(int)
    766:768:public byte getByte(int)
    782:784:public char getChar(int)
    788:788:public com.badlogic.gdx.utils.JsonValue$ValueType type()
    792:794:public void setType(com.badlogic.gdx.utils.JsonValue$ValueType)
    855:855:public com.badlogic.gdx.utils.JsonValue child()
    861:861:public com.badlogic.gdx.utils.JsonValue next()
    865:866:public void setNext(com.badlogic.gdx.utils.JsonValue)
    871:871:public com.badlogic.gdx.utils.JsonValue prev()
    875:876:public void setPrev(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonWriter:
    40:40:public java.io.Writer getWriter()
    94:96:public com.badlogic.gdx.utils.JsonWriter json(java.lang.String)
    113:113:public com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
    117:117:public com.badlogic.gdx.utils.JsonWriter array(java.lang.String)
    126:126:public com.badlogic.gdx.utils.JsonWriter json(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Keys keys1
    private com.badlogic.gdx.utils.LongMap$Keys keys2
    88:95:public LongMap(com.badlogic.gdx.utils.LongMap)
    171:173:public void putAll(com.badlogic.gdx.utils.LongMap)
    315:327:public java.lang.Object get(long,java.lang.Object)
    405:410:public void shrink(int)
    414:422:public void clear(int)
    425:436:public void clear()
    441:456:public boolean containsValue(java.lang.Object,boolean)
    484:499:public long findKey(java.lang.Object,boolean,long)
    505:507:public void ensureCapacity(int)
    672:685:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$Values:
    818:821:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    39:39:public static float intBitsToFloat(int)
    43:43:public static long doubleToLongBits(double)
    47:47:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectFloatMap
com.badlogic.gdx.utils.ObjectFloatMap$Entries
com.badlogic.gdx.utils.ObjectFloatMap$Entry
com.badlogic.gdx.utils.ObjectFloatMap$Keys
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator
com.badlogic.gdx.utils.ObjectFloatMap$Values
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    60:61:public ObjectIntMap(int)
    85:90:public ObjectIntMap(com.badlogic.gdx.utils.ObjectIntMap)
    153:155:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    300:311:public int getAndIncrement(java.lang.Object,int,int)
    315:323:private int getAndIncrementStash(java.lang.Object,int,int)
    327:352:public int remove(java.lang.Object,int)
    356:365:int removeStash(java.lang.Object,int)
    381:386:public void shrink(int)
    390:396:public void clear(int)
    410:414:public boolean containsValue(int)
    441:445:public java.lang.Object findKey(int)
    451:453:public void ensureCapacity(int)
    580:593:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    599:612:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    85:90:public ObjectMap(com.badlogic.gdx.utils.ObjectMap)
    163:166:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    309:318:public java.lang.Object get(java.lang.Object,java.lang.Object)
    322:325:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    388:393:public void shrink(int)
    397:403:public void clear(int)
    422:434:public boolean containsValue(java.lang.Object,boolean)
    480:482:public void ensureCapacity(int)
    565:565:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ObjectSet:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    81:85:public ObjectSet(com.badlogic.gdx.utils.ObjectSet)
    135:136:public void addAll(com.badlogic.gdx.utils.Array)
    139:142:public void addAll(com.badlogic.gdx.utils.Array,int,int)
    145:146:public varargs void addAll(java.lang.Object[])
    149:152:public void addAll(java.lang.Object[],int,int)
    312:317:public void shrink(int)
    467:469:public static varargs com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[])
com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator:
    534:536:public com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
    541:541:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.OrderedMap:
    40:42:public OrderedMap(int)
    45:47:public OrderedMap(int,float)
    50:52:public OrderedMap(com.badlogic.gdx.utils.ObjectMap)
    65:67:public void clear(int)
    75:75:public com.badlogic.gdx.utils.Array orderedKeys()
com.badlogic.gdx.utils.OrderedSet:
    34:36:public OrderedSet(int,float)
    39:41:public OrderedSet(int)
    44:47:public OrderedSet(com.badlogic.gdx.utils.OrderedSet)
    70:70:public com.badlogic.gdx.utils.Array orderedItems()
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter:
    private static final float nano2seconds
    58:61:public void tick()
    66:78:public void tick(float)
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools:
    43:44:public static void set(java.lang.Class,com.badlogic.gdx.utils.Pool)
    62:63:public static void freeAll(com.badlogic.gdx.utils.Array)
    82:83:private Pools()
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.PropertiesUtils:
    private static final int NONE
    private static final int SLASH
    private static final int UNICODE
    private static final int CONTINUE
    private static final int KEY_DONE
    private static final int IGNORE
    private static final java.lang.String LINE_SEPARATOR
    40:41:private PropertiesUtils()
    231:232:public static void store(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String)
    236:253:private static void storeImpl(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String,boolean)
    256:300:private static void dumpString(com.badlogic.gdx.utils.StringBuilder,java.lang.String,boolean,boolean)
    303:332:private static void writeComment(java.io.Writer,java.lang.String)
com.badlogic.gdx.utils.QuickSelect
com.badlogic.gdx.utils.ReflectionPool:
    30:31:public ReflectionPool(java.lang.Class)
    34:35:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.Select
com.badlogic.gdx.utils.SerializationException:
    42:42:public boolean causedBy(java.lang.Class)
    46:49:private boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SharedLibraryLoader:
    73:75:public SharedLibraryLoader(java.lang.String)
    148:157:public java.io.File extractFile(java.lang.String,java.lang.String)
    164:186:private java.io.File getExtractedFile(java.lang.String,java.lang.String)
    191:209:private boolean canWrite(java.io.File)
    215:224:private boolean canExecute(java.io.File)
com.badlogic.gdx.utils.ShortArray:
    38:39:public ShortArray(int)
    52:57:public ShortArray(com.badlogic.gdx.utils.ShortArray)
    62:63:public ShortArray(short[])
    70:73:public ShortArray(boolean,short[],int,int)
    77:80:public void add(int)
    89:90:public void addAll(com.badlogic.gdx.utils.ShortArray)
    93:96:public void addAll(com.badlogic.gdx.utils.ShortArray,int,int)
    99:100:public varargs void addAll(short[])
    103:108:public void addAll(short[],int,int)
    111:112:public short get(int)
    116:118:public void set(int,short)
    121:123:public void incr(int,short)
    126:128:public void mul(int,short)
    131:140:public void insert(int,short)
    143:149:public void swap(int,int)
    152:156:public boolean contains(short)
    160:163:public int indexOf(short)
    167:170:public int lastIndexOf(char)
    174:181:public boolean removeValue(short)
    199:211:public void removeRange(int,int)
    216:229:public boolean removeAll(com.badlogic.gdx.utils.ShortArray)
    234:234:public short pop()
    239:239:public short peek()
    244:245:public short first()
    256:257:public short[] shrink()
    278:279:public void sort()
    282:289:public void reverse()
    292:299:public void shuffle()
    304:305:public void truncate(int)
    309:310:public short random()
    358:366:public java.lang.String toString(java.lang.String)
    371:371:public static varargs com.badlogic.gdx.utils.ShortArray with(short[])
com.badlogic.gdx.utils.SnapshotArray:
    48:49:public SnapshotArray(com.badlogic.gdx.utils.Array)
    56:57:public SnapshotArray(boolean,int)
    60:61:public SnapshotArray(boolean,java.lang.Object[],int,int)
    64:65:public SnapshotArray(java.lang.Class)
    68:69:public SnapshotArray(int)
    72:73:public SnapshotArray(java.lang.Object[])
    133:135:public void removeRange(int,int)
    138:139:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    153:155:public void sort()
    163:165:public void reverse()
    168:170:public void shuffle()
    179:179:public static varargs com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[])
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StreamUtils:
    public static final int DEFAULT_BUFFER_SIZE
    29:131:public StreamUtils()
    42:43:public static void copyStream(java.io.InputStream,java.io.OutputStream,int)
    63:64:public static void copyStream(java.io.InputStream,java.nio.ByteBuffer,int)
    84:84:public static byte[] copyStreamToByteArray(java.io.InputStream)
    98:98:public static java.lang.String copyStreamToString(java.io.InputStream)
    103:103:public static java.lang.String copyStreamToString(java.io.InputStream,int)
    110:117:public static java.lang.String copyStreamToString(java.io.InputStream,int,java.lang.String)
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream:
    143:143:public byte[] getBuffer()
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    55:55:final char[] getValue()
    83:84:public StringBuilder(java.lang.CharSequence)
    86:90:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    185:185:public int capacity()
    201:215:final void delete0(int,int)
    219:227:final void deleteCharAt0(int)
    236:240:public void ensureCapacity(int)
    252:256:public void getChars(int,int,char[],int)
    259:267:final void insert0(int,char[])
    270:282:final void insert0(int,char[],int,int)
    286:293:final void insert0(int,char)
    296:309:final void insert0(int,java.lang.String)
    312:319:final void insert0(int,java.lang.CharSequence,int,int)
    329:340:private void move(int,int)
    343:369:final void replace0(int,int,java.lang.String)
    373:427:final void reverse0()
    435:439:public void setCharAt(int,char)
    467:475:public java.lang.String substring(int)
    581:581:public int lastIndexOf(java.lang.String)
    594:626:public int lastIndexOf(java.lang.String,int)
    634:639:public void trimToSize()
    650:653:public int codePointAt(int)
    665:668:public int codePointBefore(int)
    682:685:public int codePointCount(int,int)
    699:699:public int offsetByCodePoints(int,int)
    954:958:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    968:969:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    980:981:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    991:992:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    1004:1005:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    1017:1018:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    1030:1031:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    1043:1044:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    1056:1057:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    1069:1070:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1082:1083:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1094:1095:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1107:1108:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1123:1124:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1137:1138:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1154:1155:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1168:1169:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1176:1177:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TextFormatter:
    60:64:public varargs java.lang.String format(java.lang.String,java.lang.Object[])
    73:100:private java.lang.String replaceEscapeChars(java.lang.String)
    116:154:private varargs java.lang.String simpleFormat(java.lang.String,java.lang.Object[])
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimeUtils:
    private static final long nanosPerMilli
    21:21:public TimeUtils()
    38:38:public static long nanosToMillis(long)
    45:45:public static long millisToNanos(long)
    52:52:public static long timeSinceNanos(long)
    59:59:public static long timeSinceMillis(long)
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    49:49:public com.badlogic.gdx.utils.Timer$Task postTask(com.badlogic.gdx.utils.Timer$Task)
    78:81:public void stop()
    95:100:public void clear()
    150:150:public static com.badlogic.gdx.utils.Timer$Task post(com.badlogic.gdx.utils.Timer$Task)
    168:168:public static com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.UBJsonWriter
com.badlogic.gdx.utils.UBJsonWriter$JsonObject
com.badlogic.gdx.utils.XmlReader:
    static final int xml_start
    static final int xml_first_final
    static final int xml_error
    static final int xml_en_elementBody
    static final int xml_en_main
    43:44:public com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String)
    71:75:public com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream)
com.badlogic.gdx.utils.XmlReader$Element:
    468:468:public com.badlogic.gdx.utils.ObjectMap getAttributes()
    516:517:public void removeChild(int)
    524:525:public void remove()
    587:594:public com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
    612:614:public com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
    618:624:private void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
    628:628:public float getFloatAttribute(java.lang.String)
    650:650:public boolean getBooleanAttribute(java.lang.String)
    654:656:public boolean getBooleanAttribute(java.lang.String,boolean)
    662:664:public java.lang.String get(java.lang.String)
    684:686:public int getInt(java.lang.String)
    692:694:public int getInt(java.lang.String,int)
    700:702:public float getFloat(java.lang.String)
    708:710:public float getFloat(java.lang.String,float)
    716:718:public boolean getBoolean(java.lang.String)
    724:726:public boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.async.ThreadUtils:
    21:21:public ThreadUtils()
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.badlogic.gdx.utils.reflect.Annotation
com.badlogic.gdx.utils.reflect.ArrayReflection:
    21:21:public ArrayReflection()
com.badlogic.gdx.utils.reflect.ClassReflection:
    23:23:public ClassReflection()
    62:62:public static boolean isArray(java.lang.Class)
    78:83:public static com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
    125:129:public static varargs com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    135:140:public static com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
    146:150:public static varargs com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    156:161:public static com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
    167:171:public static com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
    188:192:public static com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
    198:198:public static boolean isAnnotationPresent(java.lang.Class,java.lang.Class)
    204:209:public static com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations(java.lang.Class)
    216:222:public static com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.reflect.Constructor:
    33:33:public java.lang.Class[] getParameterTypes()
    42:42:public boolean isAccessible()
com.badlogic.gdx.utils.reflect.Field:
    59:59:public boolean isDefaultAccess()
    64:64:public boolean isFinal()
    69:69:public boolean isPrivate()
    74:74:public boolean isProtected()
    79:79:public boolean isPublic()
    94:94:public boolean isVolatile()
    125:125:public boolean isAnnotationPresent(java.lang.Class)
    131:136:public com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations()
    143:152:public com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class)
com.badlogic.gdx.utils.reflect.Method:
    39:39:public java.lang.Class getReturnType()
    44:44:public java.lang.Class[] getParameterTypes()
    49:49:public java.lang.Class getDeclaringClass()
    53:53:public boolean isAccessible()
    57:58:public void setAccessible(boolean)
    62:62:public boolean isAbstract()
    67:67:public boolean isDefaultAccess()
    72:72:public boolean isFinal()
    77:77:public boolean isPrivate()
    82:82:public boolean isProtected()
    87:87:public boolean isPublic()
    92:92:public boolean isNative()
    97:97:public boolean isStatic()
    102:102:public boolean isVarArgs()
    120:120:public boolean isAnnotationPresent(java.lang.Class)
    127:132:public com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations()
    139:148:public com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class)
com.badlogic.gdx.utils.reflect.ReflectionException:
    28:29:public ReflectionException(java.lang.String)
    32:33:public ReflectionException(java.lang.Throwable)
com.badlogic.gdx.utils.viewport.ExtendViewport
com.badlogic.gdx.utils.viewport.FillViewport
com.badlogic.gdx.utils.viewport.FitViewport
com.badlogic.gdx.utils.viewport.ScalingViewport:
    66:66:public com.badlogic.gdx.utils.Scaling getScaling()
    70:71:public void setScaling(com.badlogic.gdx.utils.Scaling)
com.badlogic.gdx.utils.viewport.ScreenViewport
com.badlogic.gdx.utils.viewport.StretchViewport:
    19:20:public StretchViewport(float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.Viewport:
    42:43:public void apply()
    57:58:public final void update(int,int)
    82:85:public com.badlogic.gdx.math.Vector2 project(com.badlogic.gdx.math.Vector2)
    92:93:public com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3)
    100:101:public com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3)
    106:106:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
    117:123:public com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
    140:141:public void setWorldWidth(float)
    149:150:public void setWorldHeight(float)
    163:164:public void setScreenX(int)
    172:173:public void setScreenY(int)
    181:182:public void setScreenWidth(int)
    190:191:public void setScreenHeight(int)
    195:197:public void setScreenPosition(int,int)
    201:203:public void setScreenSize(int,int)
    215:215:public int getLeftGutterWidth()
    220:220:public int getRightGutterX()
    225:225:public int getRightGutterWidth()
    230:230:public int getBottomGutterHeight()
    235:235:public int getTopGutterY()
    240:240:public int getTopGutterHeight()
com.softnuke.biosleep.ActionListener:
    public static final int SIGN_IN
    public static final int SIGN_OUT
    public static final int SIGN_IN_FAILED
    public static final int PREMIUM_ENABLED
    public static final int PREMIUM_DISABLED
    public static final int TOP_SCORE_UPDATED
    public static final int ACHIEVEMENTS_LOADED
    public static final int GAMES_READY
    public static final int APP_INVITE
    public static final int SCORE_SHARED
com.softnuke.biosleep.MyGame:
    28:29:public void MyGame()
    32:33:public void MyGame(com.softnuke.biosleep.PlatformSpecific)
    52:52:public static com.softnuke.biosleep.PlatformSpecific getPlatformResolver()
    113:115:public static void sop(float)
com.softnuke.biosleep.PlatformSpecific:
    public abstract java.lang.String getID()
    public abstract void signOut()
    public abstract void submitLeaderboard(long)
    public abstract void showLeaderboard()
    public abstract void unlockAchievementGPGS(java.lang.String)
    public abstract void showAd()
    public abstract void showVideoAd()
    public abstract void sendStats(int,int,int,int)
com.softnuke.biosleep.android.AndroidLauncher:
    80:85:public java.lang.String getID()
    98:98:public void signOut()
    145:145:public void submitLeaderboard(long)
    151:151:public void showLeaderboard()
    169:169:public void unlockAchievementGPGS(java.lang.String)
    181:181:public void showAd()
    269:269:public void showVideoAd()
    275:275:public void sendStats(int,int,int,int)
com.softnuke.biosleep.android.BuildConfig
com.softnuke.biosleep.android.R
com.softnuke.biosleep.android.R$attr
com.softnuke.biosleep.android.R$drawable
com.softnuke.biosleep.android.R$mipmap
com.softnuke.biosleep.android.R$string
com.softnuke.biosleep.android.R$style
objects.Background:
    private float vy
    com.badlogic.gdx.graphics.g2d.TextureRegion[] layers
    com.badlogic.gdx.graphics.OrthographicCamera camLayer1
    com.badlogic.gdx.graphics.OrthographicCamera camLayer2
    com.badlogic.gdx.graphics.g2d.Sprite cbuildLightSprite
    com.badlogic.gdx.graphics.g2d.Sprite cbuildDarkSprite
    com.badlogic.gdx.graphics.Texture layer1
    com.badlogic.gdx.graphics.Texture layer2
    com.badlogic.gdx.graphics.Texture layer3
objects.Background$ParallaxCamera:
    301:303:public Background$ParallaxCamera(objects.Background,float,float)
objects.BeamSpot:
    com.badlogic.gdx.graphics.g2d.Sprite glow
    com.badlogic.gdx.graphics.g2d.Sprite ray
    198:204:public void reset()
    210:210:public com.badlogic.gdx.physics.box2d.Fixture getFixture()
    216:224:public void setOffScreen(boolean)
    227:230:public void toggle()
    247:247:public float getY()
    251:251:public float getX()
    255:255:public float getWidth()
    259:259:public float getHeight()
objects.Boss:
    private static final float FIRE_TIME
    306:307:public void shoot()
objects.Bullet:
    public static com.badlogic.gdx.graphics.g2d.TextureRegion wallTex
    com.badlogic.gdx.graphics.Texture wallTexx
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect
    59:64:public Bullet(com.badlogic.gdx.physics.box2d.World)
    202:207:public void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    252:252:public com.badlogic.gdx.math.Vector2 getPosition()
    256:256:public float getWidth()
    260:260:public float getHeight()
objects.CBackground
objects.CBackground$ParallaxCamera
objects.Coin:
    226:233:public void setOffScreen(boolean)
    246:246:public float getY()
    250:250:public float getX()
    254:254:public float getWidth()
    258:258:public float getHeight()
    262:262:public float getflyDistance()
objects.Enemy:
    public static final int SCORE_VALUE
    com.badlogic.gdx.graphics.g2d.TextureRegion playerTexR
    com.badlogic.gdx.graphics.Texture playerTex
    com.badlogic.gdx.graphics.g2d.Sprite glow
    com.badlogic.gdx.graphics.g2d.Animation jumpAnime
    com.badlogic.gdx.graphics.g2d.Animation fireAnime
    94:102:public Enemy(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.physics.box2d.Shape)
    217:221:public void render(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
    284:284:public static objects.Enemy getInstance()
    327:327:public com.badlogic.gdx.physics.box2d.Body getBody()
    347:348:public void makeJump()
    364:365:public void stopMove()
objects.FallingPlatform
objects.GameObject:
    com.badlogic.gdx.physics.box2d.Fixture headFixture
    com.badlogic.gdx.physics.box2d.Fixture legFixture
    com.badlogic.gdx.graphics.g2d.Animation moveAnime
    com.badlogic.gdx.graphics.g2d.Animation jumpAnime
    com.badlogic.gdx.graphics.g2d.Animation fireAnime
    60:60:public com.badlogic.gdx.math.Vector2 getPosition()
    64:64:public com.badlogic.gdx.math.Vector2 getStartPosition()
    68:68:public com.badlogic.gdx.physics.box2d.Body getBody()
    76:76:public com.badlogic.gdx.physics.box2d.Fixture getLegFixture()
    80:80:public com.badlogic.gdx.physics.box2d.Fixture getHeadFixture()
objects.GravityReverser:
    com.badlogic.gdx.graphics.g2d.TextureRegion texRegion
    public static final int FLIPED
    public static final int FIXED
    224:231:public void reset()
    243:251:public void setOffScreen(boolean)
    265:265:public float getY()
    269:269:public float getX()
    273:273:public float getWidth()
    277:277:public float getHeight()
objects.Lasers
objects.Light:
    float height
    float width
    39:45:public Light(com.badlogic.gdx.math.Vector2)
    47:53:public Light(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.graphics.Color)
    108:109:public void setColor(com.badlogic.gdx.graphics.Color)
    112:112:public com.badlogic.gdx.graphics.Color getColor()
    129:130:public void disbaleOscillate()
    137:137:public com.badlogic.gdx.math.Vector2 getPosition()
objects.Movers:
    155:159:public void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    193:196:public void reset()
    207:207:public com.badlogic.gdx.physics.box2d.Fixture getFixture()
    213:220:public void setOffScreen(boolean)
    233:233:public float getY()
    237:237:public float getX()
    241:241:public float getWidth()
    245:245:public float getHeight()
    249:249:public float getDistance()
objects.PaxBackground
objects.PaxBackground$ParallaxCamera
objects.Player:
    public static final float WIN_CAM
    public static final float DEATH_CAM
    com.badlogic.gdx.graphics.g2d.TextureRegion playerTexR
    com.badlogic.gdx.graphics.Texture playerTex
    373:376:public void render(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
    673:673:public com.badlogic.gdx.physics.box2d.Body getBody()
    772:772:public com.badlogic.gdx.math.Vector2 startPoint()
objects.Portal:
    objects.Light light
    205:214:public void reset()
    224:224:public com.badlogic.gdx.physics.box2d.Fixture getFixture()
    230:238:public void setOffScreen(boolean)
    251:251:public float getY()
    255:255:public float getX()
    259:259:public float getWidth()
    263:263:public float getHeight()
objects.PowerUp:
    264:264:private float generateY()
    270:287:public void setOffScreen(boolean)
    300:300:public float getY()
    304:304:public float getX()
    308:308:public float getWidth()
    312:312:public float getHeight()
objects.ScanLines
objects.Switch:
    com.badlogic.gdx.graphics.g2d.TextureRegion texRegion
    150:154:public void renderParticles(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    190:198:public void setOffScreen(boolean)
    226:226:public float getY()
    230:230:public float getX()
    234:234:public float getWidth()
    238:238:public float getHeight()
parallax.Parallax
screens.GameScreen:
    private com.badlogic.gdx.scenes.scene2d.ui.Table table
    com.badlogic.gdx.scenes.scene2d.ui.TextButton readyButt
    com.badlogic.gdx.scenes.scene2d.ui.TextButton scoreBoard
    com.badlogic.gdx.scenes.scene2d.ui.TextButton scoreTextButt
    com.badlogic.gdx.scenes.scene2d.ui.TextButton scoreHighTextButt
    com.badlogic.gdx.graphics.g2d.Sprite scoreSprite
    box2dLight.RayHandler rayHandle
    com.badlogic.gdx.graphics.glutils.ShaderProgram greyShader
    com.badlogic.gdx.graphics.g2d.Sprite blackFade
screens.MainMenuScreen:
    public static final java.lang.String PreferenceName
    com.badlogic.gdx.scenes.scene2d.ui.Label totalTextScoreLabel
    com.badlogic.gdx.graphics.g2d.Sprite introAlien
    com.badlogic.gdx.graphics.Texture logoBack
    com.badlogic.gdx.scenes.scene2d.ui.TextButton rabbitButton
    com.badlogic.gdx.scenes.scene2d.ui.TextButton squareButton
    com.badlogic.gdx.scenes.scene2d.ui.TextButton sensaiButton
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlasui
    com.badlogic.gdx.graphics.glutils.ShaderProgram backgroundShader
    com.badlogic.gdx.graphics.Mesh quadMesh
    com.badlogic.gdx.math.Vector2 playBound
    com.badlogic.gdx.math.Vector2 optionBound
    1264:1265:public void showExitDialog()
shaders.DiffuseShader
shaders.Gaussian
shaders.LightShader
shaders.ShadowShader
shaders.WithoutShadowShader
utils.AssetLord:
    public static java.lang.String menu_back_tex
    public static final java.lang.String bullet_tex
    public static final java.lang.String bullet_power_tex
    public static final java.lang.String button_left_tex
    public static final java.lang.String button_right_tex
    public static final java.lang.String button_up_tex
    public static final java.lang.String button_fire_tex
    public static final java.lang.String light_tex
    public static final java.lang.String pause_back_tex
    public static final java.lang.String player_jump_particle
    public static final java.lang.String enemy_kill_particle
    public static final java.lang.String portal_particle
    public static final java.lang.String gravity_rev_particle
    public static final java.lang.String beamspot_particle
    public static final java.lang.String intro_somke_particle
    public static final java.lang.String square_floor_particle
    public static final java.lang.String gothic_font
    public static final java.lang.String mecha_font
    public static final java.lang.String joystix_font
    public static final java.lang.String tiny_font
    public static final java.lang.String small_font
    public static final java.lang.String medium_font
    public static final java.lang.String large_font
    public static final java.lang.String menu_atlas
    public static final java.lang.String menu_skin
    public static final java.lang.String game_atlas
    public static final java.lang.String fire_sound
    public static final java.lang.String finish_sound
    public static final java.lang.String epicLevelup_sound
    public static final java.lang.String coin_sound
    public static final java.lang.String player_hurt_sound
    public static final java.lang.String enemy_hurt_sound
    public static final java.lang.String levelup_sound
    public static final java.lang.String portal_sound
    public static final java.lang.String game_music
    public static final java.lang.String menu_music
utils.CameraShake:
    float nH
    float nW
    public static final float DEFAULT_SHAKE_POWER
    56:57:public void shakeLight(boolean)
    86:86:public boolean getShake()
utils.Cinema:
    public static final int MOV_NONE
    public static final int MOV_INTRO
    public static final int MOV_INTRO_LEVEL
    public static final int MOV_TUT1
    public static final int MOV_TUT_LEVEL_2
    public static final int MOV_TUT_LEVEL_3
    public static final int MOV_TUT_LEVEL_4
    public static final int MOV_TUT_LEVEL_5
    public static final int MOV_TUT_LEVEL_6
    public static final int MOV_TUT_LEVEL_7
    public static final int MOV_TUT_LEVEL_8
    public static final int MOV_TUT_LEVEL_9
    public static final int MOV_TUT_LEVEL_10
    public static final int MOV_TUT_LEVEL_11
    public static final int MOV_TUT_LEVEL_12
    public static final int MOV_TUT_LEVEL_13
    public static final int MOV_TUT_LEVEL_14
    public static final int MOV_TUT_LEVEL_15
    public static final int MOV_TUT_LEVEL_420
    public static final int MOV_TUT_FIRST_EVOL
    public static final int MOV_TUT_SECOND_EVOL
    880:880:private void startLevel1()
    928:931:public void dispose()
utils.Constants
utils.LevelGenerate:
    public static final int MAX_LEVEL
    794:794:public void loadCinematic()
    1513:1518:public void playPlayerHitSound()
utils.LevelGenerate$TaskQueue:
    public static final int GRAVITY_FLI
    public static final int GRAVITY_FIX
    public static final int CLEAR_LEVEL
utils.ScoreManager:
    protected static final java.lang.String UTF8
    public static final int STAR_MILK
    public static final int STAR_ENEMY
    public static final int REVIVE_COST
    164:187:public boolean getBoolean(java.lang.String,boolean)
    204:214:private java.lang.String encBool(boolean)
    251:256:public void reload()
    276:277:public void applyScorePower()
    377:378:public void increaseTimesJumped()
utils.TaskQueue
